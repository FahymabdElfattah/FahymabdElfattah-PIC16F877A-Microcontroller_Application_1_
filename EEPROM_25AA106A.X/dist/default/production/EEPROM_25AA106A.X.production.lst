

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 08 10:56:36 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     0007                     	;# 
    62     0008                     	;# 
    63     0009                     	;# 
    64     000A                     	;# 
    65     000B                     	;# 
    66     000C                     	;# 
    67     000D                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0014                     	;# 
    76     0015                     	;# 
    77     0015                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001B                     	;# 
    85     001C                     	;# 
    86     001D                     	;# 
    87     001E                     	;# 
    88     001F                     	;# 
    89     0081                     	;# 
    90     0085                     	;# 
    91     0086                     	;# 
    92     0087                     	;# 
    93     0088                     	;# 
    94     0089                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0094                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009C                     	;# 
   105     009D                     	;# 
   106     009E                     	;# 
   107     009F                     	;# 
   108     010C                     	;# 
   109     010D                     	;# 
   110     010E                     	;# 
   111     010F                     	;# 
   112     018C                     	;# 
   113     018D                     	;# 
   114     0000                     	;# 
   115     0001                     	;# 
   116     0002                     	;# 
   117     0003                     	;# 
   118     0004                     	;# 
   119     0005                     	;# 
   120     0006                     	;# 
   121     0007                     	;# 
   122     0008                     	;# 
   123     0009                     	;# 
   124     000A                     	;# 
   125     000B                     	;# 
   126     000C                     	;# 
   127     000D                     	;# 
   128     000E                     	;# 
   129     000E                     	;# 
   130     000F                     	;# 
   131     0010                     	;# 
   132     0011                     	;# 
   133     0012                     	;# 
   134     0013                     	;# 
   135     0014                     	;# 
   136     0015                     	;# 
   137     0015                     	;# 
   138     0016                     	;# 
   139     0017                     	;# 
   140     0018                     	;# 
   141     0019                     	;# 
   142     001A                     	;# 
   143     001B                     	;# 
   144     001B                     	;# 
   145     001C                     	;# 
   146     001D                     	;# 
   147     001E                     	;# 
   148     001F                     	;# 
   149     0081                     	;# 
   150     0085                     	;# 
   151     0086                     	;# 
   152     0087                     	;# 
   153     0088                     	;# 
   154     0089                     	;# 
   155     008C                     	;# 
   156     008D                     	;# 
   157     008E                     	;# 
   158     0091                     	;# 
   159     0092                     	;# 
   160     0093                     	;# 
   161     0094                     	;# 
   162     0098                     	;# 
   163     0099                     	;# 
   164     009C                     	;# 
   165     009D                     	;# 
   166     009E                     	;# 
   167     009F                     	;# 
   168     010C                     	;# 
   169     010D                     	;# 
   170     010E                     	;# 
   171     010F                     	;# 
   172     018C                     	;# 
   173     018D                     	;# 
   174     0006                     _PORTBbits	set	6
   175     000C                     _PIR1bits	set	12
   176     0013                     _SSPBUF	set	19
   177     0014                     _SSPCON	set	20
   178     0094                     _SSPSTATbits	set	148
   179     0094                     _SSPSTAT	set	148
   180     0087                     _TRISCbits	set	135
   181     0086                     _TRISBbits	set	134
   182                           
   183                           	psect	cinit
   184     07FB                     start_initialization:	
   185                           ; #config settings
   186                           
   187     07FB                     __initialization:
   188                           
   189                           ; Clear objects allocated to COMMON
   190     07FB  01FA               	clrf	__pbssCOMMON& (0+127)
   191     07FC                     end_of_initialization:	
   192                           ;End of C runtime variable initialization code
   193                           
   194     07FC                     __end_of__initialization:
   195     07FC  0183               	clrf	3
   196     07FD  120A  118A  2FB5   	ljmp	_main	;jump to C main() function
   197                           
   198                           	psect	bssCOMMON
   199     007A                     __pbssCOMMON:
   200     007A                     _eeprom_data:
   201     007A                     	ds	1
   202                           
   203                           	psect	cstackCOMMON
   204     0070                     __pcstackCOMMON:
   205     0070                     ?_int_Port:
   206     0070                     ??_int_Port:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0070                     ?_int_spi:	
   210                           ; 1 bytes @ 0x0
   211                           
   212     0070                     ??_int_spi:	
   213                           ; 1 bytes @ 0x0
   214                           
   215     0070                     ?_spi_send:	
   216                           ; 1 bytes @ 0x0
   217                           
   218     0070                     ?_main:	
   219                           ; 1 bytes @ 0x0
   220                           
   221     0070                     ?_spi_write:	
   222                           ; 1 bytes @ 0x0
   223                           
   224     0070                     ?_spi_read:	
   225                           ; 1 bytes @ 0x0
   226                           
   227     0070                     ??_spi_read:	
   228                           ; 1 bytes @ 0x0
   229                           
   230     0070                     spi_write@value:	
   231                           ; 1 bytes @ 0x0
   232                           
   233                           
   234                           ; 2 bytes @ 0x0
   235     0070                     	ds	2
   236     0072                     ??_spi_send:
   237     0072                     ?_write_to_25AA106A:	
   238                           ; 1 bytes @ 0x2
   239                           
   240     0072                     ?_read_from_25AA106A:	
   241                           ; 1 bytes @ 0x2
   242                           
   243     0072                     ??_spi_write:	
   244                           ; 1 bytes @ 0x2
   245                           
   246     0072                     write_to_25AA106A@lsb:	
   247                           ; 1 bytes @ 0x2
   248                           
   249     0072                     read_from_25AA106A@lsb:	
   250                           ; 1 bytes @ 0x2
   251                           
   252                           
   253                           ; 1 bytes @ 0x2
   254     0072                     	ds	1
   255     0073                     ??_read_from_25AA106A:
   256     0073                     write_to_25AA106A@data:	
   257                           ; 1 bytes @ 0x3
   258                           
   259                           
   260                           ; 1 bytes @ 0x3
   261     0073                     	ds	1
   262     0074                     ??_write_to_25AA106A:
   263     0074                     spi_send@data:	
   264                           ; 1 bytes @ 0x4
   265                           
   266                           
   267                           ; 1 bytes @ 0x4
   268     0074                     	ds	1
   269     0075                     read_from_25AA106A@msb:
   270                           
   271                           ; 1 bytes @ 0x5
   272     0075                     	ds	1
   273     0076                     write_to_25AA106A@msb:
   274                           
   275                           ; 1 bytes @ 0x6
   276     0076                     	ds	1
   277     0077                     ??_main:
   278                           
   279                           ; 1 bytes @ 0x7
   280     0077                     	ds	3
   281                           
   282                           	psect	maintext
   283     07B5                     __pmaintext:	
   284 ;;
   285 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   286 ;;
   287 ;; *************** function _main *****************
   288 ;; Defined at:
   289 ;;		line 27 in file "main.c"
   290 ;; Parameters:    Size  Location     Type
   291 ;;		None
   292 ;; Auto vars:     Size  Location     Type
   293 ;;		None
   294 ;; Return value:  Size  Location     Type
   295 ;;                  1    wreg      void 
   296 ;; Registers used:
   297 ;;		wreg, status,2, status,0, pclath, cstack
   298 ;; Tracked objects:
   299 ;;		On entry : B00/0
   300 ;;		On exit  : 0/0
   301 ;;		Unchanged: 0/0
   302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   303 ;;      Params:         0       0       0       0       0
   304 ;;      Locals:         0       0       0       0       0
   305 ;;      Temps:          3       0       0       0       0
   306 ;;      Totals:         3       0       0       0       0
   307 ;;Total ram usage:        3 bytes
   308 ;; Hardware stack levels required when called: 2
   309 ;; This function calls:
   310 ;;		_int_Port
   311 ;;		_int_spi
   312 ;;		_read_from_25AA106A
   313 ;;		_spi_send
   314 ;;		_write_to_25AA106A
   315 ;; This function is called by:
   316 ;;		Startup code after reset
   317 ;; This function uses a non-reentrant model
   318 ;;
   319                           
   320     07B5                     _main:	
   321                           ;psect for function _main
   322                           
   323     07B5                     l728:	
   324                           ;incstack = 0
   325                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   326                           
   327                           
   328                           ;main.c: 28:     }
   329     07B5  120A  118A  2714  120A  118A  	fcall	_int_Port
   330     07BA                     l730:
   331                           
   332                           ;main.c: 29:     return;
   333     07BA  120A  118A  271B  120A  118A  	fcall	_int_spi
   334     07BF                     l732:
   335                           
   336                           ;main.c: 31: void int_Port(){
   337     07BF  3005               	movlw	5
   338     07C0  120A  118A  2737  120A  118A  	fcall	_spi_send
   339     07C5                     l734:
   340                           
   341                           ;main.c: 33:     TRISCbits.TRISC3 = 0 ;
   342     07C5  3043               	movlw	67
   343     07C6  00F2               	movwf	write_to_25AA106A@lsb
   344     07C7  30FE               	movlw	254
   345     07C8  00F3               	movwf	write_to_25AA106A@data
   346     07C9  3009               	movlw	9
   347     07CA  120A  118A  2780  120A  118A  	fcall	_write_to_25AA106A
   348                           
   349                           ;main.c: 34:     TRISCbits.TRISC4 = 1 ;
   350     07CF  301A               	movlw	26
   351     07D0  00F9               	movwf	??_main+2
   352     07D1  305E               	movlw	94
   353     07D2  00F8               	movwf	??_main+1
   354     07D3  306E               	movlw	110
   355     07D4  00F7               	movwf	??_main
   356     07D5                     u67:
   357     07D5  0BF7               	decfsz	??_main,f
   358     07D6  2FD5               	goto	u67
   359     07D7  0BF8               	decfsz	??_main+1,f
   360     07D8  2FD5               	goto	u67
   361     07D9  0BF9               	decfsz	??_main+2,f
   362     07DA  2FD5               	goto	u67
   363     07DB  0000               	nop
   364     07DC                     l736:
   365                           
   366                           ;main.c: 36: }
   367     07DC  3006               	movlw	6
   368     07DD  120A  118A  2737  120A  118A  	fcall	_spi_send
   369     07E2                     l738:
   370                           
   371                           ;main.c: 38:     SSPCON = 0x20;
   372     07E2  301A               	movlw	26
   373     07E3  00F9               	movwf	??_main+2
   374     07E4  305E               	movlw	94
   375     07E5  00F8               	movwf	??_main+1
   376     07E6  306E               	movlw	110
   377     07E7  00F7               	movwf	??_main
   378     07E8                     u77:
   379     07E8  0BF7               	decfsz	??_main,f
   380     07E9  2FE8               	goto	u77
   381     07EA  0BF8               	decfsz	??_main+1,f
   382     07EB  2FE8               	goto	u77
   383     07EC  0BF9               	decfsz	??_main+2,f
   384     07ED  2FE8               	goto	u77
   385     07EE  0000               	nop
   386                           
   387                           ;main.c: 39:     SSPSTAT = 0x00;
   388     07EF  3043               	movlw	67
   389     07F0  00F2               	movwf	read_from_25AA106A@lsb
   390     07F1  3009               	movlw	9
   391     07F2  120A  118A  274B  120A  118A  	fcall	_read_from_25AA106A
   392     07F7                     l35:	
   393                           ;main.c: 40: }
   394                           
   395     07F7                     l36:	
   396                           ;main.c: 42:     SSPBUF = value ;
   397                           
   398     07F7  2FF7               	goto	l35
   399     07F8  120A  118A  2800   	ljmp	start
   400     07FB                     __end_of_main:
   401                           
   402                           	psect	text1
   403     0780                     __ptext1:	
   404 ;; *************** function _write_to_25AA106A *****************
   405 ;; Defined at:
   406 ;;		line 75 in file "main.c"
   407 ;; Parameters:    Size  Location     Type
   408 ;;  msb             1    wreg     unsigned char 
   409 ;;  lsb             1    2[COMMON] unsigned char 
   410 ;;  data            1    3[COMMON] unsigned char 
   411 ;; Auto vars:     Size  Location     Type
   412 ;;  msb             1    6[COMMON] unsigned char 
   413 ;; Return value:  Size  Location     Type
   414 ;;                  1    wreg      void 
   415 ;; Registers used:
   416 ;;		wreg, status,2, status,0, pclath, cstack
   417 ;; Tracked objects:
   418 ;;		On entry : 0/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   422 ;;      Params:         2       0       0       0       0
   423 ;;      Locals:         1       0       0       0       0
   424 ;;      Temps:          2       0       0       0       0
   425 ;;      Totals:         5       0       0       0       0
   426 ;;Total ram usage:        5 bytes
   427 ;; Hardware stack levels used: 1
   428 ;; Hardware stack levels required when called: 1
   429 ;; This function calls:
   430 ;;		_spi_write
   431 ;; This function is called by:
   432 ;;		_main
   433 ;; This function uses a non-reentrant model
   434 ;;
   435                           
   436     0780                     _write_to_25AA106A:	
   437                           ;psect for function _write_to_25AA106A
   438                           
   439                           
   440                           ;incstack = 0
   441                           ; Regs used in _write_to_25AA106A: [wreg+status,2+status,0+pclath+cstack]
   442                           ;write_to_25AA106A@msb stored from wreg
   443     0780  00F6               	movwf	write_to_25AA106A@msb
   444     0781                     l714:
   445                           
   446                           ;main.c: 76:     PORTBbits.RB0 = 1 ;
   447     0781  1283               	bcf	3,5	;RP0=0, select bank0
   448     0782  1303               	bcf	3,6	;RP1=0, select bank0
   449     0783  1006               	bcf	6,0	;volatile
   450     0784                     l716:
   451                           
   452                           ;main.c: 77: }
   453     0784  3002               	movlw	2
   454     0785  00F0               	movwf	spi_write@value
   455     0786  3000               	movlw	0
   456     0787  00F1               	movwf	spi_write@value+1
   457     0788  120A  118A  272C  120A  118A  	fcall	_spi_write
   458     078D  0876               	movf	write_to_25AA106A@msb,w
   459     078E  00F4               	movwf	??_write_to_25AA106A
   460     078F  01F5               	clrf	??_write_to_25AA106A+1
   461     0790  0874               	movf	??_write_to_25AA106A,w
   462     0791  00F0               	movwf	spi_write@value
   463     0792  0875               	movf	??_write_to_25AA106A+1,w
   464     0793  00F1               	movwf	spi_write@value+1
   465     0794  120A  118A  272C  120A  118A  	fcall	_spi_write
   466     0799  0872               	movf	write_to_25AA106A@lsb,w
   467     079A  00F4               	movwf	??_write_to_25AA106A
   468     079B  01F5               	clrf	??_write_to_25AA106A+1
   469     079C  0874               	movf	??_write_to_25AA106A,w
   470     079D  00F0               	movwf	spi_write@value
   471     079E  0875               	movf	??_write_to_25AA106A+1,w
   472     079F  00F1               	movwf	spi_write@value+1
   473     07A0  120A  118A  272C  120A  118A  	fcall	_spi_write
   474     07A5  0873               	movf	write_to_25AA106A@data,w
   475     07A6  00F4               	movwf	??_write_to_25AA106A
   476     07A7  01F5               	clrf	??_write_to_25AA106A+1
   477     07A8  0874               	movf	??_write_to_25AA106A,w
   478     07A9  00F0               	movwf	spi_write@value
   479     07AA  0875               	movf	??_write_to_25AA106A+1,w
   480     07AB  00F1               	movwf	spi_write@value+1
   481     07AC  120A  118A  272C  120A  118A  	fcall	_spi_write
   482     07B1                     l718:
   483     07B1  1283               	bcf	3,5	;RP0=0, select bank0
   484     07B2  1303               	bcf	3,6	;RP1=0, select bank0
   485     07B3  1406               	bsf	6,0	;volatile
   486     07B4                     l62:
   487     07B4  0008               	return
   488     07B5                     __end_of_write_to_25AA106A:
   489                           
   490                           	psect	text2
   491     0737                     __ptext2:	
   492 ;; *************** function _spi_send *****************
   493 ;; Defined at:
   494 ;;		line 67 in file "main.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;  data            1    wreg     unsigned char 
   497 ;; Auto vars:     Size  Location     Type
   498 ;;  data            1    4[COMMON] unsigned char 
   499 ;; Return value:  Size  Location     Type
   500 ;;                  1    wreg      void 
   501 ;; Registers used:
   502 ;;		wreg, status,2, status,0, pclath, cstack
   503 ;; Tracked objects:
   504 ;;		On entry : 0/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   508 ;;      Params:         0       0       0       0       0
   509 ;;      Locals:         1       0       0       0       0
   510 ;;      Temps:          2       0       0       0       0
   511 ;;      Totals:         3       0       0       0       0
   512 ;;Total ram usage:        3 bytes
   513 ;; Hardware stack levels used: 1
   514 ;; Hardware stack levels required when called: 1
   515 ;; This function calls:
   516 ;;		_spi_write
   517 ;; This function is called by:
   518 ;;		_main
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522     0737                     _spi_send:	
   523                           ;psect for function _spi_send
   524                           
   525                           
   526                           ;incstack = 0
   527                           ; Regs used in _spi_send: [wreg+status,2+status,0+pclath+cstack]
   528                           ;spi_send@data stored from wreg
   529     0737  00F4               	movwf	spi_send@data
   530     0738                     l708:
   531                           
   532                           ;main.c: 68: }
   533     0738  1283               	bcf	3,5	;RP0=0, select bank0
   534     0739  1303               	bcf	3,6	;RP1=0, select bank0
   535     073A  1006               	bcf	6,0	;volatile
   536     073B                     l710:
   537                           
   538                           ;main.c: 69: void read_from_25AA106A(unsigned char msb,unsigned char lsb){
   539     073B  0874               	movf	spi_send@data,w
   540     073C  00F2               	movwf	??_spi_send
   541     073D  01F3               	clrf	??_spi_send+1
   542     073E  0872               	movf	??_spi_send,w
   543     073F  00F0               	movwf	spi_write@value
   544     0740  0873               	movf	??_spi_send+1,w
   545     0741  00F1               	movwf	spi_write@value+1
   546     0742  120A  118A  272C  120A  118A  	fcall	_spi_write
   547     0747                     l712:
   548                           
   549                           ;main.c: 70:     PORTBbits.RB0 = 0 ;
   550     0747  1283               	bcf	3,5	;RP0=0, select bank0
   551     0748  1303               	bcf	3,6	;RP1=0, select bank0
   552     0749  1406               	bsf	6,0	;volatile
   553     074A                     l59:
   554     074A  0008               	return
   555     074B                     __end_of_spi_send:
   556                           
   557                           	psect	text3
   558     074B                     __ptext3:	
   559 ;; *************** function _read_from_25AA106A *****************
   560 ;; Defined at:
   561 ;;		line 83 in file "main.c"
   562 ;; Parameters:    Size  Location     Type
   563 ;;  msb             1    wreg     unsigned char 
   564 ;;  lsb             1    2[COMMON] unsigned char 
   565 ;; Auto vars:     Size  Location     Type
   566 ;;  msb             1    5[COMMON] unsigned char 
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg, status,2, status,0, pclath, cstack
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   576 ;;      Params:         1       0       0       0       0
   577 ;;      Locals:         1       0       0       0       0
   578 ;;      Temps:          2       0       0       0       0
   579 ;;      Totals:         4       0       0       0       0
   580 ;;Total ram usage:        4 bytes
   581 ;; Hardware stack levels used: 1
   582 ;; Hardware stack levels required when called: 1
   583 ;; This function calls:
   584 ;;		_spi_read
   585 ;;		_spi_write
   586 ;; This function is called by:
   587 ;;		_main
   588 ;; This function uses a non-reentrant model
   589 ;;
   590                           
   591     074B                     _read_from_25AA106A:	
   592                           ;psect for function _read_from_25AA106A
   593                           
   594                           
   595                           ;incstack = 0
   596                           ; Regs used in _read_from_25AA106A: [wreg+status,2+status,0+pclath+cstack]
   597                           ;read_from_25AA106A@msb stored from wreg
   598     074B  00F5               	movwf	read_from_25AA106A@msb
   599     074C                     l720:
   600     074C  1283               	bcf	3,5	;RP0=0, select bank0
   601     074D  1303               	bcf	3,6	;RP1=0, select bank0
   602     074E  1006               	bcf	6,0	;volatile
   603     074F                     l722:
   604     074F  3003               	movlw	3
   605     0750  00F0               	movwf	spi_write@value
   606     0751  3000               	movlw	0
   607     0752  00F1               	movwf	spi_write@value+1
   608     0753  120A  118A  272C  120A  118A  	fcall	_spi_write
   609     0758  0875               	movf	read_from_25AA106A@msb,w
   610     0759  00F3               	movwf	??_read_from_25AA106A
   611     075A  01F4               	clrf	??_read_from_25AA106A+1
   612     075B  0873               	movf	??_read_from_25AA106A,w
   613     075C  00F0               	movwf	spi_write@value
   614     075D  0874               	movf	??_read_from_25AA106A+1,w
   615     075E  00F1               	movwf	spi_write@value+1
   616     075F  120A  118A  272C  120A  118A  	fcall	_spi_write
   617     0764  0872               	movf	read_from_25AA106A@lsb,w
   618     0765  00F3               	movwf	??_read_from_25AA106A
   619     0766  01F4               	clrf	??_read_from_25AA106A+1
   620     0767  0873               	movf	??_read_from_25AA106A,w
   621     0768  00F0               	movwf	spi_write@value
   622     0769  0874               	movf	??_read_from_25AA106A+1,w
   623     076A  00F1               	movwf	spi_write@value+1
   624     076B  120A  118A  272C  120A  118A  	fcall	_spi_write
   625     0770                     l65:
   626     0770  1683               	bsf	3,5	;RP0=1, select bank1
   627     0771  1303               	bcf	3,6	;RP1=0, select bank1
   628     0772  1C14               	btfss	20,0	;volatile
   629     0773  2F75               	goto	u51
   630     0774  2F76               	goto	u50
   631     0775                     u51:
   632     0775  2F70               	goto	l65
   633     0776                     u50:
   634     0776                     l724:
   635     0776  120A  118A  2723  120A  118A  	fcall	_spi_read
   636     077B  00FA               	movwf	_eeprom_data
   637     077C                     l726:
   638     077C  1283               	bcf	3,5	;RP0=0, select bank0
   639     077D  1303               	bcf	3,6	;RP1=0, select bank0
   640     077E  1406               	bsf	6,0	;volatile
   641     077F                     l68:
   642     077F  0008               	return
   643     0780                     __end_of_read_from_25AA106A:
   644                           
   645                           	psect	text4
   646     072C                     __ptext4:	
   647 ;; *************** function _spi_write *****************
   648 ;; Defined at:
   649 ;;		line 55 in file "main.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;  value           2    0[COMMON] unsigned int 
   652 ;; Auto vars:     Size  Location     Type
   653 ;;		None
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      void 
   656 ;; Registers used:
   657 ;;		wreg
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   663 ;;      Params:         2       0       0       0       0
   664 ;;      Locals:         0       0       0       0       0
   665 ;;      Temps:          0       0       0       0       0
   666 ;;      Totals:         2       0       0       0       0
   667 ;;Total ram usage:        2 bytes
   668 ;; Hardware stack levels used: 1
   669 ;; This function calls:
   670 ;;		Nothing
   671 ;; This function is called by:
   672 ;;		_spi_send
   673 ;;		_write_to_25AA106A
   674 ;;		_read_from_25AA106A
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678     072C                     _spi_write:	
   679                           ;psect for function _spi_write
   680                           
   681     072C                     l706:	
   682                           ;incstack = 0
   683                           ; Regs used in _spi_write: [wreg]
   684                           
   685                           
   686                           ;main.c: 56:     PORTBbits.RB0 = 1 ;
   687     072C  0870               	movf	spi_write@value,w
   688     072D  1283               	bcf	3,5	;RP0=0, select bank0
   689     072E  1303               	bcf	3,6	;RP1=0, select bank0
   690     072F  0093               	movwf	19	;volatile
   691     0730                     l47:	
   692                           ;main.c: 57: }
   693                           
   694     0730  1683               	bsf	3,5	;RP0=1, select bank1
   695     0731  1303               	bcf	3,6	;RP1=0, select bank1
   696     0732  1C14               	btfss	20,0	;volatile
   697     0733  2F35               	goto	u41
   698     0734  2F36               	goto	u40
   699     0735                     u41:
   700     0735  2F30               	goto	l47
   701     0736                     u40:
   702     0736                     l50:
   703     0736  0008               	return
   704     0737                     __end_of_spi_write:
   705                           
   706                           	psect	text5
   707     0723                     __ptext5:	
   708 ;; *************** function _spi_read *****************
   709 ;; Defined at:
   710 ;;		line 61 in file "main.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;		None
   713 ;; Auto vars:     Size  Location     Type
   714 ;;		None
   715 ;; Return value:  Size  Location     Type
   716 ;;                  1    wreg      unsigned char 
   717 ;; Registers used:
   718 ;;		wreg, status,2
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   724 ;;      Params:         0       0       0       0       0
   725 ;;      Locals:         0       0       0       0       0
   726 ;;      Temps:          0       0       0       0       0
   727 ;;      Totals:         0       0       0       0       0
   728 ;;Total ram usage:        0 bytes
   729 ;; Hardware stack levels used: 1
   730 ;; This function calls:
   731 ;;		Nothing
   732 ;; This function is called by:
   733 ;;		_read_from_25AA106A
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737     0723                     _spi_read:	
   738                           ;psect for function _spi_read
   739                           
   740     0723                     l662:	
   741                           ;incstack = 0
   742                           ; Regs used in _spi_read: [wreg+status,2]
   743                           
   744                           
   745                           ;main.c: 62:     PORTBbits.RB0 = 0 ;
   746     0723  1283               	bcf	3,5	;RP0=0, select bank0
   747     0724  1303               	bcf	3,6	;RP1=0, select bank0
   748     0725  0193               	clrf	19	;volatile
   749     0726                     l53:	
   750                           ;main.c: 63:     spi_write(0x02);
   751                           
   752     0726  1D8C               	btfss	12,3	;volatile
   753     0727  2F29               	goto	u21
   754     0728  2F2A               	goto	u20
   755     0729                     u21:
   756     0729  2F26               	goto	l53
   757     072A                     u20:
   758     072A                     l664:
   759                           
   760                           ;main.c: 64:     spi_write(msb);
   761     072A  0813               	movf	19,w	;volatile
   762     072B                     l56:
   763     072B  0008               	return
   764     072C                     __end_of_spi_read:
   765                           
   766                           	psect	text6
   767     071B                     __ptext6:	
   768 ;; *************** function _int_spi *****************
   769 ;; Defined at:
   770 ;;		line 51 in file "main.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;		None
   773 ;; Auto vars:     Size  Location     Type
   774 ;;		None
   775 ;; Return value:  Size  Location     Type
   776 ;;                  1    wreg      void 
   777 ;; Registers used:
   778 ;;		wreg, status,2
   779 ;; Tracked objects:
   780 ;;		On entry : 0/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   784 ;;      Params:         0       0       0       0       0
   785 ;;      Locals:         0       0       0       0       0
   786 ;;      Temps:          0       0       0       0       0
   787 ;;      Totals:         0       0       0       0       0
   788 ;;Total ram usage:        0 bytes
   789 ;; Hardware stack levels used: 1
   790 ;; This function calls:
   791 ;;		Nothing
   792 ;; This function is called by:
   793 ;;		_main
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797     071B                     _int_spi:	
   798                           ;psect for function _int_spi
   799                           
   800     071B                     l670:	
   801                           ;incstack = 0
   802                           ; Regs used in _int_spi: [wreg+status,2]
   803                           
   804                           
   805                           ;main.c: 52: 
   806     071B  3020               	movlw	32
   807     071C  1283               	bcf	3,5	;RP0=0, select bank0
   808     071D  1303               	bcf	3,6	;RP1=0, select bank0
   809     071E  0094               	movwf	20	;volatile
   810     071F                     l672:
   811                           
   812                           ;main.c: 53: void spi_send(unsigned char data){
   813     071F  1683               	bsf	3,5	;RP0=1, select bank1
   814     0720  1303               	bcf	3,6	;RP1=0, select bank1
   815     0721  0194               	clrf	20	;volatile
   816     0722                     l44:
   817     0722  0008               	return
   818     0723                     __end_of_int_spi:
   819                           
   820                           	psect	text7
   821     0714                     __ptext7:	
   822 ;; *************** function _int_Port *****************
   823 ;; Defined at:
   824 ;;		line 45 in file "main.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;		None
   827 ;; Auto vars:     Size  Location     Type
   828 ;;		None
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		None
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   838 ;;      Params:         0       0       0       0       0
   839 ;;      Locals:         0       0       0       0       0
   840 ;;      Temps:          0       0       0       0       0
   841 ;;      Totals:         0       0       0       0       0
   842 ;;Total ram usage:        0 bytes
   843 ;; Hardware stack levels used: 1
   844 ;; This function calls:
   845 ;;		Nothing
   846 ;; This function is called by:
   847 ;;		_main
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851     0714                     _int_Port:	
   852                           ;psect for function _int_Port
   853                           
   854     0714                     l668:	
   855                           ;incstack = 0
   856                           ; Regs used in _int_Port: []
   857                           
   858                           
   859                           ;main.c: 46: 
   860     0714  1683               	bsf	3,5	;RP0=1, select bank1
   861     0715  1303               	bcf	3,6	;RP1=0, select bank1
   862     0716  1006               	bcf	6,0	;volatile
   863                           
   864                           ;main.c: 47: unsigned char spi_read(){
   865     0717  1187               	bcf	7,3	;volatile
   866                           
   867                           ;main.c: 48:     SSPBUF = 0x00 ;
   868     0718  1607               	bsf	7,4	;volatile
   869                           
   870                           ;main.c: 49:     while(!PIR1bits.SSPIF);
   871     0719  1287               	bcf	7,5	;volatile
   872     071A                     l41:
   873     071A  0008               	return
   874     071B                     __end_of_int_Port:
   875     007E                     btemp	set	126	;btemp
   876     007E                     wtemp0	set	126
   877                           
   878                           	psect	idloc
   879                           
   880                           ;Config register IDLOC0 @ 0x2000
   881                           ;	unspecified, using default values
   882     2000                     	org	8192
   883     2000  3FFF               	dw	16383
   884                           
   885                           ;Config register IDLOC1 @ 0x2001
   886                           ;	unspecified, using default values
   887     2001                     	org	8193
   888     2001  3FFF               	dw	16383
   889                           
   890                           ;Config register IDLOC2 @ 0x2002
   891                           ;	unspecified, using default values
   892     2002                     	org	8194
   893     2002  3FFF               	dw	16383
   894                           
   895                           ;Config register IDLOC3 @ 0x2003
   896                           ;	unspecified, using default values
   897     2003                     	org	8195
   898     2003  3FFF               	dw	16383
   899                           
   900                           	psect	config
   901                           
   902                           ;Config register CONFIG @ 0x2007
   903                           ;	Oscillator Selection bits
   904                           ;	FOSC = EXTRC, RC oscillator
   905                           ;	Watchdog Timer Enable bit
   906                           ;	WDTE = OFF, WDT disabled
   907                           ;	Power-up Timer Enable bit
   908                           ;	PWRTE = OFF, PWRT disabled
   909                           ;	Brown-out Reset Enable bit
   910                           ;	BOREN = ON, BOR enabled
   911                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   912                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   913                           ;	Data EEPROM Memory Code Protection bit
   914                           ;	CPD = OFF, Data EEPROM code protection off
   915                           ;	Flash Program Memory Write Enable bits
   916                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   917                           ;	In-Circuit Debugger Mode bit
   918                           ;	DEBUG = 0x1, unprogrammed default
   919                           ;	Flash Program Memory Code Protection bit
   920                           ;	CP = OFF, Code protection off
   921     2007                     	org	8199
   922     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_write_to_25AA106A
    _write_to_25AA106A->_spi_write
    _spi_send->_spi_write
    _read_from_25AA106A->_spi_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2250
                                              7 COMMON     3     3      0
                           _int_Port
                            _int_spi
                 _read_from_25AA106A
                           _spi_send
                  _write_to_25AA106A
 ---------------------------------------------------------------------------------
 (1) _write_to_25AA106A                                    5     3      2     848
                                              2 COMMON     5     3      2
                          _spi_write
 ---------------------------------------------------------------------------------
 (1) _spi_send                                             3     3      0     652
                                              2 COMMON     3     3      0
                          _spi_write
 ---------------------------------------------------------------------------------
 (1) _read_from_25AA106A                                   4     3      1     750
                                              2 COMMON     4     3      1
                           _spi_read
                          _spi_write
 ---------------------------------------------------------------------------------
 (2) _spi_write                                            2     0      2     630
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _spi_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _int_spi                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _int_Port                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _int_Port
   _int_spi
   _read_from_25AA106A
     _spi_read
     _spi_write
   _spi_send
     _spi_write
   _write_to_25AA106A
     _spi_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 08 10:56:36 2022

               _SSPSTATbits 0094                          l41 071A                          l50 0736  
                        l35 07F7                          l44 0722                          l36 07F7  
                        l53 0726                          l62 07B4                          l47 0730  
                        l56 072B                          l65 0770                          l59 074A  
                        l68 077F                          u20 072A                          u21 0729  
                        u40 0736                          u41 0735                          u50 0776  
                        u51 0775                          u67 07D5                          u77 07E8  
     write_to_25AA106A@data 0073                         l710 073B                         l720 074C  
                       l712 0747                         l706 072C                         l722 074F  
                       l714 0781                         l730 07BA                         l724 0776  
                       l708 0738                         l716 0784                         l732 07BF  
                       l670 071B                         l662 0723                         l726 077C  
                       l718 07B1                         l734 07C5                         l672 071F  
                       l664 072A                         l736 07DC                         l728 07B5  
                       l738 07E2                         l668 0714                        _main 07B5  
                      btemp 007E                        start 0000                spi_send@data 0074  
                     ?_main 0070             __end_of_int_spi 0723                       status 0003  
                     wtemp0 007E             __initialization 07FB                __end_of_main 07FB  
                    ??_main 0077                      _SSPCON 0014                      _SSPBUF 0013  
          __end_of_int_Port 071B                   ??_int_spi 0070            __end_of_spi_read 072C  
          __end_of_spi_send 074B           _write_to_25AA106A 0780     __end_of__initialization 07FC  
        ?_write_to_25AA106A 0072              __pcstackCOMMON 0070         ??_write_to_25AA106A 0074  
 __end_of_write_to_25AA106A 07B5                  __pmaintext 07B5                     _SSPSTAT 0094  
                 ?_int_Port 0070                   ?_spi_read 0070                   ?_spi_send 0070  
                   __ptext1 0780                     __ptext2 0737                     __ptext3 074B  
                   __ptext4 072C                     __ptext5 0723                     __ptext6 071B  
                   __ptext7 0714                     _int_spi 071B        end_of_initialization 07FC  
                ??_int_Port 0070           __end_of_spi_write 0737                  ??_spi_read 0070  
                ??_spi_send 0072                   _PORTBbits 0006                   _TRISBbits 0086  
                 _TRISCbits 0087  __end_of_read_from_25AA106A 0780              spi_write@value 0070  
      write_to_25AA106A@lsb 0072        write_to_25AA106A@msb 0076         start_initialization 07FB  
               __pbssCOMMON 007A                   ___latbits 0002                    ?_int_spi 0070  
               _eeprom_data 007A                    _PIR1bits 000C                   _spi_write 072C  
        _read_from_25AA106A 074B         ?_read_from_25AA106A 0072                  ?_spi_write 0070  
      ??_read_from_25AA106A 0073                    _int_Port 0714       read_from_25AA106A@lsb 0072  
     read_from_25AA106A@msb 0075                    _spi_read 0723                    _spi_send 0737  
               ??_spi_write 0072  
