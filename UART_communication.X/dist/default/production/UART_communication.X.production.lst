

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 08 08:16:31 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	strings,global,class=STRING,delta=2,noexec
    16                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Version 2.40
    22                           ; Generated 17/11/2021 GMT
    23                           ; 
    24                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F877A Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     0007                     	;# 
    64     0008                     	;# 
    65     0009                     	;# 
    66     000A                     	;# 
    67     000B                     	;# 
    68     000C                     	;# 
    69     000D                     	;# 
    70     000E                     	;# 
    71     000E                     	;# 
    72     000F                     	;# 
    73     0010                     	;# 
    74     0011                     	;# 
    75     0012                     	;# 
    76     0013                     	;# 
    77     0014                     	;# 
    78     0015                     	;# 
    79     0015                     	;# 
    80     0016                     	;# 
    81     0017                     	;# 
    82     0018                     	;# 
    83     0019                     	;# 
    84     001A                     	;# 
    85     001B                     	;# 
    86     001B                     	;# 
    87     001C                     	;# 
    88     001D                     	;# 
    89     001E                     	;# 
    90     001F                     	;# 
    91     0081                     	;# 
    92     0085                     	;# 
    93     0086                     	;# 
    94     0087                     	;# 
    95     0088                     	;# 
    96     0089                     	;# 
    97     008C                     	;# 
    98     008D                     	;# 
    99     008E                     	;# 
   100     0091                     	;# 
   101     0092                     	;# 
   102     0093                     	;# 
   103     0094                     	;# 
   104     0098                     	;# 
   105     0099                     	;# 
   106     009C                     	;# 
   107     009D                     	;# 
   108     009E                     	;# 
   109     009F                     	;# 
   110     010C                     	;# 
   111     010D                     	;# 
   112     010E                     	;# 
   113     010F                     	;# 
   114     018C                     	;# 
   115     018D                     	;# 
   116     0000                     	;# 
   117     0001                     	;# 
   118     0002                     	;# 
   119     0003                     	;# 
   120     0004                     	;# 
   121     0005                     	;# 
   122     0006                     	;# 
   123     0007                     	;# 
   124     0008                     	;# 
   125     0009                     	;# 
   126     000A                     	;# 
   127     000B                     	;# 
   128     000C                     	;# 
   129     000D                     	;# 
   130     000E                     	;# 
   131     000E                     	;# 
   132     000F                     	;# 
   133     0010                     	;# 
   134     0011                     	;# 
   135     0012                     	;# 
   136     0013                     	;# 
   137     0014                     	;# 
   138     0015                     	;# 
   139     0015                     	;# 
   140     0016                     	;# 
   141     0017                     	;# 
   142     0018                     	;# 
   143     0019                     	;# 
   144     001A                     	;# 
   145     001B                     	;# 
   146     001B                     	;# 
   147     001C                     	;# 
   148     001D                     	;# 
   149     001E                     	;# 
   150     001F                     	;# 
   151     0081                     	;# 
   152     0085                     	;# 
   153     0086                     	;# 
   154     0087                     	;# 
   155     0088                     	;# 
   156     0089                     	;# 
   157     008C                     	;# 
   158     008D                     	;# 
   159     008E                     	;# 
   160     0091                     	;# 
   161     0092                     	;# 
   162     0093                     	;# 
   163     0094                     	;# 
   164     0098                     	;# 
   165     0099                     	;# 
   166     009C                     	;# 
   167     009D                     	;# 
   168     009E                     	;# 
   169     009F                     	;# 
   170     010C                     	;# 
   171     010D                     	;# 
   172     010E                     	;# 
   173     010F                     	;# 
   174     018C                     	;# 
   175     018D                     	;# 
   176     001A                     _RCREG	set	26
   177     0019                     _TXREG	set	25
   178     000C                     _PIR1bits	set	12
   179     0018                     _RCSTA	set	24
   180     000B                     _INTCONbits	set	11
   181     0099                     _SPBRG	set	153
   182     0098                     _TXSTA	set	152
   183     008C                     _PIE1bits	set	140
   184     0430                     _TRISB0	set	1072
   185                           
   186                           	psect	cinit
   187     000F                     start_initialization:	
   188                           ; #config settings
   189                           
   190     000F                     __initialization:
   191                           
   192                           ; Clear objects allocated to COMMON
   193     000F  01FA               	clrf	__pbssCOMMON& (0+127)
   194     0010                     end_of_initialization:	
   195                           ;End of C runtime variable initialization code
   196                           
   197     0010                     __end_of__initialization:
   198     0010  0183               	clrf	3
   199     0011  120A  118A  2814   	ljmp	_main	;jump to C main() function
   200                           
   201                           	psect	bssCOMMON
   202     007A                     __pbssCOMMON:
   203     007A                     _rx_data:
   204     007A                     	ds	1
   205                           
   206                           	psect	cstackCOMMON
   207     0070                     __pcstackCOMMON:
   208     0070                     ?_int_Port:
   209     0070                     ?_int_Uart:	
   210                           ; 1 bytes @ 0x0
   211                           
   212     0070                     ?_main:	
   213                           ; 1 bytes @ 0x0
   214                           
   215     0070                     ?_RX_uart:	
   216                           ; 1 bytes @ 0x0
   217                           
   218     0070                     ??_RX_uart:	
   219                           ; 1 bytes @ 0x0
   220                           
   221                           
   222                           ; 1 bytes @ 0x0
   223     0070                     	ds	2
   224     0072                     ??_int_Port:
   225     0072                     ??_int_Uart:	
   226                           ; 1 bytes @ 0x2
   227                           
   228     0072                     ?_strlen:	
   229                           ; 1 bytes @ 0x2
   230                           
   231     0072                     strlen@s:	
   232                           ; 2 bytes @ 0x2
   233                           
   234                           
   235                           ; 2 bytes @ 0x2
   236     0072                     	ds	2
   237     0074                     ??_strlen:
   238     0074                     strlen@cp:	
   239                           ; 1 bytes @ 0x4
   240                           
   241                           
   242                           ; 2 bytes @ 0x4
   243     0074                     	ds	2
   244     0076                     ?_TX_uart:
   245     0076                     TX_uart@data:	
   246                           ; 1 bytes @ 0x6
   247                           
   248                           
   249                           ; 2 bytes @ 0x6
   250     0076                     	ds	2
   251     0078                     ??_TX_uart:
   252                           
   253                           ; 1 bytes @ 0x8
   254     0078                     	ds	2
   255                           
   256                           	psect	cstackBANK0
   257     0020                     __pcstackBANK0:
   258     0020                     TX_uart@num:
   259                           
   260                           ; 2 bytes @ 0x0
   261     0020                     	ds	2
   262     0022                     TX_uart@i:
   263                           
   264                           ; 2 bytes @ 0x2
   265     0022                     	ds	2
   266     0024                     ??_main:
   267                           
   268                           ; 1 bytes @ 0x4
   269     0024                     	ds	3
   270                           
   271                           	psect	maintext
   272     0014                     __pmaintext:	
   273 ;;
   274 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   275 ;;
   276 ;; *************** function _main *****************
   277 ;; Defined at:
   278 ;;		line 24 in file "main.c"
   279 ;; Parameters:    Size  Location     Type
   280 ;;		None
   281 ;; Auto vars:     Size  Location     Type
   282 ;;		None
   283 ;; Return value:  Size  Location     Type
   284 ;;                  1    wreg      void 
   285 ;; Registers used:
   286 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   287 ;; Tracked objects:
   288 ;;		On entry : B00/0
   289 ;;		On exit  : 0/0
   290 ;;		Unchanged: 0/0
   291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   292 ;;      Params:         0       0       0       0       0
   293 ;;      Locals:         0       0       0       0       0
   294 ;;      Temps:          0       3       0       0       0
   295 ;;      Totals:         0       3       0       0       0
   296 ;;Total ram usage:        3 bytes
   297 ;; Hardware stack levels required when called: 4
   298 ;; This function calls:
   299 ;;		_TX_uart
   300 ;;		_int_Port
   301 ;;		_int_Uart
   302 ;; This function is called by:
   303 ;;		Startup code after reset
   304 ;; This function uses a non-reentrant model
   305 ;;
   306                           
   307     0014                     _main:	
   308                           ;psect for function _main
   309                           
   310     0014                     l723:	
   311                           ;incstack = 0
   312                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   313                           
   314                           
   315                           ;main.c: 25: int_Port();
   316     0014  120A  118A  2103  120A  118A  	fcall	_int_Port
   317     0019                     l725:
   318                           
   319                           ;main.c: 26: int_Uart();
   320     0019  120A  118A  20E3  120A  118A  	fcall	_int_Uart
   321     001E                     l35:	
   322                           ;main.c: 27: while (1){
   323                           
   324                           
   325                           ;main.c: 29: _delay((unsigned long)((1000)*(20000000/4000.0)));
   326     001E  301A               	movlw	26
   327     001F  1283               	bcf	3,5	;RP0=0, select bank0
   328     0020  1303               	bcf	3,6	;RP1=0, select bank0
   329     0021  00A6               	movwf	??_main+2
   330     0022  305E               	movlw	94
   331     0023  00A5               	movwf	??_main+1
   332     0024  306D               	movlw	109
   333     0025  00A4               	movwf	??_main
   334     0026                     u87:
   335     0026  0BA4               	decfsz	??_main,f
   336     0027  2826               	goto	u87
   337     0028  0BA5               	decfsz	??_main+1,f
   338     0029  2826               	goto	u87
   339     002A  0BA6               	decfsz	??_main+2,f
   340     002B  2826               	goto	u87
   341     002C  282D               	nop2
   342                           
   343                           ;main.c: 30: _delay((unsigned long)((1000)*(20000000/4000.0)));
   344     002D  301A               	movlw	26
   345     002E  1283               	bcf	3,5	;RP0=0, select bank0
   346     002F  1303               	bcf	3,6	;RP1=0, select bank0
   347     0030  00A6               	movwf	??_main+2
   348     0031  305E               	movlw	94
   349     0032  00A5               	movwf	??_main+1
   350     0033  306D               	movlw	109
   351     0034  00A4               	movwf	??_main
   352     0035                     u97:
   353     0035  0BA4               	decfsz	??_main,f
   354     0036  2835               	goto	u97
   355     0037  0BA5               	decfsz	??_main+1,f
   356     0038  2835               	goto	u97
   357     0039  0BA6               	decfsz	??_main+2,f
   358     003A  2835               	goto	u97
   359     003B  283C               	nop2
   360                           
   361                           ;main.c: 31: _delay((unsigned long)((1000)*(20000000/4000.0)));
   362     003C  301A               	movlw	26
   363     003D  1283               	bcf	3,5	;RP0=0, select bank0
   364     003E  1303               	bcf	3,6	;RP1=0, select bank0
   365     003F  00A6               	movwf	??_main+2
   366     0040  305E               	movlw	94
   367     0041  00A5               	movwf	??_main+1
   368     0042  306D               	movlw	109
   369     0043  00A4               	movwf	??_main
   370     0044                     u107:
   371     0044  0BA4               	decfsz	??_main,f
   372     0045  2844               	goto	u107
   373     0046  0BA5               	decfsz	??_main+1,f
   374     0047  2844               	goto	u107
   375     0048  0BA6               	decfsz	??_main+2,f
   376     0049  2844               	goto	u107
   377     004A  284B               	nop2
   378     004B                     l727:
   379                           
   380                           ;main.c: 32: TX_uart(rx_data);
   381     004B  087A               	movf	_rx_data,w
   382     004C  1283               	bcf	3,5	;RP0=0, select bank0
   383     004D  1303               	bcf	3,6	;RP1=0, select bank0
   384     004E  00A4               	movwf	??_main
   385     004F  01A5               	clrf	??_main+1
   386     0050  0824               	movf	??_main,w
   387     0051  00F6               	movwf	TX_uart@data
   388     0052  0825               	movf	??_main+1,w
   389     0053  00F7               	movwf	TX_uart@data+1
   390     0054  120A  118A  206C  120A  118A  	fcall	_TX_uart
   391     0059                     l729:
   392                           
   393                           ;main.c: 33: _delay((unsigned long)((1000)*(20000000/4000.0)));
   394     0059  301A               	movlw	26
   395     005A  1283               	bcf	3,5	;RP0=0, select bank0
   396     005B  1303               	bcf	3,6	;RP1=0, select bank0
   397     005C  00A6               	movwf	??_main+2
   398     005D  305E               	movlw	94
   399     005E  00A5               	movwf	??_main+1
   400     005F  306D               	movlw	109
   401     0060  00A4               	movwf	??_main
   402     0061                     u117:
   403     0061  0BA4               	decfsz	??_main,f
   404     0062  2861               	goto	u117
   405     0063  0BA5               	decfsz	??_main+1,f
   406     0064  2861               	goto	u117
   407     0065  0BA6               	decfsz	??_main+2,f
   408     0066  2861               	goto	u117
   409     0067  2868               	nop2
   410     0068  281E               	goto	l35
   411     0069  120A  118A  280C   	ljmp	start
   412     006C                     __end_of_main:
   413                           
   414                           	psect	text1
   415     00E3                     __ptext1:	
   416 ;; *************** function _int_Uart *****************
   417 ;; Defined at:
   418 ;;		line 41 in file "main.c"
   419 ;; Parameters:    Size  Location     Type
   420 ;;		None
   421 ;; Auto vars:     Size  Location     Type
   422 ;;		None
   423 ;; Return value:  Size  Location     Type
   424 ;;                  1    wreg      void 
   425 ;; Registers used:
   426 ;;		wreg
   427 ;; Tracked objects:
   428 ;;		On entry : 0/0
   429 ;;		On exit  : 0/0
   430 ;;		Unchanged: 0/0
   431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   432 ;;      Params:         0       0       0       0       0
   433 ;;      Locals:         0       0       0       0       0
   434 ;;      Temps:          0       0       0       0       0
   435 ;;      Totals:         0       0       0       0       0
   436 ;;Total ram usage:        0 bytes
   437 ;; Hardware stack levels used: 1
   438 ;; Hardware stack levels required when called: 1
   439 ;; This function calls:
   440 ;;		Nothing
   441 ;; This function is called by:
   442 ;;		_main
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446     00E3                     _int_Uart:	
   447                           ;psect for function _int_Uart
   448                           
   449     00E3                     l667:	
   450                           ;incstack = 0
   451                           ; Regs used in _int_Uart: [wreg]
   452                           
   453                           
   454                           ;main.c: 43: INTCONbits.GIE = 1;
   455     00E3  178B               	bsf	11,7	;volatile
   456                           
   457                           ;main.c: 44: INTCONbits.PEIE = 1;
   458     00E4  170B               	bsf	11,6	;volatile
   459                           
   460                           ;main.c: 45: PIE1bits.RCIE = 1;
   461     00E5  1683               	bsf	3,5	;RP0=1, select bank1
   462     00E6  1303               	bcf	3,6	;RP1=0, select bank1
   463     00E7  168C               	bsf	12,5	;volatile
   464     00E8                     l669:
   465                           
   466                           ;main.c: 46: TXSTA = 0x24;
   467     00E8  3024               	movlw	36
   468     00E9  0098               	movwf	24	;volatile
   469                           
   470                           ;main.c: 47: RCSTA = 0x90;
   471     00EA  3090               	movlw	144
   472     00EB  1283               	bcf	3,5	;RP0=0, select bank0
   473     00EC  1303               	bcf	3,6	;RP1=0, select bank0
   474     00ED  0098               	movwf	24	;volatile
   475                           
   476                           ;main.c: 48: SPBRG = 129;
   477     00EE  3081               	movlw	129
   478     00EF  1683               	bsf	3,5	;RP0=1, select bank1
   479     00F0  1303               	bcf	3,6	;RP1=0, select bank1
   480     00F1  0099               	movwf	25	;volatile
   481     00F2                     l44:
   482     00F2  0008               	return
   483     00F3                     __end_of_int_Uart:
   484                           
   485                           	psect	text2
   486     0103                     __ptext2:	
   487 ;; *************** function _int_Port *****************
   488 ;; Defined at:
   489 ;;		line 38 in file "main.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;		None
   492 ;; Auto vars:     Size  Location     Type
   493 ;;		None
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		None
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   503 ;;      Params:         0       0       0       0       0
   504 ;;      Locals:         0       0       0       0       0
   505 ;;      Temps:          0       0       0       0       0
   506 ;;      Totals:         0       0       0       0       0
   507 ;;Total ram usage:        0 bytes
   508 ;; Hardware stack levels used: 1
   509 ;; Hardware stack levels required when called: 1
   510 ;; This function calls:
   511 ;;		Nothing
   512 ;; This function is called by:
   513 ;;		_main
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517     0103                     _int_Port:	
   518                           ;psect for function _int_Port
   519                           
   520     0103                     l665:	
   521                           ;incstack = 0
   522                           ; Regs used in _int_Port: []
   523                           
   524                           
   525                           ;main.c: 39: TRISB0 = 0;
   526     0103  1683               	bsf	3,5	;RP0=1, select bank1
   527     0104  1303               	bcf	3,6	;RP1=0, select bank1
   528     0105  1006               	bcf	6,0	;volatile
   529     0106                     l41:
   530     0106  0008               	return
   531     0107                     __end_of_int_Port:
   532                           
   533                           	psect	text3
   534     006C                     __ptext3:	
   535 ;; *************** function _TX_uart *****************
   536 ;; Defined at:
   537 ;;		line 51 in file "main.c"
   538 ;; Parameters:    Size  Location     Type
   539 ;;  data            2    6[COMMON] PTR const unsigned char 
   540 ;;		 -> ROM(8192), 
   541 ;; Auto vars:     Size  Location     Type
   542 ;;  i               2    2[BANK0 ] unsigned int 
   543 ;;  num             2    0[BANK0 ] unsigned int 
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   553 ;;      Params:         2       0       0       0       0
   554 ;;      Locals:         0       4       0       0       0
   555 ;;      Temps:          2       0       0       0       0
   556 ;;      Totals:         4       4       0       0       0
   557 ;;Total ram usage:        8 bytes
   558 ;; Hardware stack levels used: 1
   559 ;; Hardware stack levels required when called: 3
   560 ;; This function calls:
   561 ;;		_strlen
   562 ;; This function is called by:
   563 ;;		_main
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567     006C                     _TX_uart:	
   568                           ;psect for function _TX_uart
   569                           
   570     006C                     l709:	
   571                           ;incstack = 0
   572                           ; Regs used in _TX_uart: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   573                           
   574                           
   575                           ;main.c: 52: unsigned int i,num = strlen(data);
   576     006C  0876               	movf	TX_uart@data,w
   577     006D  00F2               	movwf	strlen@s
   578     006E  0877               	movf	TX_uart@data+1,w
   579     006F  00F3               	movwf	strlen@s+1
   580     0070  120A  118A  20AD  120A  118A  	fcall	_strlen
   581     0075  0873               	movf	?_strlen+1,w
   582     0076  1283               	bcf	3,5	;RP0=0, select bank0
   583     0077  1303               	bcf	3,6	;RP1=0, select bank0
   584     0078  00A1               	movwf	TX_uart@num+1
   585     0079  0872               	movf	?_strlen,w
   586     007A  00A0               	movwf	TX_uart@num
   587     007B                     l711:
   588                           
   589                           ;main.c: 53: for (i = 0; i < num; i++) {
   590     007B  01A2               	clrf	TX_uart@i
   591     007C  01A3               	clrf	TX_uart@i+1
   592     007D  28A2               	goto	l721
   593     007E                     l48:
   594                           
   595                           ;main.c: 54: if (PIR1bits.TXIF == 1) {
   596     007E  1E0C               	btfss	12,4	;volatile
   597     007F  2881               	goto	u61
   598     0080  2882               	goto	u60
   599     0081                     u61:
   600     0081  2891               	goto	l717
   601     0082                     u60:
   602     0082                     l713:
   603                           
   604                           ;main.c: 55: TXREG = data[i] ;
   605     0082  0822               	movf	TX_uart@i,w
   606     0083  0776               	addwf	TX_uart@data,w
   607     0084  0084               	movwf	4
   608     0085  0823               	movf	TX_uart@i+1,w
   609     0086  1803               	skipnc
   610     0087  0A23               	incf	TX_uart@i+1,w
   611     0088  0777               	addwf	TX_uart@data+1,w
   612     0089  00FF               	movwf	btemp+1
   613     008A  120A  118A  20D1  120A  118A  	fcall	stringtab
   614     008F  0099               	movwf	25	;volatile
   615     0090                     l715:
   616                           
   617                           ;main.c: 56: PIR1bits.TXIF = 0 ;
   618     0090  120C               	bcf	12,4	;volatile
   619     0091                     l717:
   620                           
   621                           ;main.c: 57: };main.c: 58: _delay((unsigned long)((10)*(20000000/4000.0)));
   622     0091  3041               	movlw	65
   623     0092  00F9               	movwf	??_TX_uart+1
   624     0093  30EE               	movlw	238
   625     0094  00F8               	movwf	??_TX_uart
   626     0095                     u127:
   627     0095  0BF8               	decfsz	??_TX_uart,f
   628     0096  2895               	goto	u127
   629     0097  0BF9               	decfsz	??_TX_uart+1,f
   630     0098  2895               	goto	u127
   631     0099  0000               	nop
   632     009A                     l719:
   633     009A  3001               	movlw	1
   634     009B  1283               	bcf	3,5	;RP0=0, select bank0
   635     009C  1303               	bcf	3,6	;RP1=0, select bank0
   636     009D  07A2               	addwf	TX_uart@i,f
   637     009E  1803               	skipnc
   638     009F  0AA3               	incf	TX_uart@i+1,f
   639     00A0  3000               	movlw	0
   640     00A1  07A3               	addwf	TX_uart@i+1,f
   641     00A2                     l721:
   642     00A2  0821               	movf	TX_uart@num+1,w
   643     00A3  0223               	subwf	TX_uart@i+1,w
   644     00A4  1D03               	skipz
   645     00A5  28A8               	goto	u75
   646     00A6  0820               	movf	TX_uart@num,w
   647     00A7  0222               	subwf	TX_uart@i,w
   648     00A8                     u75:
   649     00A8  1C03               	skipc
   650     00A9  28AB               	goto	u71
   651     00AA  28AC               	goto	u70
   652     00AB                     u71:
   653     00AB  287E               	goto	l48
   654     00AC                     u70:
   655     00AC                     l51:
   656     00AC  0008               	return
   657     00AD                     __end_of_TX_uart:
   658                           
   659                           	psect	text4
   660     00AD                     __ptext4:	
   661 ;; *************** function _strlen *****************
   662 ;; Defined at:
   663 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
   664 ;; Parameters:    Size  Location     Type
   665 ;;  s               2    2[COMMON] PTR const unsigned char 
   666 ;;		 -> ROM(8192), 
   667 ;; Auto vars:     Size  Location     Type
   668 ;;  cp              2    4[COMMON] PTR const unsigned char 
   669 ;;		 -> ROM(8192), 
   670 ;; Return value:  Size  Location     Type
   671 ;;                  2    2[COMMON] unsigned int 
   672 ;; Registers used:
   673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
   674 ;; Tracked objects:
   675 ;;		On entry : 0/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   679 ;;      Params:         2       0       0       0       0
   680 ;;      Locals:         2       0       0       0       0
   681 ;;      Temps:          0       0       0       0       0
   682 ;;      Totals:         4       0       0       0       0
   683 ;;Total ram usage:        4 bytes
   684 ;; Hardware stack levels used: 2
   685 ;; Hardware stack levels required when called: 1
   686 ;; This function calls:
   687 ;;		Nothing
   688 ;; This function is called by:
   689 ;;		_TX_uart
   690 ;; This function uses a non-reentrant model
   691 ;;
   692                           
   693     00AD                     _strlen:	
   694                           ;psect for function _strlen
   695                           
   696     00AD                     l699:	
   697                           ;incstack = 0
   698                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
   699                           
   700     00AD  0872               	movf	strlen@s,w
   701     00AE  00F4               	movwf	strlen@cp
   702     00AF  0873               	movf	strlen@s+1,w
   703     00B0  00F5               	movwf	strlen@cp+1
   704     00B1  28B8               	goto	l703
   705     00B2                     l701:
   706     00B2  3001               	movlw	1
   707     00B3  07F4               	addwf	strlen@cp,f
   708     00B4  1803               	skipnc
   709     00B5  0AF5               	incf	strlen@cp+1,f
   710     00B6  3000               	movlw	0
   711     00B7  07F5               	addwf	strlen@cp+1,f
   712     00B8                     l703:
   713     00B8  0875               	movf	strlen@cp+1,w
   714     00B9  1283               	bcf	3,5	;RP0=0, select bank0
   715     00BA  1303               	bcf	3,6	;RP1=0, select bank0
   716     00BB  00FF               	movwf	btemp+1
   717     00BC  0874               	movf	strlen@cp,w
   718     00BD  0084               	movwf	4
   719     00BE  120A  118A  20D1  120A  118A  	fcall	stringtab
   720     00C3  3A00               	xorlw	0
   721     00C4  1D03               	skipz
   722     00C5  28C7               	goto	u51
   723     00C6  28C8               	goto	u50
   724     00C7                     u51:
   725     00C7  28B2               	goto	l701
   726     00C8                     u50:
   727     00C8                     l705:
   728     00C8  0872               	movf	strlen@s,w
   729     00C9  0274               	subwf	strlen@cp,w
   730     00CA  00F2               	movwf	?_strlen
   731     00CB  0873               	movf	strlen@s+1,w
   732     00CC  1C03               	skipc
   733     00CD  0A73               	incf	strlen@s+1,w
   734     00CE  0275               	subwf	strlen@cp+1,w
   735     00CF  00F3               	movwf	?_strlen+1
   736     00D0                     l597:
   737     00D0  0008               	return
   738     00D1                     __end_of_strlen:
   739                           
   740                           	psect	text5
   741     00F3                     __ptext5:	
   742 ;; *************** function _RX_uart *****************
   743 ;; Defined at:
   744 ;;		line 61 in file "main.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;		None
   747 ;; Auto vars:     Size  Location     Type
   748 ;;		None
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   758 ;;      Params:         0       0       0       0       0
   759 ;;      Locals:         0       0       0       0       0
   760 ;;      Temps:          2       0       0       0       0
   761 ;;      Totals:         2       0       0       0       0
   762 ;;Total ram usage:        2 bytes
   763 ;; Hardware stack levels used: 1
   764 ;; This function calls:
   765 ;;		Nothing
   766 ;; This function is called by:
   767 ;;		Interrupt level 1
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771     00F3                     _RX_uart:	
   772                           ;psect for function _RX_uart
   773                           
   774     00F3                     i1l693:
   775                           
   776                           ;main.c: 62: if (PIR1bits.RCIF == 1) {
   777     00F3  1283               	bcf	3,5	;RP0=0, select bank0
   778     00F4  1303               	bcf	3,6	;RP1=0, select bank0
   779     00F5  1E8C               	btfss	12,5	;volatile
   780     00F6  28F8               	goto	u4_21
   781     00F7  28F9               	goto	u4_20
   782     00F8                     u4_21:
   783     00F8  28FC               	goto	i1l57
   784     00F9                     u4_20:
   785     00F9                     i1l695:
   786                           
   787                           ;main.c: 63: rx_data = RCREG ;
   788     00F9  081A               	movf	26,w	;volatile
   789     00FA  00FA               	movwf	_rx_data
   790     00FB                     i1l697:
   791                           
   792                           ;main.c: 64: PIR1bits.RCIF = 0 ;
   793     00FB  128C               	bcf	12,5	;volatile
   794     00FC                     i1l57:
   795     00FC  0871               	movf	??_RX_uart+1,w
   796     00FD  008A               	movwf	10
   797     00FE  0E70               	swapf	??_RX_uart,w
   798     00FF  0083               	movwf	3
   799     0100  0EFE               	swapf	btemp,f
   800     0101  0E7E               	swapf	btemp,w
   801     0102  0009               	retfie
   802     0103                     __end_of_RX_uart:
   803     0002                     
   804                           	psect	intentry
   805     0004                     __pintentry:	
   806                           ;incstack = 0
   807                           ; Regs used in _RX_uart: [wreg]
   808                           
   809     0004                     interrupt_function:
   810     007E                     saved_w	set	btemp
   811     0004  00FE               	movwf	btemp
   812     0005  0E03               	swapf	3,w
   813     0006  00F0               	movwf	??_RX_uart
   814     0007  080A               	movf	10,w
   815     0008  00F1               	movwf	??_RX_uart+1
   816     0009  120A  118A  28F3   	ljmp	_RX_uart
   817                           
   818                           	psect	strings
   819     00D1                     __pstrings:
   820     00D1                     stringtab:
   821     00D1                     __stringtab:
   822                           
   823                           ;	String table - string pointers are 2 bytes each
   824     00D1  1BFF               	btfsc	btemp+1,7
   825     00D2  28DB               	ljmp	stringcode
   826     00D3  1383               	bcf	3,7
   827     00D4  187F               	btfsc	btemp+1,0
   828     00D5  1783               	bsf	3,7
   829     00D6  0800               	movf	0,w
   830     00D7  0A84               	incf	4,f
   831     00D8  1903               	skipnz
   832     00D9  0AFF               	incf	btemp+1,f
   833     00DA  0008               	return
   834     00DB                     stringcode:
   835     00DB  087F               	movf	btemp+1,w
   836     00DC  397F               	andlw	127
   837     00DD  008A               	movwf	10
   838     00DE  0804               	movf	4,w
   839     00DF  0A84               	incf	4,f
   840     00E0  1903               	skipnz
   841     00E1  0AFF               	incf	btemp+1,f
   842     00E2  0082               	movwf	2
   843     00E3                     __stringbase:
   844     00E3                     __end_of__stringtab:
   845                           
   846                           	psect	stringtext
   847     0000                     __pstringtext:
   848     007E                     btemp	set	126	;btemp
   849     007E                     wtemp0	set	126
   850                           
   851                           	psect	idloc
   852                           
   853                           ;Config register IDLOC0 @ 0x2000
   854                           ;	unspecified, using default values
   855     2000                     	org	8192
   856     2000  3FFF               	dw	16383
   857                           
   858                           ;Config register IDLOC1 @ 0x2001
   859                           ;	unspecified, using default values
   860     2001                     	org	8193
   861     2001  3FFF               	dw	16383
   862                           
   863                           ;Config register IDLOC2 @ 0x2002
   864                           ;	unspecified, using default values
   865     2002                     	org	8194
   866     2002  3FFF               	dw	16383
   867                           
   868                           ;Config register IDLOC3 @ 0x2003
   869                           ;	unspecified, using default values
   870     2003                     	org	8195
   871     2003  3FFF               	dw	16383
   872                           
   873                           	psect	config
   874                           
   875                           ;Config register CONFIG @ 0x2007
   876                           ;	Oscillator Selection bits
   877                           ;	FOSC = EXTRC, RC oscillator
   878                           ;	Watchdog Timer Enable bit
   879                           ;	WDTE = OFF, WDT disabled
   880                           ;	Power-up Timer Enable bit
   881                           ;	PWRTE = OFF, PWRT disabled
   882                           ;	Brown-out Reset Enable bit
   883                           ;	BOREN = ON, BOR enabled
   884                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   885                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   886                           ;	Data EEPROM Memory Code Protection bit
   887                           ;	CPD = OFF, Data EEPROM code protection off
   888                           ;	Flash Program Memory Write Enable bits
   889                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   890                           ;	In-Circuit Debugger Mode bit
   891                           ;	DEBUG = 0x1, unprogrammed default
   892                           ;	Flash Program Memory Code Protection bit
   893                           ;	CP = OFF, Code protection off
   894     2007                     	org	8199
   895     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80      7       7
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 8192
		 -> ROM(CODE[8192]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 8192
		 -> ROM(CODE[8192]), 

    TX_uart@data	PTR const unsigned char  size(2) Largest target is 8192
		 -> ROM(CODE[8192]), 


Critical Paths under _main in COMMON

    _main->_TX_uart
    _TX_uart->_strlen

Critical Paths under _RX_uart in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_TX_uart

Critical Paths under _RX_uart in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _RX_uart in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _RX_uart in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _RX_uart in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     355
                                              4 BANK0      3     3      0
                            _TX_uart
                           _int_Port
                           _int_Uart
 ---------------------------------------------------------------------------------
 (1) _int_Uart                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _int_Port                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TX_uart                                              8     6      2     355
                                              6 COMMON     4     2      2
                                              0 BANK0      4     4      0
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     166
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _RX_uart                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TX_uart
     _strlen
   _int_Port
   _int_Uart

 _RX_uart (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      12       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      7       7       5        8.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      12      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 08 08:16:31 2022

                      pc 0002                       l41 0106                       l51 00AC  
                     l35 001E                       l44 00F2                       l48 007E  
                     u50 00C8                       u51 00C7                       u60 0082  
                     u61 0081                       u70 00AC                       u71 00AB  
                     u75 00A8                       u87 0026                       u97 0035  
                     fsr 0004                      l701 00B2                      l703 00B8  
                    l711 007B                      l705 00C8                      l713 0082  
                    l721 00A2                      l715 0090                      l723 0014  
                    l717 0091                      l709 006C                      l725 0019  
                    l719 009A                      l727 004B                      l665 0103  
                    l729 0059                      l667 00E3                      l597 00D0  
                    l669 00E8                      l699 00AD                      u107 0044  
                    u117 0061                      u127 0095                      fsr0 0004  
                    indf 0000               TX_uart@num 0020                     i1l57 00FC  
                   u4_20 00F9                     u4_21 00F8                     _main 0014  
                   btemp 007E                     start 000C              TX_uart@data 0076  
        __end_of_RX_uart 0103          __end_of_TX_uart 00AD                    ?_main 0070  
                  i1l693 00F3                    i1l695 00F9                    i1l697 00FB  
                  _RCREG 001A                    _RCSTA 0018                    _SPBRG 0099  
                  _TXREG 0019                    _TXSTA 0098                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 006C                   ??_main 0024                   _TRISB0 0430  
              ??_RX_uart 0070                ??_TX_uart 0078         __end_of_int_Uart 00F3  
       __end_of_int_Port 0107                   _strlen 00AD                   saved_w 007E  
__end_of__initialization 0010           __pcstackCOMMON 0070               __pmaintext 0014  
             __pintentry 0004                  ?_strlen 0072               __stringtab 00D1  
              ?_int_Uart 0070                ?_int_Port 0070                  _RX_uart 00F3  
                _TX_uart 006C                  __ptext1 00E3                  __ptext2 0103  
                __ptext3 006C                  __ptext4 00AD                  __ptext5 00F3  
                _rx_data 007A     end_of_initialization 0010               ??_int_Uart 0072  
             ??_int_Port 0072             __pstringtext 0000                  strlen@s 0072  
         __end_of_strlen 00D1      start_initialization 000F                 ??_strlen 0074  
            __pbssCOMMON 007A                ___latbits 0002            __pcstackBANK0 0020  
               ?_RX_uart 0070                 ?_TX_uart 0076                __pstrings 00D1  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
            __stringbase 00E3                 TX_uart@i 0022       __end_of__stringtab 00E3  
               _int_Uart 00E3                 _int_Port 0103               _INTCONbits 000B  
               intlevel1 0000                stringcode 00DB                 strlen@cp 0074  
               stringtab 00D1  
