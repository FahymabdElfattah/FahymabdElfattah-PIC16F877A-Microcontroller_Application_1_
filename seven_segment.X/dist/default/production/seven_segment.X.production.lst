

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Nov 13 20:47:27 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Version 2.40
    24                           ; Generated 17/11/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F877A Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0000                     	;# 
    59     0001                     	;# 
    60     0002                     	;# 
    61     0003                     	;# 
    62     0004                     	;# 
    63     0005                     	;# 
    64     0006                     	;# 
    65     0007                     	;# 
    66     0008                     	;# 
    67     0009                     	;# 
    68     000A                     	;# 
    69     000B                     	;# 
    70     000C                     	;# 
    71     000D                     	;# 
    72     000E                     	;# 
    73     000E                     	;# 
    74     000F                     	;# 
    75     0010                     	;# 
    76     0011                     	;# 
    77     0012                     	;# 
    78     0013                     	;# 
    79     0014                     	;# 
    80     0015                     	;# 
    81     0015                     	;# 
    82     0016                     	;# 
    83     0017                     	;# 
    84     0018                     	;# 
    85     0019                     	;# 
    86     001A                     	;# 
    87     001B                     	;# 
    88     001B                     	;# 
    89     001C                     	;# 
    90     001D                     	;# 
    91     001E                     	;# 
    92     001F                     	;# 
    93     0081                     	;# 
    94     0085                     	;# 
    95     0086                     	;# 
    96     0087                     	;# 
    97     0088                     	;# 
    98     0089                     	;# 
    99     008C                     	;# 
   100     008D                     	;# 
   101     008E                     	;# 
   102     0091                     	;# 
   103     0092                     	;# 
   104     0093                     	;# 
   105     0094                     	;# 
   106     0098                     	;# 
   107     0099                     	;# 
   108     009C                     	;# 
   109     009D                     	;# 
   110     009E                     	;# 
   111     009F                     	;# 
   112     010C                     	;# 
   113     010D                     	;# 
   114     010E                     	;# 
   115     010F                     	;# 
   116     018C                     	;# 
   117     018D                     	;# 
   118     0000                     	;# 
   119     0001                     	;# 
   120     0002                     	;# 
   121     0003                     	;# 
   122     0004                     	;# 
   123     0005                     	;# 
   124     0006                     	;# 
   125     0007                     	;# 
   126     0008                     	;# 
   127     0009                     	;# 
   128     000A                     	;# 
   129     000B                     	;# 
   130     000C                     	;# 
   131     000D                     	;# 
   132     000E                     	;# 
   133     000E                     	;# 
   134     000F                     	;# 
   135     0010                     	;# 
   136     0011                     	;# 
   137     0012                     	;# 
   138     0013                     	;# 
   139     0014                     	;# 
   140     0015                     	;# 
   141     0015                     	;# 
   142     0016                     	;# 
   143     0017                     	;# 
   144     0018                     	;# 
   145     0019                     	;# 
   146     001A                     	;# 
   147     001B                     	;# 
   148     001B                     	;# 
   149     001C                     	;# 
   150     001D                     	;# 
   151     001E                     	;# 
   152     001F                     	;# 
   153     0081                     	;# 
   154     0085                     	;# 
   155     0086                     	;# 
   156     0087                     	;# 
   157     0088                     	;# 
   158     0089                     	;# 
   159     008C                     	;# 
   160     008D                     	;# 
   161     008E                     	;# 
   162     0091                     	;# 
   163     0092                     	;# 
   164     0093                     	;# 
   165     0094                     	;# 
   166     0098                     	;# 
   167     0099                     	;# 
   168     009C                     	;# 
   169     009D                     	;# 
   170     009E                     	;# 
   171     009F                     	;# 
   172     010C                     	;# 
   173     010D                     	;# 
   174     010E                     	;# 
   175     010F                     	;# 
   176     018C                     	;# 
   177     018D                     	;# 
   178                           
   179                           	psect	idataBANK0
   180     05AE                     __pidataBANK0:
   181                           
   182                           ;initializer for _segment
   183     05AE  343F               	retlw	63
   184     05AF  3406               	retlw	6
   185     05B0  345B               	retlw	91
   186     05B1  344F               	retlw	79
   187     05B2  3466               	retlw	102
   188     05B3  346D               	retlw	109
   189     05B4  347D               	retlw	125
   190     05B5  3407               	retlw	7
   191     05B6  347F               	retlw	127
   192     05B7  346F               	retlw	111
   193                           
   194                           ;initializer for _nb
   195     05B8  34A6               	retlw	166
   196     05B9  3407               	retlw	7
   197                           
   198                           	psect	nvBANK0
   199     002C                     __pnvBANK0:
   200     002C                     _Lu:
   201     002C                     	ds	1
   202     002D                     _Ld:
   203     002D                     	ds	1
   204     002E                     _L:
   205     002E                     	ds	1
   206     002F                     _Ru:
   207     002F                     	ds	1
   208     0030                     _Rd:
   209     0030                     	ds	1
   210     0031                     _R:
   211     0031                     	ds	1
   212     0007                     _PORTCbits	set	7
   213     0006                     _PORTB	set	6
   214     0007                     _PORTC	set	7
   215     0087                     _TRISC	set	135
   216     0086                     _TRISB	set	134
   217                           
   218                           	psect	cinit
   219     07EC                     start_initialization:	
   220                           ; #config settings
   221                           
   222     07EC                     __initialization:
   223                           
   224                           ; Initialize objects allocated to BANK0
   225     07EC  1383               	bcf	3,7	;select IRP bank0
   226     07ED  302C               	movlw	low (__pdataBANK0+12)
   227     07EE  00FD               	movwf	btemp+-1
   228     07EF  3005               	movlw	high __pidataBANK0
   229     07F0  00FE               	movwf	btemp
   230     07F1  30AE               	movlw	low __pidataBANK0
   231     07F2  00FF               	movwf	btemp+1
   232     07F3  3020               	movlw	low __pdataBANK0
   233     07F4  0084               	movwf	4
   234     07F5  120A  118A  25BE  120A  118A  	fcall	init_ram0
   235                           
   236                           ; Clear objects allocated to BANK0
   237     07FA  01B2               	clrf	__pbssBANK0& (0+127)
   238                           
   239                           ; Clear objects allocated to COMMON
   240     07FB  01FD               	clrf	__pbssCOMMON& (0+127)
   241     07FC                     end_of_initialization:	
   242                           ;End of C runtime variable initialization code
   243                           
   244     07FC                     __end_of__initialization:
   245     07FC  0183               	clrf	3
   246     07FD  120A  118A  2DCD   	ljmp	_main	;jump to C main() function
   247                           
   248                           	psect	bssCOMMON
   249     007D                     __pbssCOMMON:
   250     007D                     _i:
   251     007D                     	ds	1
   252                           
   253                           	psect	bssBANK0
   254     0032                     __pbssBANK0:
   255     0032                     _j:
   256     0032                     	ds	1
   257                           
   258                           	psect	dataBANK0
   259     0020                     __pdataBANK0:
   260     0020                     _segment:
   261     0020                     	ds	10
   262     002A                     _nb:
   263     002A                     	ds	2
   264                           
   265                           	psect	inittext
   266     05BA                     init_fetch0:	
   267                           ;	Called with low address in FSR and high address in W
   268                           
   269     05BA  087E               	movf	btemp,w
   270     05BB  008A               	movwf	10
   271     05BC  087F               	movf	btemp+1,w
   272     05BD  0082               	movwf	2
   273     05BE                     init_ram0:	
   274                           ;Called with:
   275                           ;	high address of idata address in btemp 
   276                           ;	low address of idata address in btemp+1 
   277                           ;	low address of data in FSR
   278                           ;	high address + 1 of data in btemp-1
   279                           
   280     05BE  120A  118A  25BA  120A  118A  	fcall	init_fetch0
   281     05C3  0080               	movwf	0
   282     05C4  0A84               	incf	4,f
   283     05C5  0804               	movf	4,w
   284     05C6  067D               	xorwf	btemp+-1,w
   285     05C7  1903               	btfsc	3,2
   286     05C8  3400               	retlw	0
   287     05C9  0AFF               	incf	btemp+1,f
   288     05CA  1903               	btfsc	3,2
   289     05CB  0AFE               	incf	btemp,f
   290     05CC  2DBE               	goto	init_ram0
   291                           
   292                           	psect	cstackCOMMON
   293     0070                     __pcstackCOMMON:
   294     0070                     ?_int_Port:
   295     0070                     ??_int_Port:	
   296                           ; 1 bytes @ 0x0
   297                           
   298     0070                     ?_main:	
   299                           ; 1 bytes @ 0x0
   300                           
   301     0070                     ?___awdiv:	
   302                           ; 1 bytes @ 0x0
   303                           
   304     0070                     ?___awmod:	
   305                           ; 2 bytes @ 0x0
   306                           
   307     0070                     ?___lwdiv:	
   308                           ; 2 bytes @ 0x0
   309                           
   310     0070                     ?___lwmod:	
   311                           ; 2 bytes @ 0x0
   312                           
   313     0070                     ___awdiv@divisor:	
   314                           ; 2 bytes @ 0x0
   315                           
   316     0070                     ___awmod@divisor:	
   317                           ; 2 bytes @ 0x0
   318                           
   319     0070                     ___lwdiv@divisor:	
   320                           ; 2 bytes @ 0x0
   321                           
   322     0070                     ___lwmod@divisor:	
   323                           ; 2 bytes @ 0x0
   324                           
   325                           
   326                           ; 2 bytes @ 0x0
   327     0070                     	ds	2
   328     0072                     ___awdiv@dividend:
   329     0072                     ___awmod@dividend:	
   330                           ; 2 bytes @ 0x2
   331                           
   332     0072                     ___lwdiv@dividend:	
   333                           ; 2 bytes @ 0x2
   334                           
   335     0072                     ___lwmod@dividend:	
   336                           ; 2 bytes @ 0x2
   337                           
   338                           
   339                           ; 2 bytes @ 0x2
   340     0072                     	ds	2
   341     0074                     ??___awdiv:
   342     0074                     ??___awmod:	
   343                           ; 1 bytes @ 0x4
   344                           
   345     0074                     ??___lwdiv:	
   346                           ; 1 bytes @ 0x4
   347                           
   348     0074                     ??___lwmod:	
   349                           ; 1 bytes @ 0x4
   350                           
   351                           
   352                           ; 1 bytes @ 0x4
   353     0074                     	ds	1
   354     0075                     ___awdiv@counter:
   355     0075                     ___awmod@counter:	
   356                           ; 1 bytes @ 0x5
   357                           
   358     0075                     ___lwmod@counter:	
   359                           ; 1 bytes @ 0x5
   360                           
   361     0075                     ___lwdiv@quotient:	
   362                           ; 1 bytes @ 0x5
   363                           
   364                           
   365                           ; 2 bytes @ 0x5
   366     0075                     	ds	1
   367     0076                     ___awdiv@sign:
   368     0076                     ___awmod@sign:	
   369                           ; 1 bytes @ 0x6
   370                           
   371                           
   372                           ; 1 bytes @ 0x6
   373     0076                     	ds	1
   374     0077                     ___lwdiv@counter:
   375     0077                     ___awdiv@quotient:	
   376                           ; 1 bytes @ 0x7
   377                           
   378                           
   379                           ; 2 bytes @ 0x7
   380     0077                     	ds	2
   381     0079                     ?_display_Seg:
   382     0079                     display_Seg@a:	
   383                           ; 1 bytes @ 0x9
   384                           
   385                           
   386                           ; 2 bytes @ 0x9
   387     0079                     	ds	2
   388     007B                     ??_display_Seg:
   389                           
   390                           ; 1 bytes @ 0xB
   391     007B                     	ds	2
   392     007D                     ??_main:
   393                           
   394                           	psect	maintext
   395     05CD                     __pmaintext:	
   396                           ; 1 bytes @ 0xD
   397 ;;
   398 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   399 ;;
   400 ;; *************** function _main *****************
   401 ;; Defined at:
   402 ;;		line 24 in file "main.c"
   403 ;; Parameters:    Size  Location     Type
   404 ;;		None
   405 ;; Auto vars:     Size  Location     Type
   406 ;;		None
   407 ;; Return value:  Size  Location     Type
   408 ;;                  1    wreg      void 
   409 ;; Registers used:
   410 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   411 ;; Tracked objects:
   412 ;;		On entry : B00/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   416 ;;      Params:         0       0       0       0       0
   417 ;;      Locals:         0       0       0       0       0
   418 ;;      Temps:          0       0       0       0       0
   419 ;;      Totals:         0       0       0       0       0
   420 ;;Total ram usage:        0 bytes
   421 ;; Hardware stack levels required when called: 2
   422 ;; This function calls:
   423 ;;		_display_Seg
   424 ;;		_int_Port
   425 ;; This function is called by:
   426 ;;		Startup code after reset
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430     05CD                     _main:	
   431                           ;psect for function _main
   432                           
   433     05CD                     l1012:	
   434                           ;incstack = 0
   435                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   436                           
   437                           
   438                           ;main.c: 26:     PORTC = 0x00;
   439     05CD  120A  118A  25A5  120A  118A  	fcall	_int_Port
   440     05D2                     l1014:
   441                           
   442                           ;main.c: 29: void display_Seg(unsigned short a ){
   443     05D2  1283               	bcf	3,5	;RP0=0, select bank0
   444     05D3  1303               	bcf	3,6	;RP1=0, select bank0
   445     05D4  082B               	movf	_nb+1,w
   446     05D5  00FA               	movwf	display_Seg@a+1
   447     05D6  082A               	movf	_nb,w
   448     05D7  00F9               	movwf	display_Seg@a
   449     05D8  120A  118A  2727  120A  118A  	fcall	_display_Seg
   450     05DD                     l1016:
   451                           
   452                           ;main.c: 30: 
   453     05DD  3001               	movlw	1
   454     05DE  1283               	bcf	3,5	;RP0=0, select bank0
   455     05DF  1303               	bcf	3,6	;RP1=0, select bank0
   456     05E0  07AA               	addwf	_nb,f
   457     05E1  1803               	skipnc
   458     05E2  0AAB               	incf	_nb+1,f
   459     05E3  3000               	movlw	0
   460     05E4  07AB               	addwf	_nb+1,f
   461     05E5  2DD2               	goto	l1014
   462     05E6  120A  118A  2800   	ljmp	start
   463     05E9                     __end_of_main:
   464                           
   465                           	psect	text1
   466     05A5                     __ptext1:	
   467 ;; *************** function _int_Port *****************
   468 ;; Defined at:
   469 ;;		line 37 in file "main.c"
   470 ;; Parameters:    Size  Location     Type
   471 ;;		None
   472 ;; Auto vars:     Size  Location     Type
   473 ;;		None
   474 ;; Return value:  Size  Location     Type
   475 ;;                  1    wreg      void 
   476 ;; Registers used:
   477 ;;		status,2
   478 ;; Tracked objects:
   479 ;;		On entry : 0/0
   480 ;;		On exit  : 0/0
   481 ;;		Unchanged: 0/0
   482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   483 ;;      Params:         0       0       0       0       0
   484 ;;      Locals:         0       0       0       0       0
   485 ;;      Temps:          0       0       0       0       0
   486 ;;      Totals:         0       0       0       0       0
   487 ;;Total ram usage:        0 bytes
   488 ;; Hardware stack levels used: 1
   489 ;; This function calls:
   490 ;;		Nothing
   491 ;; This function is called by:
   492 ;;		_main
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496     05A5                     _int_Port:	
   497                           ;psect for function _int_Port
   498                           
   499     05A5                     l960:	
   500                           ;incstack = 0
   501                           ; Regs used in _int_Port: [status,2]
   502                           
   503                           
   504                           ;main.c: 38:     PORTCbits.RC0 = 0 ;
   505     05A5  1683               	bsf	3,5	;RP0=1, select bank1
   506     05A6  1303               	bcf	3,6	;RP1=0, select bank1
   507     05A7  0186               	clrf	6	;volatile
   508                           
   509                           ;main.c: 39:     PORTCbits.RC1 = 1 ;
   510     05A8  0187               	clrf	7	;volatile
   511                           
   512                           ;main.c: 40:     PORTCbits.RC2 = 1 ;
   513     05A9  1283               	bcf	3,5	;RP0=0, select bank0
   514     05AA  1303               	bcf	3,6	;RP1=0, select bank0
   515     05AB  0187               	clrf	7	;volatile
   516                           
   517                           ;main.c: 41:     PORTCbits.RC3 = 1 ;
   518     05AC  0186               	clrf	6	;volatile
   519     05AD                     l47:
   520     05AD  0008               	return
   521     05AE                     __end_of_int_Port:
   522                           
   523                           	psect	text2
   524     0727                     __ptext2:	
   525 ;; *************** function _display_Seg *****************
   526 ;; Defined at:
   527 ;;		line 43 in file "main.c"
   528 ;; Parameters:    Size  Location     Type
   529 ;;  a               2    9[COMMON] unsigned short 
   530 ;; Auto vars:     Size  Location     Type
   531 ;;		None
   532 ;; Return value:  Size  Location     Type
   533 ;;                  1    wreg      void 
   534 ;; Registers used:
   535 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   536 ;; Tracked objects:
   537 ;;		On entry : 0/0
   538 ;;		On exit  : 0/0
   539 ;;		Unchanged: 0/0
   540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   541 ;;      Params:         2       0       0       0       0
   542 ;;      Locals:         0       0       0       0       0
   543 ;;      Temps:          2       0       0       0       0
   544 ;;      Totals:         4       0       0       0       0
   545 ;;Total ram usage:        4 bytes
   546 ;; Hardware stack levels used: 1
   547 ;; Hardware stack levels required when called: 1
   548 ;; This function calls:
   549 ;;		___awdiv
   550 ;;		___awmod
   551 ;;		___lwdiv
   552 ;;		___lwmod
   553 ;; This function is called by:
   554 ;;		_main
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558     0727                     _display_Seg:	
   559                           ;psect for function _display_Seg
   560                           
   561     0727                     l962:	
   562                           ;incstack = 0
   563                           ; Regs used in _display_Seg: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   564                           
   565                           
   566                           ;main.c: 45:     PORTCbits.RC1 = 0 ;
   567     0727  3064               	movlw	100
   568     0728  00F0               	movwf	___lwdiv@divisor
   569     0729  3000               	movlw	0
   570     072A  00F1               	movwf	___lwdiv@divisor+1
   571     072B  087A               	movf	display_Seg@a+1,w
   572     072C  00F3               	movwf	___lwdiv@dividend+1
   573     072D  0879               	movf	display_Seg@a,w
   574     072E  00F2               	movwf	___lwdiv@dividend
   575     072F  120A  118A  2623  120A  118A  	fcall	___lwdiv
   576     0734  0870               	movf	?___lwdiv,w
   577     0735  1283               	bcf	3,5	;RP0=0, select bank0
   578     0736  1303               	bcf	3,6	;RP1=0, select bank0
   579     0737  00B1               	movwf	_R
   580                           
   581                           ;main.c: 46:     PORTCbits.RC2 = 1 ;
   582     0738  300A               	movlw	10
   583     0739  00F0               	movwf	___awdiv@divisor
   584     073A  3000               	movlw	0
   585     073B  00F1               	movwf	___awdiv@divisor+1
   586     073C  0831               	movf	_R,w
   587     073D  00FB               	movwf	??_display_Seg
   588     073E  01FC               	clrf	??_display_Seg+1
   589     073F  087B               	movf	??_display_Seg,w
   590     0740  00F2               	movwf	___awdiv@dividend
   591     0741  087C               	movf	??_display_Seg+1,w
   592     0742  00F3               	movwf	___awdiv@dividend+1
   593     0743  120A  118A  26C0  120A  118A  	fcall	___awdiv
   594     0748  0870               	movf	?___awdiv,w
   595     0749  1283               	bcf	3,5	;RP0=0, select bank0
   596     074A  1303               	bcf	3,6	;RP1=0, select bank0
   597     074B  00B0               	movwf	_Rd
   598                           
   599                           ;main.c: 47:     PORTCbits.RC3 = 1 ;
   600     074C  300A               	movlw	10
   601     074D  00F0               	movwf	___awmod@divisor
   602     074E  3000               	movlw	0
   603     074F  00F1               	movwf	___awmod@divisor+1
   604     0750  0831               	movf	_R,w
   605     0751  00FB               	movwf	??_display_Seg
   606     0752  01FC               	clrf	??_display_Seg+1
   607     0753  087B               	movf	??_display_Seg,w
   608     0754  00F2               	movwf	___awmod@dividend
   609     0755  087C               	movf	??_display_Seg+1,w
   610     0756  00F3               	movwf	___awmod@dividend+1
   611     0757  120A  118A  2667  120A  118A  	fcall	___awmod
   612     075C  0870               	movf	?___awmod,w
   613     075D  1283               	bcf	3,5	;RP0=0, select bank0
   614     075E  1303               	bcf	3,6	;RP1=0, select bank0
   615     075F  00AF               	movwf	_Ru
   616                           
   617                           ;main.c: 48:      PORTB = segment[Ru];
   618     0760  3064               	movlw	100
   619     0761  00F0               	movwf	___lwmod@divisor
   620     0762  3000               	movlw	0
   621     0763  00F1               	movwf	___lwmod@divisor+1
   622     0764  087A               	movf	display_Seg@a+1,w
   623     0765  00F3               	movwf	___lwmod@dividend+1
   624     0766  0879               	movf	display_Seg@a,w
   625     0767  00F2               	movwf	___lwmod@dividend
   626     0768  120A  118A  25E9  120A  118A  	fcall	___lwmod
   627     076D  0870               	movf	?___lwmod,w
   628     076E  1283               	bcf	3,5	;RP0=0, select bank0
   629     076F  1303               	bcf	3,6	;RP1=0, select bank0
   630     0770  00AE               	movwf	_L
   631                           
   632                           ;main.c: 49:     _delay((unsigned long)((10)*(20000000/4000.0)));
   633     0771  300A               	movlw	10
   634     0772  00F0               	movwf	___awdiv@divisor
   635     0773  3000               	movlw	0
   636     0774  00F1               	movwf	___awdiv@divisor+1
   637     0775  082E               	movf	_L,w
   638     0776  00FB               	movwf	??_display_Seg
   639     0777  01FC               	clrf	??_display_Seg+1
   640     0778  087B               	movf	??_display_Seg,w
   641     0779  00F2               	movwf	___awdiv@dividend
   642     077A  087C               	movf	??_display_Seg+1,w
   643     077B  00F3               	movwf	___awdiv@dividend+1
   644     077C  120A  118A  26C0  120A  118A  	fcall	___awdiv
   645     0781  0870               	movf	?___awdiv,w
   646     0782  1283               	bcf	3,5	;RP0=0, select bank0
   647     0783  1303               	bcf	3,6	;RP1=0, select bank0
   648     0784  00AD               	movwf	_Ld
   649                           
   650                           ;main.c: 50:     PORTCbits.RC0 = 1 ;
   651     0785  300A               	movlw	10
   652     0786  00F0               	movwf	___awmod@divisor
   653     0787  3000               	movlw	0
   654     0788  00F1               	movwf	___awmod@divisor+1
   655     0789  082E               	movf	_L,w
   656     078A  00FB               	movwf	??_display_Seg
   657     078B  01FC               	clrf	??_display_Seg+1
   658     078C  087B               	movf	??_display_Seg,w
   659     078D  00F2               	movwf	___awmod@dividend
   660     078E  087C               	movf	??_display_Seg+1,w
   661     078F  00F3               	movwf	___awmod@dividend+1
   662     0790  120A  118A  2667  120A  118A  	fcall	___awmod
   663     0795  0870               	movf	?___awmod,w
   664     0796  1283               	bcf	3,5	;RP0=0, select bank0
   665     0797  1303               	bcf	3,6	;RP1=0, select bank0
   666     0798  00AC               	movwf	_Lu
   667     0799                     l964:
   668                           
   669                           ;main.c: 52:     PORTCbits.RC2 = 0 ;
   670     0799  1007               	bcf	7,0	;volatile
   671     079A                     l966:
   672                           
   673                           ;main.c: 53:     PORTCbits.RC3 = 1 ;
   674     079A  1487               	bsf	7,1	;volatile
   675     079B                     l968:
   676                           
   677                           ;main.c: 54:     PORTB = segment[Ld];
   678     079B  1507               	bsf	7,2	;volatile
   679     079C                     l970:
   680                           
   681                           ;main.c: 55:     _delay((unsigned long)((10)*(20000000/4000.0)));
   682     079C  1587               	bsf	7,3	;volatile
   683     079D                     l972:
   684                           
   685                           ;main.c: 56:     PORTCbits.RC0 = 1 ;
   686     079D  0830               	movf	_Rd,w
   687     079E  3E20               	addlw	(low (_segment| 0))& (0+255)
   688     079F  0084               	movwf	4
   689     07A0  1383               	bcf	3,7	;select IRP bank0
   690     07A1  0800               	movf	0,w
   691     07A2  0086               	movwf	6	;volatile
   692     07A3                     l974:
   693                           
   694                           ;main.c: 57:     PORTCbits.RC1 = 1 ;
   695     07A3  3041               	movlw	65
   696     07A4  00FC               	movwf	??_display_Seg+1
   697     07A5  30EE               	movlw	238
   698     07A6  00FB               	movwf	??_display_Seg
   699     07A7                     u657:
   700     07A7  0BFB               	decfsz	??_display_Seg,f
   701     07A8  2FA7               	goto	u657
   702     07A9  0BFC               	decfsz	??_display_Seg+1,f
   703     07AA  2FA7               	goto	u657
   704     07AB  0000               	nop
   705     07AC                     l976:
   706                           
   707                           ;main.c: 58:     PORTCbits.RC2 = 1 ;
   708     07AC  1283               	bcf	3,5	;RP0=0, select bank0
   709     07AD  1303               	bcf	3,6	;RP1=0, select bank0
   710     07AE  1407               	bsf	7,0	;volatile
   711     07AF                     l978:
   712                           
   713                           ;main.c: 59:     PORTCbits.RC3 = 0 ;
   714     07AF  1087               	bcf	7,1	;volatile
   715     07B0                     l980:
   716                           
   717                           ;main.c: 60:     PORTB = segment[Lu];
   718     07B0  1507               	bsf	7,2	;volatile
   719     07B1                     l982:
   720                           
   721                           ;main.c: 61:     _delay((unsigned long)((10)*(20000000/4000.0)));
   722     07B1  1587               	bsf	7,3	;volatile
   723     07B2                     l984:
   724                           
   725                           ;main.c: 62: 
   726     07B2  082F               	movf	_Ru,w
   727     07B3  3E20               	addlw	(low (_segment| 0))& (0+255)
   728     07B4  0084               	movwf	4
   729     07B5  1383               	bcf	3,7	;select IRP bank0
   730     07B6  0800               	movf	0,w
   731     07B7  0086               	movwf	6	;volatile
   732     07B8                     l986:
   733                           
   734                           ;main.c: 63: };
   735     07B8  3041               	movlw	65
   736     07B9  00FC               	movwf	??_display_Seg+1
   737     07BA  30EE               	movlw	238
   738     07BB  00FB               	movwf	??_display_Seg
   739     07BC                     u667:
   740     07BC  0BFB               	decfsz	??_display_Seg,f
   741     07BD  2FBC               	goto	u667
   742     07BE  0BFC               	decfsz	??_display_Seg+1,f
   743     07BF  2FBC               	goto	u667
   744     07C0  0000               	nop
   745     07C1                     l988:
   746     07C1  1283               	bcf	3,5	;RP0=0, select bank0
   747     07C2  1303               	bcf	3,6	;RP1=0, select bank0
   748     07C3  1407               	bsf	7,0	;volatile
   749     07C4                     l990:
   750     07C4  1487               	bsf	7,1	;volatile
   751     07C5                     l992:
   752     07C5  1107               	bcf	7,2	;volatile
   753     07C6                     l994:
   754     07C6  1587               	bsf	7,3	;volatile
   755     07C7                     l996:
   756     07C7  082D               	movf	_Ld,w
   757     07C8  3E20               	addlw	(low (_segment| 0))& (0+255)
   758     07C9  0084               	movwf	4
   759     07CA  1383               	bcf	3,7	;select IRP bank0
   760     07CB  0800               	movf	0,w
   761     07CC  0086               	movwf	6	;volatile
   762     07CD                     l998:
   763     07CD  3041               	movlw	65
   764     07CE  00FC               	movwf	??_display_Seg+1
   765     07CF  30EE               	movlw	238
   766     07D0  00FB               	movwf	??_display_Seg
   767     07D1                     u677:
   768     07D1  0BFB               	decfsz	??_display_Seg,f
   769     07D2  2FD1               	goto	u677
   770     07D3  0BFC               	decfsz	??_display_Seg+1,f
   771     07D4  2FD1               	goto	u677
   772     07D5  0000               	nop
   773     07D6                     l1000:
   774     07D6  1283               	bcf	3,5	;RP0=0, select bank0
   775     07D7  1303               	bcf	3,6	;RP1=0, select bank0
   776     07D8  1407               	bsf	7,0	;volatile
   777     07D9                     l1002:
   778     07D9  1487               	bsf	7,1	;volatile
   779     07DA                     l1004:
   780     07DA  1507               	bsf	7,2	;volatile
   781     07DB                     l1006:
   782     07DB  1187               	bcf	7,3	;volatile
   783     07DC                     l1008:
   784     07DC  082C               	movf	_Lu,w
   785     07DD  3E20               	addlw	(low (_segment| 0))& (0+255)
   786     07DE  0084               	movwf	4
   787     07DF  1383               	bcf	3,7	;select IRP bank0
   788     07E0  0800               	movf	0,w
   789     07E1  0086               	movwf	6	;volatile
   790     07E2                     l1010:
   791     07E2  3041               	movlw	65
   792     07E3  00FC               	movwf	??_display_Seg+1
   793     07E4  30EE               	movlw	238
   794     07E5  00FB               	movwf	??_display_Seg
   795     07E6                     u687:
   796     07E6  0BFB               	decfsz	??_display_Seg,f
   797     07E7  2FE6               	goto	u687
   798     07E8  0BFC               	decfsz	??_display_Seg+1,f
   799     07E9  2FE6               	goto	u687
   800     07EA  0000               	nop
   801     07EB                     l50:
   802     07EB  0008               	return
   803     07EC                     __end_of_display_Seg:
   804                           
   805                           	psect	text3
   806     05E9                     __ptext3:	
   807 ;; *************** function ___lwmod *****************
   808 ;; Defined at:
   809 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;  divisor         2    0[COMMON] unsigned int 
   812 ;;  dividend        2    2[COMMON] unsigned int 
   813 ;; Auto vars:     Size  Location     Type
   814 ;;  counter         1    5[COMMON] unsigned char 
   815 ;; Return value:  Size  Location     Type
   816 ;;                  2    0[COMMON] unsigned int 
   817 ;; Registers used:
   818 ;;		wreg, status,2, status,0
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   824 ;;      Params:         4       0       0       0       0
   825 ;;      Locals:         1       0       0       0       0
   826 ;;      Temps:          1       0       0       0       0
   827 ;;      Totals:         6       0       0       0       0
   828 ;;Total ram usage:        6 bytes
   829 ;; Hardware stack levels used: 1
   830 ;; This function calls:
   831 ;;		Nothing
   832 ;; This function is called by:
   833 ;;		_display_Seg
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837     05E9                     ___lwmod:	
   838                           ;psect for function ___lwmod
   839                           
   840     05E9                     l938:	
   841                           ;incstack = 0
   842                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   843                           
   844     05E9  0870               	movf	___lwmod@divisor,w
   845     05EA  0471               	iorwf	___lwmod@divisor+1,w
   846     05EB  1903               	btfsc	3,2
   847     05EC  2DEE               	goto	u591
   848     05ED  2DEF               	goto	u590
   849     05EE                     u591:
   850     05EE  2E1E               	goto	l956
   851     05EF                     u590:
   852     05EF                     l940:
   853     05EF  01F5               	clrf	___lwmod@counter
   854     05F0  0AF5               	incf	___lwmod@counter,f
   855     05F1  2DFD               	goto	l946
   856     05F2                     l942:
   857     05F2  3001               	movlw	1
   858     05F3                     u605:
   859     05F3  1003               	clrc
   860     05F4  0DF0               	rlf	___lwmod@divisor,f
   861     05F5  0DF1               	rlf	___lwmod@divisor+1,f
   862     05F6  3EFF               	addlw	-1
   863     05F7  1D03               	skipz
   864     05F8  2DF3               	goto	u605
   865     05F9                     l944:
   866     05F9  3001               	movlw	1
   867     05FA  00F4               	movwf	??___lwmod
   868     05FB  0874               	movf	??___lwmod,w
   869     05FC  07F5               	addwf	___lwmod@counter,f
   870     05FD                     l946:
   871     05FD  1FF1               	btfss	___lwmod@divisor+1,7
   872     05FE  2E00               	goto	u611
   873     05FF  2E01               	goto	u610
   874     0600                     u611:
   875     0600  2DF2               	goto	l942
   876     0601                     u610:
   877     0601                     l948:
   878     0601  0871               	movf	___lwmod@divisor+1,w
   879     0602  0273               	subwf	___lwmod@dividend+1,w
   880     0603  1D03               	skipz
   881     0604  2E07               	goto	u625
   882     0605  0870               	movf	___lwmod@divisor,w
   883     0606  0272               	subwf	___lwmod@dividend,w
   884     0607                     u625:
   885     0607  1C03               	skipc
   886     0608  2E0A               	goto	u621
   887     0609  2E0B               	goto	u620
   888     060A                     u621:
   889     060A  2E11               	goto	l952
   890     060B                     u620:
   891     060B                     l950:
   892     060B  0870               	movf	___lwmod@divisor,w
   893     060C  02F2               	subwf	___lwmod@dividend,f
   894     060D  0871               	movf	___lwmod@divisor+1,w
   895     060E  1C03               	skipc
   896     060F  03F3               	decf	___lwmod@dividend+1,f
   897     0610  02F3               	subwf	___lwmod@dividend+1,f
   898     0611                     l952:
   899     0611  3001               	movlw	1
   900     0612                     u635:
   901     0612  1003               	clrc
   902     0613  0CF1               	rrf	___lwmod@divisor+1,f
   903     0614  0CF0               	rrf	___lwmod@divisor,f
   904     0615  3EFF               	addlw	-1
   905     0616  1D03               	skipz
   906     0617  2E12               	goto	u635
   907     0618                     l954:
   908     0618  3001               	movlw	1
   909     0619  02F5               	subwf	___lwmod@counter,f
   910     061A  1D03               	btfss	3,2
   911     061B  2E1D               	goto	u641
   912     061C  2E1E               	goto	u640
   913     061D                     u641:
   914     061D  2E01               	goto	l948
   915     061E                     u640:
   916     061E                     l956:
   917     061E  0873               	movf	___lwmod@dividend+1,w
   918     061F  00F1               	movwf	?___lwmod+1
   919     0620  0872               	movf	___lwmod@dividend,w
   920     0621  00F0               	movwf	?___lwmod
   921     0622                     l418:
   922     0622  0008               	return
   923     0623                     __end_of___lwmod:
   924                           
   925                           	psect	text4
   926     0623                     __ptext4:	
   927 ;; *************** function ___lwdiv *****************
   928 ;; Defined at:
   929 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
   930 ;; Parameters:    Size  Location     Type
   931 ;;  divisor         2    0[COMMON] unsigned int 
   932 ;;  dividend        2    2[COMMON] unsigned int 
   933 ;; Auto vars:     Size  Location     Type
   934 ;;  quotient        2    5[COMMON] unsigned int 
   935 ;;  counter         1    7[COMMON] unsigned char 
   936 ;; Return value:  Size  Location     Type
   937 ;;                  2    0[COMMON] unsigned int 
   938 ;; Registers used:
   939 ;;		wreg, status,2, status,0
   940 ;; Tracked objects:
   941 ;;		On entry : 0/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   945 ;;      Params:         4       0       0       0       0
   946 ;;      Locals:         3       0       0       0       0
   947 ;;      Temps:          1       0       0       0       0
   948 ;;      Totals:         8       0       0       0       0
   949 ;;Total ram usage:        8 bytes
   950 ;; Hardware stack levels used: 1
   951 ;; This function calls:
   952 ;;		Nothing
   953 ;; This function is called by:
   954 ;;		_display_Seg
   955 ;; This function uses a non-reentrant model
   956 ;;
   957                           
   958     0623                     ___lwdiv:	
   959                           ;psect for function ___lwdiv
   960                           
   961     0623                     l912:	
   962                           ;incstack = 0
   963                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   964                           
   965     0623  01F5               	clrf	___lwdiv@quotient
   966     0624  01F6               	clrf	___lwdiv@quotient+1
   967     0625                     l914:
   968     0625  0870               	movf	___lwdiv@divisor,w
   969     0626  0471               	iorwf	___lwdiv@divisor+1,w
   970     0627  1903               	btfsc	3,2
   971     0628  2E2A               	goto	u521
   972     0629  2E2B               	goto	u520
   973     062A                     u521:
   974     062A  2E62               	goto	l934
   975     062B                     u520:
   976     062B                     l916:
   977     062B  01F7               	clrf	___lwdiv@counter
   978     062C  0AF7               	incf	___lwdiv@counter,f
   979     062D  2E39               	goto	l922
   980     062E                     l918:
   981     062E  3001               	movlw	1
   982     062F                     u535:
   983     062F  1003               	clrc
   984     0630  0DF0               	rlf	___lwdiv@divisor,f
   985     0631  0DF1               	rlf	___lwdiv@divisor+1,f
   986     0632  3EFF               	addlw	-1
   987     0633  1D03               	skipz
   988     0634  2E2F               	goto	u535
   989     0635                     l920:
   990     0635  3001               	movlw	1
   991     0636  00F4               	movwf	??___lwdiv
   992     0637  0874               	movf	??___lwdiv,w
   993     0638  07F7               	addwf	___lwdiv@counter,f
   994     0639                     l922:
   995     0639  1FF1               	btfss	___lwdiv@divisor+1,7
   996     063A  2E3C               	goto	u541
   997     063B  2E3D               	goto	u540
   998     063C                     u541:
   999     063C  2E2E               	goto	l918
  1000     063D                     u540:
  1001     063D                     l924:
  1002     063D  3001               	movlw	1
  1003     063E                     u555:
  1004     063E  1003               	clrc
  1005     063F  0DF5               	rlf	___lwdiv@quotient,f
  1006     0640  0DF6               	rlf	___lwdiv@quotient+1,f
  1007     0641  3EFF               	addlw	-1
  1008     0642  1D03               	skipz
  1009     0643  2E3E               	goto	u555
  1010     0644  0871               	movf	___lwdiv@divisor+1,w
  1011     0645  0273               	subwf	___lwdiv@dividend+1,w
  1012     0646  1D03               	skipz
  1013     0647  2E4A               	goto	u565
  1014     0648  0870               	movf	___lwdiv@divisor,w
  1015     0649  0272               	subwf	___lwdiv@dividend,w
  1016     064A                     u565:
  1017     064A  1C03               	skipc
  1018     064B  2E4D               	goto	u561
  1019     064C  2E4E               	goto	u560
  1020     064D                     u561:
  1021     064D  2E55               	goto	l930
  1022     064E                     u560:
  1023     064E                     l926:
  1024     064E  0870               	movf	___lwdiv@divisor,w
  1025     064F  02F2               	subwf	___lwdiv@dividend,f
  1026     0650  0871               	movf	___lwdiv@divisor+1,w
  1027     0651  1C03               	skipc
  1028     0652  03F3               	decf	___lwdiv@dividend+1,f
  1029     0653  02F3               	subwf	___lwdiv@dividend+1,f
  1030     0654                     l928:
  1031     0654  1475               	bsf	___lwdiv@quotient,0
  1032     0655                     l930:
  1033     0655  3001               	movlw	1
  1034     0656                     u575:
  1035     0656  1003               	clrc
  1036     0657  0CF1               	rrf	___lwdiv@divisor+1,f
  1037     0658  0CF0               	rrf	___lwdiv@divisor,f
  1038     0659  3EFF               	addlw	-1
  1039     065A  1D03               	skipz
  1040     065B  2E56               	goto	u575
  1041     065C                     l932:
  1042     065C  3001               	movlw	1
  1043     065D  02F7               	subwf	___lwdiv@counter,f
  1044     065E  1D03               	btfss	3,2
  1045     065F  2E61               	goto	u581
  1046     0660  2E62               	goto	u580
  1047     0661                     u581:
  1048     0661  2E3D               	goto	l924
  1049     0662                     u580:
  1050     0662                     l934:
  1051     0662  0876               	movf	___lwdiv@quotient+1,w
  1052     0663  00F1               	movwf	?___lwdiv+1
  1053     0664  0875               	movf	___lwdiv@quotient,w
  1054     0665  00F0               	movwf	?___lwdiv
  1055     0666                     l408:
  1056     0666  0008               	return
  1057     0667                     __end_of___lwdiv:
  1058                           
  1059                           	psect	text5
  1060     0667                     __ptext5:	
  1061 ;; *************** function ___awmod *****************
  1062 ;; Defined at:
  1063 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;  divisor         2    0[COMMON] int 
  1066 ;;  dividend        2    2[COMMON] int 
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;  sign            1    6[COMMON] unsigned char 
  1069 ;;  counter         1    5[COMMON] unsigned char 
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  2    0[COMMON] int 
  1072 ;; Registers used:
  1073 ;;		wreg, status,2, status,0
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1079 ;;      Params:         4       0       0       0       0
  1080 ;;      Locals:         2       0       0       0       0
  1081 ;;      Temps:          1       0       0       0       0
  1082 ;;      Totals:         7       0       0       0       0
  1083 ;;Total ram usage:        7 bytes
  1084 ;; Hardware stack levels used: 1
  1085 ;; This function calls:
  1086 ;;		Nothing
  1087 ;; This function is called by:
  1088 ;;		_display_Seg
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092     0667                     ___awmod:	
  1093                           ;psect for function ___awmod
  1094                           
  1095     0667                     l874:	
  1096                           ;incstack = 0
  1097                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1098                           
  1099     0667  01F6               	clrf	___awmod@sign
  1100     0668                     l876:
  1101     0668  1FF3               	btfss	___awmod@dividend+1,7
  1102     0669  2E6B               	goto	u431
  1103     066A  2E6C               	goto	u430
  1104     066B                     u431:
  1105     066B  2E73               	goto	l882
  1106     066C                     u430:
  1107     066C                     l878:
  1108     066C  09F2               	comf	___awmod@dividend,f
  1109     066D  09F3               	comf	___awmod@dividend+1,f
  1110     066E  0AF2               	incf	___awmod@dividend,f
  1111     066F  1903               	skipnz
  1112     0670  0AF3               	incf	___awmod@dividend+1,f
  1113     0671                     l880:
  1114     0671  01F6               	clrf	___awmod@sign
  1115     0672  0AF6               	incf	___awmod@sign,f
  1116     0673                     l882:
  1117     0673  1FF1               	btfss	___awmod@divisor+1,7
  1118     0674  2E76               	goto	u441
  1119     0675  2E77               	goto	u440
  1120     0676                     u441:
  1121     0676  2E7C               	goto	l886
  1122     0677                     u440:
  1123     0677                     l884:
  1124     0677  09F0               	comf	___awmod@divisor,f
  1125     0678  09F1               	comf	___awmod@divisor+1,f
  1126     0679  0AF0               	incf	___awmod@divisor,f
  1127     067A  1903               	skipnz
  1128     067B  0AF1               	incf	___awmod@divisor+1,f
  1129     067C                     l886:
  1130     067C  0870               	movf	___awmod@divisor,w
  1131     067D  0471               	iorwf	___awmod@divisor+1,w
  1132     067E  1903               	btfsc	3,2
  1133     067F  2E81               	goto	u451
  1134     0680  2E82               	goto	u450
  1135     0681                     u451:
  1136     0681  2EB1               	goto	l904
  1137     0682                     u450:
  1138     0682                     l888:
  1139     0682  01F5               	clrf	___awmod@counter
  1140     0683  0AF5               	incf	___awmod@counter,f
  1141     0684  2E90               	goto	l894
  1142     0685                     l890:
  1143     0685  3001               	movlw	1
  1144     0686                     u465:
  1145     0686  1003               	clrc
  1146     0687  0DF0               	rlf	___awmod@divisor,f
  1147     0688  0DF1               	rlf	___awmod@divisor+1,f
  1148     0689  3EFF               	addlw	-1
  1149     068A  1D03               	skipz
  1150     068B  2E86               	goto	u465
  1151     068C                     l892:
  1152     068C  3001               	movlw	1
  1153     068D  00F4               	movwf	??___awmod
  1154     068E  0874               	movf	??___awmod,w
  1155     068F  07F5               	addwf	___awmod@counter,f
  1156     0690                     l894:
  1157     0690  1FF1               	btfss	___awmod@divisor+1,7
  1158     0691  2E93               	goto	u471
  1159     0692  2E94               	goto	u470
  1160     0693                     u471:
  1161     0693  2E85               	goto	l890
  1162     0694                     u470:
  1163     0694                     l896:
  1164     0694  0871               	movf	___awmod@divisor+1,w
  1165     0695  0273               	subwf	___awmod@dividend+1,w
  1166     0696  1D03               	skipz
  1167     0697  2E9A               	goto	u485
  1168     0698  0870               	movf	___awmod@divisor,w
  1169     0699  0272               	subwf	___awmod@dividend,w
  1170     069A                     u485:
  1171     069A  1C03               	skipc
  1172     069B  2E9D               	goto	u481
  1173     069C  2E9E               	goto	u480
  1174     069D                     u481:
  1175     069D  2EA4               	goto	l900
  1176     069E                     u480:
  1177     069E                     l898:
  1178     069E  0870               	movf	___awmod@divisor,w
  1179     069F  02F2               	subwf	___awmod@dividend,f
  1180     06A0  0871               	movf	___awmod@divisor+1,w
  1181     06A1  1C03               	skipc
  1182     06A2  03F3               	decf	___awmod@dividend+1,f
  1183     06A3  02F3               	subwf	___awmod@dividend+1,f
  1184     06A4                     l900:
  1185     06A4  3001               	movlw	1
  1186     06A5                     u495:
  1187     06A5  1003               	clrc
  1188     06A6  0CF1               	rrf	___awmod@divisor+1,f
  1189     06A7  0CF0               	rrf	___awmod@divisor,f
  1190     06A8  3EFF               	addlw	-1
  1191     06A9  1D03               	skipz
  1192     06AA  2EA5               	goto	u495
  1193     06AB                     l902:
  1194     06AB  3001               	movlw	1
  1195     06AC  02F5               	subwf	___awmod@counter,f
  1196     06AD  1D03               	btfss	3,2
  1197     06AE  2EB0               	goto	u501
  1198     06AF  2EB1               	goto	u500
  1199     06B0                     u501:
  1200     06B0  2E94               	goto	l896
  1201     06B1                     u500:
  1202     06B1                     l904:
  1203     06B1  0876               	movf	___awmod@sign,w
  1204     06B2  1903               	btfsc	3,2
  1205     06B3  2EB5               	goto	u511
  1206     06B4  2EB6               	goto	u510
  1207     06B5                     u511:
  1208     06B5  2EBB               	goto	l908
  1209     06B6                     u510:
  1210     06B6                     l906:
  1211     06B6  09F2               	comf	___awmod@dividend,f
  1212     06B7  09F3               	comf	___awmod@dividend+1,f
  1213     06B8  0AF2               	incf	___awmod@dividend,f
  1214     06B9  1903               	skipnz
  1215     06BA  0AF3               	incf	___awmod@dividend+1,f
  1216     06BB                     l908:
  1217     06BB  0873               	movf	___awmod@dividend+1,w
  1218     06BC  00F1               	movwf	?___awmod+1
  1219     06BD  0872               	movf	___awmod@dividend,w
  1220     06BE  00F0               	movwf	?___awmod
  1221     06BF                     l302:
  1222     06BF  0008               	return
  1223     06C0                     __end_of___awmod:
  1224                           
  1225                           	psect	text6
  1226     06C0                     __ptext6:	
  1227 ;; *************** function ___awdiv *****************
  1228 ;; Defined at:
  1229 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;  divisor         2    0[COMMON] int 
  1232 ;;  dividend        2    2[COMMON] int 
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;  quotient        2    7[COMMON] int 
  1235 ;;  sign            1    6[COMMON] unsigned char 
  1236 ;;  counter         1    5[COMMON] unsigned char 
  1237 ;; Return value:  Size  Location     Type
  1238 ;;                  2    0[COMMON] int 
  1239 ;; Registers used:
  1240 ;;		wreg, status,2, status,0
  1241 ;; Tracked objects:
  1242 ;;		On entry : 0/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1246 ;;      Params:         4       0       0       0       0
  1247 ;;      Locals:         4       0       0       0       0
  1248 ;;      Temps:          1       0       0       0       0
  1249 ;;      Totals:         9       0       0       0       0
  1250 ;;Total ram usage:        9 bytes
  1251 ;; Hardware stack levels used: 1
  1252 ;; This function calls:
  1253 ;;		Nothing
  1254 ;; This function is called by:
  1255 ;;		_display_Seg
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259     06C0                     ___awdiv:	
  1260                           ;psect for function ___awdiv
  1261                           
  1262     06C0                     l830:	
  1263                           ;incstack = 0
  1264                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1265                           
  1266     06C0  01F6               	clrf	___awdiv@sign
  1267     06C1                     l832:
  1268     06C1  1FF1               	btfss	___awdiv@divisor+1,7
  1269     06C2  2EC4               	goto	u331
  1270     06C3  2EC5               	goto	u330
  1271     06C4                     u331:
  1272     06C4  2ECC               	goto	l838
  1273     06C5                     u330:
  1274     06C5                     l834:
  1275     06C5  09F0               	comf	___awdiv@divisor,f
  1276     06C6  09F1               	comf	___awdiv@divisor+1,f
  1277     06C7  0AF0               	incf	___awdiv@divisor,f
  1278     06C8  1903               	skipnz
  1279     06C9  0AF1               	incf	___awdiv@divisor+1,f
  1280     06CA                     l836:
  1281     06CA  01F6               	clrf	___awdiv@sign
  1282     06CB  0AF6               	incf	___awdiv@sign,f
  1283     06CC                     l838:
  1284     06CC  1FF3               	btfss	___awdiv@dividend+1,7
  1285     06CD  2ECF               	goto	u341
  1286     06CE  2ED0               	goto	u340
  1287     06CF                     u341:
  1288     06CF  2ED9               	goto	l844
  1289     06D0                     u340:
  1290     06D0                     l840:
  1291     06D0  09F2               	comf	___awdiv@dividend,f
  1292     06D1  09F3               	comf	___awdiv@dividend+1,f
  1293     06D2  0AF2               	incf	___awdiv@dividend,f
  1294     06D3  1903               	skipnz
  1295     06D4  0AF3               	incf	___awdiv@dividend+1,f
  1296     06D5                     l842:
  1297     06D5  3001               	movlw	1
  1298     06D6  00F4               	movwf	??___awdiv
  1299     06D7  0874               	movf	??___awdiv,w
  1300     06D8  06F6               	xorwf	___awdiv@sign,f
  1301     06D9                     l844:
  1302     06D9  01F7               	clrf	___awdiv@quotient
  1303     06DA  01F8               	clrf	___awdiv@quotient+1
  1304     06DB                     l846:
  1305     06DB  0870               	movf	___awdiv@divisor,w
  1306     06DC  0471               	iorwf	___awdiv@divisor+1,w
  1307     06DD  1903               	btfsc	3,2
  1308     06DE  2EE0               	goto	u351
  1309     06DF  2EE1               	goto	u350
  1310     06E0                     u351:
  1311     06E0  2F18               	goto	l866
  1312     06E1                     u350:
  1313     06E1                     l848:
  1314     06E1  01F5               	clrf	___awdiv@counter
  1315     06E2  0AF5               	incf	___awdiv@counter,f
  1316     06E3  2EEF               	goto	l854
  1317     06E4                     l850:
  1318     06E4  3001               	movlw	1
  1319     06E5                     u365:
  1320     06E5  1003               	clrc
  1321     06E6  0DF0               	rlf	___awdiv@divisor,f
  1322     06E7  0DF1               	rlf	___awdiv@divisor+1,f
  1323     06E8  3EFF               	addlw	-1
  1324     06E9  1D03               	skipz
  1325     06EA  2EE5               	goto	u365
  1326     06EB                     l852:
  1327     06EB  3001               	movlw	1
  1328     06EC  00F4               	movwf	??___awdiv
  1329     06ED  0874               	movf	??___awdiv,w
  1330     06EE  07F5               	addwf	___awdiv@counter,f
  1331     06EF                     l854:
  1332     06EF  1FF1               	btfss	___awdiv@divisor+1,7
  1333     06F0  2EF2               	goto	u371
  1334     06F1  2EF3               	goto	u370
  1335     06F2                     u371:
  1336     06F2  2EE4               	goto	l850
  1337     06F3                     u370:
  1338     06F3                     l856:
  1339     06F3  3001               	movlw	1
  1340     06F4                     u385:
  1341     06F4  1003               	clrc
  1342     06F5  0DF7               	rlf	___awdiv@quotient,f
  1343     06F6  0DF8               	rlf	___awdiv@quotient+1,f
  1344     06F7  3EFF               	addlw	-1
  1345     06F8  1D03               	skipz
  1346     06F9  2EF4               	goto	u385
  1347     06FA  0871               	movf	___awdiv@divisor+1,w
  1348     06FB  0273               	subwf	___awdiv@dividend+1,w
  1349     06FC  1D03               	skipz
  1350     06FD  2F00               	goto	u395
  1351     06FE  0870               	movf	___awdiv@divisor,w
  1352     06FF  0272               	subwf	___awdiv@dividend,w
  1353     0700                     u395:
  1354     0700  1C03               	skipc
  1355     0701  2F03               	goto	u391
  1356     0702  2F04               	goto	u390
  1357     0703                     u391:
  1358     0703  2F0B               	goto	l862
  1359     0704                     u390:
  1360     0704                     l858:
  1361     0704  0870               	movf	___awdiv@divisor,w
  1362     0705  02F2               	subwf	___awdiv@dividend,f
  1363     0706  0871               	movf	___awdiv@divisor+1,w
  1364     0707  1C03               	skipc
  1365     0708  03F3               	decf	___awdiv@dividend+1,f
  1366     0709  02F3               	subwf	___awdiv@dividend+1,f
  1367     070A                     l860:
  1368     070A  1477               	bsf	___awdiv@quotient,0
  1369     070B                     l862:
  1370     070B  3001               	movlw	1
  1371     070C                     u405:
  1372     070C  1003               	clrc
  1373     070D  0CF1               	rrf	___awdiv@divisor+1,f
  1374     070E  0CF0               	rrf	___awdiv@divisor,f
  1375     070F  3EFF               	addlw	-1
  1376     0710  1D03               	skipz
  1377     0711  2F0C               	goto	u405
  1378     0712                     l864:
  1379     0712  3001               	movlw	1
  1380     0713  02F5               	subwf	___awdiv@counter,f
  1381     0714  1D03               	btfss	3,2
  1382     0715  2F17               	goto	u411
  1383     0716  2F18               	goto	u410
  1384     0717                     u411:
  1385     0717  2EF3               	goto	l856
  1386     0718                     u410:
  1387     0718                     l866:
  1388     0718  0876               	movf	___awdiv@sign,w
  1389     0719  1903               	btfsc	3,2
  1390     071A  2F1C               	goto	u421
  1391     071B  2F1D               	goto	u420
  1392     071C                     u421:
  1393     071C  2F22               	goto	l870
  1394     071D                     u420:
  1395     071D                     l868:
  1396     071D  09F7               	comf	___awdiv@quotient,f
  1397     071E  09F8               	comf	___awdiv@quotient+1,f
  1398     071F  0AF7               	incf	___awdiv@quotient,f
  1399     0720  1903               	skipnz
  1400     0721  0AF8               	incf	___awdiv@quotient+1,f
  1401     0722                     l870:
  1402     0722  0878               	movf	___awdiv@quotient+1,w
  1403     0723  00F1               	movwf	?___awdiv+1
  1404     0724  0877               	movf	___awdiv@quotient,w
  1405     0725  00F0               	movwf	?___awdiv
  1406     0726                     l289:
  1407     0726  0008               	return
  1408     0727                     __end_of___awdiv:
  1409     007E                     btemp	set	126	;btemp
  1410     007E                     wtemp0	set	126
  1411                           
  1412                           	psect	idloc
  1413                           
  1414                           ;Config register IDLOC0 @ 0x2000
  1415                           ;	unspecified, using default values
  1416     2000                     	org	8192
  1417     2000  3FFF               	dw	16383
  1418                           
  1419                           ;Config register IDLOC1 @ 0x2001
  1420                           ;	unspecified, using default values
  1421     2001                     	org	8193
  1422     2001  3FFF               	dw	16383
  1423                           
  1424                           ;Config register IDLOC2 @ 0x2002
  1425                           ;	unspecified, using default values
  1426     2002                     	org	8194
  1427     2002  3FFF               	dw	16383
  1428                           
  1429                           ;Config register IDLOC3 @ 0x2003
  1430                           ;	unspecified, using default values
  1431     2003                     	org	8195
  1432     2003  3FFF               	dw	16383
  1433                           
  1434                           	psect	config
  1435                           
  1436                           ;Config register CONFIG @ 0x2007
  1437                           ;	Oscillator Selection bits
  1438                           ;	FOSC = EXTRC, RC oscillator
  1439                           ;	Watchdog Timer Enable bit
  1440                           ;	WDTE = OFF, WDT disabled
  1441                           ;	Power-up Timer Enable bit
  1442                           ;	PWRTE = OFF, PWRT disabled
  1443                           ;	Brown-out Reset Enable bit
  1444                           ;	BOREN = ON, BOR enabled
  1445                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1446                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1447                           ;	Data EEPROM Memory Code Protection bit
  1448                           ;	CPD = OFF, Data EEPROM code protection off
  1449                           ;	Flash Program Memory Write Enable bits
  1450                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1451                           ;	In-Circuit Debugger Mode bit
  1452                           ;	DEBUG = 0x1, unprogrammed default
  1453                           ;	Flash Program Memory Code Protection bit
  1454                           ;	CP = OFF, Code protection off
  1455     2007                     	org	8199
  1456     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         2
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      0      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_display_Seg
    _display_Seg->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1949
                        _display_Seg
                           _int_Port
 ---------------------------------------------------------------------------------
 (1) _int_Port                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_Seg                                          4     2      2    1949
                                              9 COMMON     4     2      2
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_Seg
     ___awdiv
     ___awmod
     ___lwdiv
     ___lwmod
   _int_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      13       5       23.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      21      12        0.0%
ABS                  0      0      21       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Nov 13 20:47:27 2022

                      _L 002E                        _R 0031                        _i 007D  
                      _j 0032                        pc 0002             ?_display_Seg 0079  
                     l50 07EB                       l47 05AD                       _Ld 002D  
                     _Rd 0030                       _Lu 002C             ___awdiv@sign 0076  
                     _Ru 002F                       _nb 002A                       fsr 0004  
                    l302 06BF                      l408 0666                      l418 0622  
                    l289 0726                      l900 06A4                      l830 06C0  
                    l902 06AB                      l840 06D0                      l832 06C1  
                    l904 06B1                      l920 0635                      l912 0623  
                    l850 06E4                      l842 06D5                      l834 06C5  
                    l906 06B6                      l930 0655                      l922 0639  
                    l914 0625                      l860 070A                      l852 06EB  
                    l844 06D9                      l836 06CA                      l908 06BB  
                    l932 065C                      l924 063D                      l916 062B  
                    l940 05EF                      l870 0722                      l862 070B  
                    l854 06EF                      l846 06DB                      l838 06CC  
                    l926 064E                      l918 062E                      l934 0662  
                    l950 060B                      l942 05F2                      l864 0712  
                    l856 06F3                      l848 06E1                      l880 0671  
                    l928 0654                      l952 0611                      l944 05F9  
                    l960 05A5                      l858 0704                      l866 0718  
                    l890 0685                      l882 0673                      l874 0667  
                    l954 0618                      l946 05FD                      l938 05E9  
                    l970 079C                      l962 0727                      l868 071D  
                    l892 068C                      l884 0677                      l876 0668  
                    l948 0601                      l956 061E                      l980 07B0  
                    l972 079D                      l964 0799                      l894 0690  
                    l886 067C                      l878 066C                      l990 07C4  
                    l982 07B1                      l974 07A3                      l966 079A  
                    l896 0694                      l888 0682                      l992 07C5  
                    l984 07B2                      l976 07AC                      l968 079B  
                    l898 069E                      l994 07C6                      l986 07B8  
                    l978 07AF                      l996 07C7                      l988 07C1  
                    l998 07CD                      u410 0718                      u330 06C5  
                    u411 0717                      u331 06C4                      u420 071D  
                    u340 06D0                      u500 06B1                      u421 071C  
                    u405 070C                      u341 06CF                      u501 06B0  
                    u350 06E1                      u510 06B6                      u430 066C  
                    u351 06E0                      u511 06B5                      u431 066B  
                    u440 0677                      u520 062B                      u441 0676  
                    u521 062A                      u370 06F3                      u450 0682  
                    u610 0601                      u371 06F2                      u451 0681  
                    u611 0600                      u540 063D                      u620 060B  
                    u365 06E5                      u541 063C                      u621 060A  
                    u605 05F3                      u390 0704                      u470 0694  
                    u391 0703                      u471 0693                      u535 062F  
                    u480 069E                      u560 064E                      u640 061E  
                    u385 06F4                      u481 069D                      u465 0686  
                    u561 064D                      u641 061D                      u625 0607  
                    u395 0700                      u555 063E                      u635 0612  
                    u580 0662                      u485 069A                      u581 0661  
                    u565 064A                      u590 05EF                      u495 06A5  
                    u575 0656                      u591 05EE                      u657 07A7  
                    u667 07BC                      u677 07D1                      u687 07E6  
                    fsr0 0004                      indf 0000             ___awmod@sign 0076  
                   l1000 07D6                     l1010 07E2                     l1002 07D9  
                   l1004 07DA                     l1012 05CD                     l1006 07DB  
                   l1014 05D2                     l1008 07DC                     l1016 05DD  
                   _main 05CD                     btemp 007E                     start 0000  
                  ?_main 0070          __end_of___awdiv 0727          __end_of___awmod 06C0  
        ___awdiv@divisor 0070          __end_of___lwdiv 0667          __end_of___lwmod 0623  
        ___awdiv@counter 0075                    _PORTB 0006                    _PORTC 0007  
                  _TRISB 0086                    _TRISC 0087             display_Seg@a 0079  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07EC             __end_of_main 05E9                   ??_main 007D  
       ___awdiv@dividend 0072                ??___awdiv 0074                ??___awmod 0074  
              ??___lwdiv 0074                ??___lwmod 0074         __end_of_int_Port 05AE  
       ___awdiv@quotient 0077          ___awmod@divisor 0070          ___awmod@counter 0075  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 05AE  
             __pbssBANK0 0032               __pmaintext 05CD                ?_int_Port 0070  
                ___awdiv 06C0                  ___awmod 0667                  ___lwdiv 0623  
                ___lwmod 05E9                  __ptext1 05A5                  __ptext2 0727  
                __ptext3 05E9                  __ptext4 0623                  __ptext5 0667  
                __ptext6 06C0         ___awmod@dividend 0072                  _segment 0020  
   end_of_initialization 07FC               ??_int_Port 0070                _PORTCbits 0007  
          ??_display_Seg 007B      start_initialization 07EC               init_fetch0 05BA  
            __pdataBANK0 0020      __end_of_display_Seg 07EC              __pbssCOMMON 007D  
              ___latbits 0002                __pnvBANK0 002C         ___lwdiv@dividend 0072  
               ?___awdiv 0070                 ?___awmod 0070                 ?___lwdiv 0070  
               ?___lwmod 0070         ___lwdiv@quotient 0075              _display_Seg 0727  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077                 _int_Port 05A5  
               init_ram0 05BE         ___lwmod@dividend 0072          ___lwmod@divisor 0070  
        ___lwmod@counter 0075  
