

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Nov 17 15:48:08 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27     0000                     
    28                           ; Version 2.40
    29                           ; Generated 17/11/2021 GMT
    30                           ; 
    31                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F877A Definitions
    61                           ; 
    62                           ; SFR Addresses
    63     0000                     	;# 
    64     0001                     	;# 
    65     0002                     	;# 
    66     0003                     	;# 
    67     0004                     	;# 
    68     0005                     	;# 
    69     0006                     	;# 
    70     0007                     	;# 
    71     0008                     	;# 
    72     0009                     	;# 
    73     000A                     	;# 
    74     000B                     	;# 
    75     000C                     	;# 
    76     000D                     	;# 
    77     000E                     	;# 
    78     000E                     	;# 
    79     000F                     	;# 
    80     0010                     	;# 
    81     0011                     	;# 
    82     0012                     	;# 
    83     0013                     	;# 
    84     0014                     	;# 
    85     0015                     	;# 
    86     0015                     	;# 
    87     0016                     	;# 
    88     0017                     	;# 
    89     0018                     	;# 
    90     0019                     	;# 
    91     001A                     	;# 
    92     001B                     	;# 
    93     001B                     	;# 
    94     001C                     	;# 
    95     001D                     	;# 
    96     001E                     	;# 
    97     001F                     	;# 
    98     0081                     	;# 
    99     0085                     	;# 
   100     0086                     	;# 
   101     0087                     	;# 
   102     0088                     	;# 
   103     0089                     	;# 
   104     008C                     	;# 
   105     008D                     	;# 
   106     008E                     	;# 
   107     0091                     	;# 
   108     0092                     	;# 
   109     0093                     	;# 
   110     0094                     	;# 
   111     0098                     	;# 
   112     0099                     	;# 
   113     009C                     	;# 
   114     009D                     	;# 
   115     009E                     	;# 
   116     009F                     	;# 
   117     010C                     	;# 
   118     010D                     	;# 
   119     010E                     	;# 
   120     010F                     	;# 
   121     018C                     	;# 
   122     018D                     	;# 
   123     0000                     	;# 
   124     0001                     	;# 
   125     0002                     	;# 
   126     0003                     	;# 
   127     0004                     	;# 
   128     0005                     	;# 
   129     0006                     	;# 
   130     0007                     	;# 
   131     0008                     	;# 
   132     0009                     	;# 
   133     000A                     	;# 
   134     000B                     	;# 
   135     000C                     	;# 
   136     000D                     	;# 
   137     000E                     	;# 
   138     000E                     	;# 
   139     000F                     	;# 
   140     0010                     	;# 
   141     0011                     	;# 
   142     0012                     	;# 
   143     0013                     	;# 
   144     0014                     	;# 
   145     0015                     	;# 
   146     0015                     	;# 
   147     0016                     	;# 
   148     0017                     	;# 
   149     0018                     	;# 
   150     0019                     	;# 
   151     001A                     	;# 
   152     001B                     	;# 
   153     001B                     	;# 
   154     001C                     	;# 
   155     001D                     	;# 
   156     001E                     	;# 
   157     001F                     	;# 
   158     0081                     	;# 
   159     0085                     	;# 
   160     0086                     	;# 
   161     0087                     	;# 
   162     0088                     	;# 
   163     0089                     	;# 
   164     008C                     	;# 
   165     008D                     	;# 
   166     008E                     	;# 
   167     0091                     	;# 
   168     0092                     	;# 
   169     0093                     	;# 
   170     0094                     	;# 
   171     0098                     	;# 
   172     0099                     	;# 
   173     009C                     	;# 
   174     009D                     	;# 
   175     009E                     	;# 
   176     009F                     	;# 
   177     010C                     	;# 
   178     010D                     	;# 
   179     010E                     	;# 
   180     010F                     	;# 
   181     018C                     	;# 
   182     018D                     	;# 
   183                           
   184                           	psect	idataBANK0
   185     04AC                     __pidataBANK0:
   186                           
   187                           ;initializer for _Keypad
   188     04AC  3401               	retlw	1
   189     04AD  3402               	retlw	2
   190     04AE  3403               	retlw	3
   191     04AF  3400               	retlw	0
   192     04B0  3404               	retlw	4
   193     04B1  3405               	retlw	5
   194     04B2  3406               	retlw	6
   195     04B3  3400               	retlw	0
   196     04B4  3407               	retlw	7
   197     04B5  3408               	retlw	8
   198     04B6  3409               	retlw	9
   199     04B7  3400               	retlw	0
   200                           
   201                           	psect	strings
   202     0003                     __pstrings:
   203     0003                     stringtab:
   204     0003                     __stringtab:
   205                           
   206                           ;	String table - string pointers are 1 byte each
   207     0003  1BFF               	btfsc	btemp+1,7
   208     0004  280D               	ljmp	stringcode
   209     0005  1383               	bcf	3,7
   210     0006  187F               	btfsc	btemp+1,0
   211     0007  1783               	bsf	3,7
   212     0008  0800               	movf	0,w
   213     0009  0A84               	incf	4,f
   214     000A  1903               	skipnz
   215     000B  0AFF               	incf	btemp+1,f
   216     000C  0008               	return
   217     000D                     stringcode:
   218     000D                     stringdir:
   219     000D  3000               	movlw	high stringdir
   220     000E  008A               	movwf	10
   221     000F  0804               	movf	4,w
   222     0010  0A84               	incf	4,f
   223     0011  0782               	addwf	2,f
   224     0012                     __stringbase:
   225     0012  3400               	retlw	0
   226     0013                     __end_of__stringtab:
   227     0013                     _dpowers:
   228     0013  3401               	retlw	1
   229     0014  3400               	retlw	0
   230     0015  340A               	retlw	10
   231     0016  3400               	retlw	0
   232     0017  3464               	retlw	100
   233     0018  3400               	retlw	0
   234     0019  34E8               	retlw	232
   235     001A  3403               	retlw	3
   236     001B  3410               	retlw	16
   237     001C  3427               	retlw	39
   238     001D                     __end_of_dpowers:
   239     0006                     _PORTBbits	set	6
   240     0006                     _PORTB	set	6
   241     0007                     _PORTCbits	set	7
   242     0087                     _TRISC	set	135
   243     0086                     _TRISB	set	134
   244     001D                     STR_2:
   245     001D  346B               	retlw	107	;'k'
   246     001E  3465               	retlw	101	;'e'
   247     001F  3479               	retlw	121	;'y'
   248     0020  3470               	retlw	112	;'p'
   249     0021  3461               	retlw	97	;'a'
   250     0022  3464               	retlw	100	;'d'
   251     0023  343D               	retlw	61	;'='
   252     0024  3420               	retlw	32	;' '
   253     0025  3400               	retlw	0
   254     0026                     STR_1:
   255     0026  3454               	retlw	84	;'T'
   256     0027  343D               	retlw	61	;'='
   257     0028  3420               	retlw	32	;' '
   258     0029  3400               	retlw	0
   259     002A                     STR_5:
   260     002A  3425               	retlw	37	;'%'
   261     002B  3464               	retlw	100	;'d'
   262     002C  3400               	retlw	0
   263     002D                     STR_3:
   264     002D  3423               	retlw	35	;'#'
   265     002E  3400               	retlw	0
   266     002F                     STR_4:
   267     002F  342A               	retlw	42	;'*'
   268     0030  3400               	retlw	0
   269                           
   270                           	psect	cinit
   271     07E3                     start_initialization:	
   272                           ; #config settings
   273                           
   274     07E3                     __initialization:
   275                           
   276                           ; Initialize objects allocated to BANK0
   277     07E3  1383               	bcf	3,7	;select IRP bank0
   278     07E4  304A               	movlw	low (__pdataBANK0+12)
   279     07E5  00FD               	movwf	btemp+-1
   280     07E6  3004               	movlw	high __pidataBANK0
   281     07E7  00FE               	movwf	btemp
   282     07E8  30AC               	movlw	low __pidataBANK0
   283     07E9  00FF               	movwf	btemp+1
   284     07EA  303E               	movlw	low __pdataBANK0
   285     07EB  0084               	movwf	4
   286     07EC  120A  118A  24BC  120A  118A  	fcall	init_ram0
   287                           
   288                           ; Clear objects allocated to BANK0
   289     07F1  01CA               	clrf	__pbssBANK0& (0+127)
   290     07F2  01CB               	clrf	(__pbssBANK0+1)& (0+127)
   291     07F3  01CC               	clrf	(__pbssBANK0+2)& (0+127)
   292     07F4  01CD               	clrf	(__pbssBANK0+3)& (0+127)
   293     07F5  01CE               	clrf	(__pbssBANK0+4)& (0+127)
   294     07F6  01CF               	clrf	(__pbssBANK0+5)& (0+127)
   295     07F7  01D0               	clrf	(__pbssBANK0+6)& (0+127)
   296     07F8  01D1               	clrf	(__pbssBANK0+7)& (0+127)
   297     07F9  01D2               	clrf	(__pbssBANK0+8)& (0+127)
   298     07FA  01D3               	clrf	(__pbssBANK0+9)& (0+127)
   299     07FB  01D4               	clrf	(__pbssBANK0+10)& (0+127)
   300     07FC                     end_of_initialization:	
   301                           ;End of C runtime variable initialization code
   302                           
   303     07FC                     __end_of__initialization:
   304     07FC  0183               	clrf	3
   305     07FD  120A  118A  2E7E   	ljmp	_main	;jump to C main() function
   306                           
   307                           	psect	bssBANK0
   308     004A                     __pbssBANK0:
   309     004A                     _row:
   310     004A                     	ds	4
   311     004E                     _column:
   312     004E                     	ds	3
   313     0051                     _r:
   314     0051                     	ds	1
   315     0052                     _c:
   316     0052                     	ds	1
   317     0053                     _j:
   318     0053                     	ds	1
   319     0054                     _i:
   320     0054                     	ds	1
   321                           
   322                           	psect	dataBANK0
   323     003E                     __pdataBANK0:
   324     003E                     _Keypad:
   325     003E                     	ds	12
   326                           
   327                           	psect	inittext
   328     04B8                     init_fetch0:	
   329                           ;	Called with low address in FSR and high address in W
   330                           
   331     04B8  087E               	movf	btemp,w
   332     04B9  008A               	movwf	10
   333     04BA  087F               	movf	btemp+1,w
   334     04BB  0082               	movwf	2
   335     04BC                     init_ram0:	
   336                           ;Called with:
   337                           ;	high address of idata address in btemp 
   338                           ;	low address of idata address in btemp+1 
   339                           ;	low address of data in FSR
   340                           ;	high address + 1 of data in btemp-1
   341                           
   342     04BC  120A  118A  24B8  120A  118A  	fcall	init_fetch0
   343     04C1  0080               	movwf	0
   344     04C2  0A84               	incf	4,f
   345     04C3  0804               	movf	4,w
   346     04C4  067D               	xorwf	btemp+-1,w
   347     04C5  1903               	btfsc	3,2
   348     04C6  3400               	retlw	0
   349     04C7  0AFF               	incf	btemp+1,f
   350     04C8  1903               	btfsc	3,2
   351     04C9  0AFE               	incf	btemp,f
   352     04CA  2CBC               	goto	init_ram0
   353                           
   354                           	psect	cstackCOMMON
   355     0070                     __pcstackCOMMON:
   356     0070                     ?_int_Port:
   357     0070                     ??_int_Port:	
   358                           ; 1 bytes @ 0x0
   359                           
   360     0070                     ?_lcd_init:	
   361                           ; 1 bytes @ 0x0
   362                           
   363     0070                     ?_keybad_4x3:	
   364                           ; 1 bytes @ 0x0
   365                           
   366     0070                     ??_keybad_4x3:	
   367                           ; 1 bytes @ 0x0
   368                           
   369     0070                     ?_lcd_cmd:	
   370                           ; 1 bytes @ 0x0
   371                           
   372     0070                     ??_lcd_cmd:	
   373                           ; 1 bytes @ 0x0
   374                           
   375     0070                     ?_main:	
   376                           ; 1 bytes @ 0x0
   377                           
   378     0070                     ?_lcd_data:	
   379                           ; 1 bytes @ 0x0
   380                           
   381     0070                     ??_lcd_data:	
   382                           ; 1 bytes @ 0x0
   383                           
   384     0070                     ?_strlen:	
   385                           ; 1 bytes @ 0x0
   386                           
   387     0070                     ?___lwdiv:	
   388                           ; 2 bytes @ 0x0
   389                           
   390     0070                     ___lwdiv@divisor:	
   391                           ; 2 bytes @ 0x0
   392                           
   393     0070                     strlen@s:	
   394                           ; 2 bytes @ 0x0
   395                           
   396                           
   397                           ; 2 bytes @ 0x0
   398     0070                     	ds	2
   399     0072                     ??_strlen:
   400     0072                     lcd_cmd@cmd:	
   401                           ; 1 bytes @ 0x2
   402                           
   403     0072                     lcd_data@data:	
   404                           ; 1 bytes @ 0x2
   405                           
   406     0072                     ___lwdiv@dividend:	
   407                           ; 1 bytes @ 0x2
   408                           
   409     0072                     strlen@cp:	
   410                           ; 2 bytes @ 0x2
   411                           
   412                           
   413                           ; 2 bytes @ 0x2
   414     0072                     	ds	1
   415     0073                     ??_lcd_init:
   416                           
   417                           ; 1 bytes @ 0x3
   418     0073                     	ds	1
   419     0074                     ?_lcd_caracter:
   420     0074                     ??___lwdiv:	
   421                           ; 1 bytes @ 0x4
   422                           
   423     0074                     lcd_caracter@str:	
   424                           ; 1 bytes @ 0x4
   425                           
   426                           
   427                           ; 2 bytes @ 0x4
   428     0074                     	ds	1
   429     0075                     ___lwdiv@quotient:
   430                           
   431                           ; 2 bytes @ 0x5
   432     0075                     	ds	1
   433     0076                     ??_lcd_caracter:
   434                           
   435                           ; 1 bytes @ 0x6
   436     0076                     	ds	1
   437     0077                     lcd_caracter@num:
   438     0077                     ___lwdiv@counter:	
   439                           ; 1 bytes @ 0x7
   440                           
   441                           
   442                           ; 1 bytes @ 0x7
   443     0077                     	ds	1
   444     0078                     ?___lwmod:
   445     0078                     lcd_caracter@i:	
   446                           ; 2 bytes @ 0x8
   447                           
   448     0078                     ___lwmod@divisor:	
   449                           ; 1 bytes @ 0x8
   450                           
   451                           
   452                           ; 2 bytes @ 0x8
   453     0078                     	ds	2
   454     007A                     ___lwmod@dividend:
   455                           
   456                           ; 2 bytes @ 0xA
   457     007A                     	ds	2
   458     007C                     ??___lwmod:
   459                           
   460                           ; 1 bytes @ 0xC
   461     007C                     	ds	1
   462     007D                     ___lwmod@counter:
   463                           
   464                           ; 1 bytes @ 0xD
   465     007D                     	ds	1
   466     007E                     ??_lcd_number:
   467                           
   468                           	psect	cstackBANK0
   469     0020                     __pcstackBANK0:	
   470                           ; 1 bytes @ 0xE
   471                           
   472     0020                     ?_sprintf:
   473     0020                     sprintf@f:	
   474                           ; 2 bytes @ 0x0
   475                           
   476                           
   477                           ; 1 bytes @ 0x0
   478     0020                     	ds	3
   479     0023                     ??_sprintf:
   480                           
   481                           ; 1 bytes @ 0x3
   482     0023                     	ds	3
   483     0026                     sprintf@ap:
   484                           
   485                           ; 1 bytes @ 0x6
   486     0026                     	ds	1
   487     0027                     sprintf@flag:
   488                           
   489                           ; 1 bytes @ 0x7
   490     0027                     	ds	1
   491     0028                     sprintf@prec:
   492                           
   493                           ; 1 bytes @ 0x8
   494     0028                     	ds	1
   495     0029                     sprintf@val:
   496                           
   497                           ; 2 bytes @ 0x9
   498     0029                     	ds	2
   499     002B                     sprintf@sp:
   500                           
   501                           ; 1 bytes @ 0xB
   502     002B                     	ds	1
   503     002C                     sprintf@c:
   504                           
   505                           ; 1 bytes @ 0xC
   506     002C                     	ds	1
   507     002D                     ?_lcd_number:
   508     002D                     lcd_number@nb:	
   509                           ; 1 bytes @ 0xD
   510                           
   511                           
   512                           ; 2 bytes @ 0xD
   513     002D                     	ds	2
   514     002F                     lcd_number@strNb:
   515                           
   516                           ; 10 bytes @ 0xF
   517     002F                     	ds	10
   518     0039                     ??_main:
   519                           
   520                           ; 1 bytes @ 0x19
   521     0039                     	ds	5
   522                           
   523                           	psect	maintext
   524     067E                     __pmaintext:	
   525 ;;
   526 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   527 ;;
   528 ;; *************** function _main *****************
   529 ;; Defined at:
   530 ;;		line 43 in file "main.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;		None
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   539 ;; Tracked objects:
   540 ;;		On entry : B00/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   544 ;;      Params:         0       0       0       0       0
   545 ;;      Locals:         0       0       0       0       0
   546 ;;      Temps:          0       5       0       0       0
   547 ;;      Totals:         0       5       0       0       0
   548 ;;Total ram usage:        5 bytes
   549 ;; Hardware stack levels required when called: 4
   550 ;; This function calls:
   551 ;;		_int_Port
   552 ;;		_keybad_4x3
   553 ;;		_lcd_caracter
   554 ;;		_lcd_cmd
   555 ;;		_lcd_init
   556 ;;		_lcd_number
   557 ;; This function is called by:
   558 ;;		Startup code after reset
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562     067E                     _main:	
   563                           ;psect for function _main
   564                           
   565     067E                     l1215:	
   566                           ;incstack = 0
   567                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   568                           
   569                           
   570                           ;main.c: 44:     int_Port();;main.c: 44:     int_Port();;main.c: 44:     int_Port();
   571     067E  120A  118A  24A1  120A  118A  	fcall	_int_Port
   572                           
   573                           ;main.c: 45:     lcd_init();;main.c: 45:     lcd_init();;main.c: 45:     lcd_init();
   574     0683  120A  118A  24E3  120A  118A  	fcall	_lcd_init
   575     0688                     l1217:
   576                           
   577                           ;main.c: 46:     lcd_caracter("T= ");;main.c: 46:     lcd_caracter("T= ");;main.c: 46:  
      +                             lcd_caracter("T= ");
   578     0688  3014               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   579     0689  00F4               	movwf	lcd_caracter@str
   580     068A  3080               	movlw	128
   581     068B  00F5               	movwf	lcd_caracter@str+1
   582     068C  120A  118A  2526  120A  118A  	fcall	_lcd_caracter
   583     0691                     l1219:
   584                           
   585                           ;main.c: 48:         keybad_4x3();;main.c: 48:         keybad_4x3();;main.c: 48:        
      +                           keybad_4x3();
   586     0691  120A  118A  2631  120A  118A  	fcall	_keybad_4x3
   587     0696                     l1221:
   588                           
   589                           ;main.c: 49:         lcd_cmd(0x80);;main.c: 49:         lcd_cmd(0x80);;main.c: 49:      
      +                             lcd_cmd(0x80);
   590     0696  3080               	movlw	128
   591     0697  120A  118A  2551  120A  118A  	fcall	_lcd_cmd
   592     069C                     l1223:
   593                           
   594                           ;main.c: 50:         lcd_caracter("keypad= ");;main.c: 50:         lcd_caracter("keypad=
      +                           ");;main.c: 50:         lcd_caracter("keypad= ");
   595     069C  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   596     069D  00F4               	movwf	lcd_caracter@str
   597     069E  3080               	movlw	128
   598     069F  00F5               	movwf	lcd_caracter@str+1
   599     06A0  120A  118A  2526  120A  118A  	fcall	_lcd_caracter
   600     06A5                     l1225:
   601                           
   602                           ;main.c: 51:         lcd_number(Keypad[i][j]);;main.c: 51:         lcd_number(Keypad[i][
      +                          j]);;main.c: 51:         lcd_number(Keypad[i][j]);
   603     06A5  1283               	bcf	3,5	;RP0=0, select bank0
   604     06A6  1303               	bcf	3,6	;RP1=0, select bank0
   605     06A7  0854               	movf	_i,w
   606     06A8  00B9               	movwf	??_main
   607     06A9  3002               	movlw	2
   608     06AA                     u605:
   609     06AA  1003               	clrc
   610     06AB  0DB9               	rlf	??_main,f
   611     06AC  3EFF               	addlw	-1
   612     06AD  1D03               	skipz
   613     06AE  2EAA               	goto	u605
   614     06AF  303E               	movlw	(low (_Keypad| 0))& (0+255)
   615     06B0  0739               	addwf	??_main,w
   616     06B1  00BA               	movwf	??_main+1
   617     06B2  0853               	movf	_j,w
   618     06B3  073A               	addwf	??_main+1,w
   619     06B4  00BB               	movwf	??_main+2
   620     06B5  083B               	movf	??_main+2,w
   621     06B6  0084               	movwf	4
   622     06B7  1383               	bcf	3,7	;select IRP bank0
   623     06B8  0800               	movf	0,w
   624     06B9  00BC               	movwf	??_main+3
   625     06BA  01BD               	clrf	??_main+4
   626     06BB  083C               	movf	??_main+3,w
   627     06BC  00AD               	movwf	lcd_number@nb
   628     06BD  083D               	movf	??_main+4,w
   629     06BE  00AE               	movwf	lcd_number@nb+1
   630     06BF  120A  118A  24CB  120A  118A  	fcall	_lcd_number
   631     06C4                     l1227:
   632                           
   633                           ;main.c: 52:         if(i == 3 && j== 2){;main.c: 52:         if(i == 3 && j== 2){;main.
      +                          c: 52:         if(i == 3 && j== 2){
   634     06C4  3003               	movlw	3
   635     06C5  1283               	bcf	3,5	;RP0=0, select bank0
   636     06C6  1303               	bcf	3,6	;RP1=0, select bank0
   637     06C7  0654               	xorwf	_i,w
   638     06C8  1D03               	btfss	3,2
   639     06C9  2ECB               	goto	u611
   640     06CA  2ECC               	goto	u610
   641     06CB                     u611:
   642     06CB  2EDB               	goto	l1233
   643     06CC                     u610:
   644     06CC                     l1229:
   645     06CC  3002               	movlw	2
   646     06CD  0653               	xorwf	_j,w
   647     06CE  1D03               	btfss	3,2
   648     06CF  2ED1               	goto	u621
   649     06D0  2ED2               	goto	u620
   650     06D1                     u621:
   651     06D1  2EDB               	goto	l1233
   652     06D2                     u620:
   653     06D2                     l1231:
   654                           
   655                           ;main.c: 53:             lcd_caracter("#");;main.c: 53:             lcd_caracter("#");;m
      +                          ain.c: 53:             lcd_caracter("#");
   656     06D2  301B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   657     06D3  00F4               	movwf	lcd_caracter@str
   658     06D4  3080               	movlw	128
   659     06D5  00F5               	movwf	lcd_caracter@str+1
   660     06D6  120A  118A  2526  120A  118A  	fcall	_lcd_caracter
   661     06DB                     l1233:
   662                           
   663                           ;main.c: 55:         if(i == 3 && j == 0){;main.c: 55:         if(i == 3 && j == 0){;mai
      +                          n.c: 55:         if(i == 3 && j == 0){
   664     06DB  3003               	movlw	3
   665     06DC  1283               	bcf	3,5	;RP0=0, select bank0
   666     06DD  1303               	bcf	3,6	;RP1=0, select bank0
   667     06DE  0654               	xorwf	_i,w
   668     06DF  1D03               	btfss	3,2
   669     06E0  2EE2               	goto	u631
   670     06E1  2EE3               	goto	u630
   671     06E2                     u631:
   672     06E2  2EF1               	goto	l1239
   673     06E3                     u630:
   674     06E3                     l1235:
   675     06E3  0853               	movf	_j,w
   676     06E4  1D03               	btfss	3,2
   677     06E5  2EE7               	goto	u641
   678     06E6  2EE8               	goto	u640
   679     06E7                     u641:
   680     06E7  2EF1               	goto	l1239
   681     06E8                     u640:
   682     06E8                     l1237:
   683                           
   684                           ;main.c: 56:             lcd_caracter("*");;main.c: 56:             lcd_caracter("*");;m
      +                          ain.c: 56:             lcd_caracter("*");
   685     06E8  301D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   686     06E9  00F4               	movwf	lcd_caracter@str
   687     06EA  3080               	movlw	128
   688     06EB  00F5               	movwf	lcd_caracter@str+1
   689     06EC  120A  118A  2526  120A  118A  	fcall	_lcd_caracter
   690     06F1                     l1239:
   691                           
   692                           ;main.c: 59:         _delay((unsigned long)((200)*(20000000/4000.0)));;main.c: 59:      
      +                             _delay((unsigned long)((200)*(20000000/4000.0)));;main.c: 59:         _delay((unsigne
      +                          d long)((200)*(20000000/4000.0)));
   693     06F1  3006               	movlw	6
   694     06F2  1283               	bcf	3,5	;RP0=0, select bank0
   695     06F3  1303               	bcf	3,6	;RP1=0, select bank0
   696     06F4  00BB               	movwf	??_main+2
   697     06F5  3013               	movlw	19
   698     06F6  00BA               	movwf	??_main+1
   699     06F7  30AD               	movlw	173
   700     06F8  00B9               	movwf	??_main
   701     06F9                     u657:
   702     06F9  0BB9               	decfsz	??_main,f
   703     06FA  2EF9               	goto	u657
   704     06FB  0BBA               	decfsz	??_main+1,f
   705     06FC  2EF9               	goto	u657
   706     06FD  0BBB               	decfsz	??_main+2,f
   707     06FE  2EF9               	goto	u657
   708     06FF                     l1241:
   709                           
   710                           ;main.c: 60:         lcd_cmd(0x01);;main.c: 60:         lcd_cmd(0x01);;main.c: 60:      
      +                             lcd_cmd(0x01);
   711     06FF  3001               	movlw	1
   712     0700  120A  118A  2551  120A  118A  	fcall	_lcd_cmd
   713     0705  2E91               	goto	l1219
   714     0706  120A  118A  2800   	ljmp	start
   715     0709                     __end_of_main:
   716                           
   717                           	psect	text1
   718     04CB                     __ptext1:	
   719 ;; *************** function _lcd_number *****************
   720 ;; Defined at:
   721 ;;		line 116 in file "main.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;  nb              2   13[BANK0 ] int 
   724 ;; Auto vars:     Size  Location     Type
   725 ;;  strNb          10   15[BANK0 ] unsigned char [10]
   726 ;; Return value:  Size  Location     Type
   727 ;;                  1    wreg      void 
   728 ;; Registers used:
   729 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   735 ;;      Params:         0       2       0       0       0
   736 ;;      Locals:         0      10       0       0       0
   737 ;;      Temps:          0       0       0       0       0
   738 ;;      Totals:         0      12       0       0       0
   739 ;;Total ram usage:       12 bytes
   740 ;; Hardware stack levels used: 1
   741 ;; Hardware stack levels required when called: 3
   742 ;; This function calls:
   743 ;;		_lcd_caracter
   744 ;;		_sprintf
   745 ;; This function is called by:
   746 ;;		_main
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750     04CB                     _lcd_number:	
   751                           ;psect for function _lcd_number
   752                           
   753     04CB                     l1213:	
   754                           ;incstack = 0
   755                           ; Regs used in _lcd_number: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   756                           
   757                           
   758                           ;main.c: 117:     unsigned char strNb[10];;main.c: 117:     unsigned char strNb[10];;mai
      +                          n.c: 117:     unsigned char strNb[10];;main.c: 118:     sprintf(strNb, "%d", nb) ;;main.
      +                          c: 118:     sprintf(strNb, "%d", nb) ;;main.c: 118:     sprintf(strNb, "%d", nb) ;
   759     04CB  3018               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   760     04CC  1283               	bcf	3,5	;RP0=0, select bank0
   761     04CD  1303               	bcf	3,6	;RP1=0, select bank0
   762     04CE  00A0               	movwf	sprintf@f
   763     04CF  082E               	movf	lcd_number@nb+1,w
   764     04D0  00A2               	movwf	?_sprintf+2
   765     04D1  082D               	movf	lcd_number@nb,w
   766     04D2  00A1               	movwf	?_sprintf+1
   767     04D3  302F               	movlw	(low (lcd_number@strNb| 0))& (0+255)
   768     04D4  120A  118A  2709  120A  118A  	fcall	_sprintf
   769                           
   770                           ;main.c: 119:     lcd_caracter(strNb);;main.c: 119:     lcd_caracter(strNb);;main.c: 119
      +                          :     lcd_caracter(strNb);
   771     04D9  302F               	movlw	(low (lcd_number@strNb| 0))& (0+255)
   772     04DA  00F4               	movwf	lcd_caracter@str
   773     04DB  3000               	movlw	0
   774     04DC  00F5               	movwf	lcd_caracter@str+1
   775     04DD  120A  118A  2526  120A  118A  	fcall	_lcd_caracter
   776     04E2                     l73:
   777     04E2  0008               	return
   778     04E3                     __end_of_lcd_number:
   779                           
   780                           	psect	text2
   781     0709                     __ptext2:	
   782 ;; *************** function _sprintf *****************
   783 ;; Defined at:
   784 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;  sp              1    wreg     PTR unsigned char 
   787 ;;		 -> lcd_number@strNb(10), 
   788 ;;  f               1    0[BANK0 ] PTR const unsigned char 
   789 ;;		 -> STR_5(3), 
   790 ;; Auto vars:     Size  Location     Type
   791 ;;  sp              1   11[BANK0 ] PTR unsigned char 
   792 ;;		 -> lcd_number@strNb(10), 
   793 ;;  tmpval          4    0        struct .
   794 ;;  val             2    9[BANK0 ] unsigned int 
   795 ;;  cp              2    0        PTR const unsigned char 
   796 ;;  len             2    0        unsigned int 
   797 ;;  c               1   12[BANK0 ] unsigned char 
   798 ;;  prec            1    8[BANK0 ] char 
   799 ;;  flag            1    7[BANK0 ] unsigned char 
   800 ;;  ap              1    6[BANK0 ] PTR void [1]
   801 ;;		 -> ?_sprintf(2), 
   802 ;; Return value:  Size  Location     Type
   803 ;;                  2    0[BANK0 ] int 
   804 ;; Registers used:
   805 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   811 ;;      Params:         0       3       0       0       0
   812 ;;      Locals:         0       7       0       0       0
   813 ;;      Temps:          0       3       0       0       0
   814 ;;      Totals:         0      13       0       0       0
   815 ;;Total ram usage:       13 bytes
   816 ;; Hardware stack levels used: 1
   817 ;; Hardware stack levels required when called: 1
   818 ;; This function calls:
   819 ;;		___lwdiv
   820 ;;		___lwmod
   821 ;; This function is called by:
   822 ;;		_lcd_number
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826     0709                     _sprintf:	
   827                           ;psect for function _sprintf
   828                           
   829                           
   830                           ;incstack = 0
   831                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   832                           ;sprintf@sp stored from wreg
   833     0709  1283               	bcf	3,5	;RP0=0, select bank0
   834     070A  1303               	bcf	3,6	;RP1=0, select bank0
   835     070B  00AB               	movwf	sprintf@sp
   836     070C                     l1101:
   837     070C  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   838     070D  00A6               	movwf	sprintf@ap
   839     070E  2FCE               	goto	l1153
   840     070F                     l1103:
   841     070F  3025               	movlw	37
   842     0710  062C               	xorwf	sprintf@c,w
   843     0711  1903               	btfsc	3,2
   844     0712  2F14               	goto	u501
   845     0713  2F15               	goto	u500
   846     0714                     u501:
   847     0714  2F1F               	goto	l1109
   848     0715                     u500:
   849     0715                     l1105:
   850     0715  082B               	movf	sprintf@sp,w
   851     0716  0084               	movwf	4
   852     0717  082C               	movf	sprintf@c,w
   853     0718  1383               	bcf	3,7	;select IRP bank0
   854     0719  0080               	movwf	0
   855     071A                     l1107:
   856     071A  3001               	movlw	1
   857     071B  00A3               	movwf	??_sprintf
   858     071C  0823               	movf	??_sprintf,w
   859     071D  07AB               	addwf	sprintf@sp,f
   860     071E  2FCE               	goto	l1153
   861     071F                     l1109:
   862     071F  01A7               	clrf	sprintf@flag
   863     0720                     l1113:
   864     0720  3001               	movlw	1
   865     0721  07A0               	addwf	sprintf@f,f
   866     0722  30FF               	movlw	-1
   867     0723  0720               	addwf	sprintf@f,w
   868     0724  0084               	movwf	4
   869     0725  120A  118A  200D  120A  118A  	fcall	stringdir
   870     072A  00AC               	movwf	sprintf@c
   871     072B  00A3               	movwf	??_sprintf
   872     072C  01A4               	clrf	??_sprintf+1
   873                           
   874                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   875                           ; Switch size 1, requested type "simple"
   876                           ; Number of cases is 1, Range of values is 0 to 0
   877                           ; switch strategies available:
   878                           ; Name         Instructions Cycles
   879                           ; simple_byte            4     3 (average)
   880                           ; direct_byte           11     8 (fixed)
   881                           ; jumptable            260     6 (fixed)
   882                           ;	Chosen strategy is simple_byte
   883     072D  0824               	movf	??_sprintf+1,w
   884     072E  3A00               	xorlw	0	; case 0
   885     072F  1903               	skipnz
   886     0730  2F32               	goto	l1263
   887     0731  2FCE               	goto	l1153
   888     0732                     l1263:
   889                           
   890                           ; Switch size 1, requested type "simple"
   891                           ; Number of cases is 3, Range of values is 0 to 105
   892                           ; switch strategies available:
   893                           ; Name         Instructions Cycles
   894                           ; simple_byte           10     6 (average)
   895                           ; jumptable            260     6 (fixed)
   896                           ;	Chosen strategy is simple_byte
   897     0732  0823               	movf	??_sprintf,w
   898     0733  3A00               	xorlw	0	; case 0
   899     0734  1903               	skipnz
   900     0735  2FDE               	goto	l1155
   901     0736  3A64               	xorlw	100	; case 100
   902     0737  1903               	skipnz
   903     0738  2F3D               	goto	l1115
   904     0739  3A0D               	xorlw	13	; case 105
   905     073A  1903               	skipnz
   906     073B  2F3D               	goto	l1115
   907     073C  2FCE               	goto	l1153
   908     073D                     l1115:
   909     073D  0826               	movf	sprintf@ap,w
   910     073E  0084               	movwf	4
   911     073F  1383               	bcf	3,7	;select IRP bank0
   912     0740  0800               	movf	0,w
   913     0741  00A9               	movwf	sprintf@val
   914     0742  0A84               	incf	4,f
   915     0743  0800               	movf	0,w
   916     0744  00AA               	movwf	sprintf@val+1
   917     0745                     l1117:
   918     0745  3002               	movlw	2
   919     0746  00A3               	movwf	??_sprintf
   920     0747  0823               	movf	??_sprintf,w
   921     0748  07A6               	addwf	sprintf@ap,f
   922     0749                     l1119:
   923     0749  1FAA               	btfss	sprintf@val+1,7
   924     074A  2F4C               	goto	u511
   925     074B  2F4D               	goto	u510
   926     074C                     u511:
   927     074C  2F56               	goto	l1125
   928     074D                     u510:
   929     074D                     l1121:
   930     074D  3003               	movlw	3
   931     074E  00A3               	movwf	??_sprintf
   932     074F  0823               	movf	??_sprintf,w
   933     0750  04A7               	iorwf	sprintf@flag,f
   934     0751                     l1123:
   935     0751  09A9               	comf	sprintf@val,f
   936     0752  09AA               	comf	sprintf@val+1,f
   937     0753  0AA9               	incf	sprintf@val,f
   938     0754  1903               	skipnz
   939     0755  0AAA               	incf	sprintf@val+1,f
   940     0756                     l1125:
   941     0756  01AC               	clrf	sprintf@c
   942     0757  0AAC               	incf	sprintf@c,f
   943     0758                     l1131:
   944     0758  082C               	movf	sprintf@c,w
   945     0759  00A3               	movwf	??_sprintf
   946     075A  0723               	addwf	??_sprintf,w
   947     075B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
   948     075C  0084               	movwf	4
   949     075D  120A  118A  200D  120A  118A  	fcall	stringdir
   950     0762  00A4               	movwf	??_sprintf+1
   951     0763  120A  118A  200D  120A  118A  	fcall	stringdir
   952     0768  00A5               	movwf	??_sprintf+2
   953     0769  0825               	movf	??_sprintf+2,w
   954     076A  022A               	subwf	sprintf@val+1,w
   955     076B  1D03               	skipz
   956     076C  2F6F               	goto	u525
   957     076D  0824               	movf	??_sprintf+1,w
   958     076E  0229               	subwf	sprintf@val,w
   959     076F                     u525:
   960     076F  1803               	skipnc
   961     0770  2F72               	goto	u521
   962     0771  2F73               	goto	u520
   963     0772                     u521:
   964     0772  2F74               	goto	l1135
   965     0773                     u520:
   966     0773  2F7E               	goto	l1137
   967     0774                     l1135:
   968     0774  3001               	movlw	1
   969     0775  00A3               	movwf	??_sprintf
   970     0776  0823               	movf	??_sprintf,w
   971     0777  07AC               	addwf	sprintf@c,f
   972     0778  3005               	movlw	5
   973     0779  062C               	xorwf	sprintf@c,w
   974     077A  1D03               	btfss	3,2
   975     077B  2F7D               	goto	u531
   976     077C  2F7E               	goto	u530
   977     077D                     u531:
   978     077D  2F58               	goto	l1131
   979     077E                     u530:
   980     077E                     l1137:
   981     077E  0827               	movf	sprintf@flag,w
   982     077F  3903               	andlw	3
   983     0780  1903               	btfsc	3,2
   984     0781  2F83               	goto	u541
   985     0782  2F84               	goto	u540
   986     0783                     u541:
   987     0783  2F8D               	goto	l1143
   988     0784                     u540:
   989     0784                     l1139:
   990     0784  082B               	movf	sprintf@sp,w
   991     0785  0084               	movwf	4
   992     0786  302D               	movlw	45
   993     0787  1383               	bcf	3,7	;select IRP bank0
   994     0788  0080               	movwf	0
   995     0789                     l1141:
   996     0789  3001               	movlw	1
   997     078A  00A3               	movwf	??_sprintf
   998     078B  0823               	movf	??_sprintf,w
   999     078C  07AB               	addwf	sprintf@sp,f
  1000     078D                     l1143:
  1001     078D  082C               	movf	sprintf@c,w
  1002     078E  00A8               	movwf	sprintf@prec
  1003     078F  2FC5               	goto	l1151
  1004     0790                     l1145:
  1005     0790  300A               	movlw	10
  1006     0791  00F8               	movwf	___lwmod@divisor
  1007     0792  3000               	movlw	0
  1008     0793  00F9               	movwf	___lwmod@divisor+1
  1009     0794  0828               	movf	sprintf@prec,w
  1010     0795  00A3               	movwf	??_sprintf
  1011     0796  0723               	addwf	??_sprintf,w
  1012     0797  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1013     0798  0084               	movwf	4
  1014     0799  120A  118A  200D  120A  118A  	fcall	stringdir
  1015     079E  00F0               	movwf	___lwdiv@divisor
  1016     079F  120A  118A  200D  120A  118A  	fcall	stringdir
  1017     07A4  00F1               	movwf	___lwdiv@divisor+1
  1018     07A5  082A               	movf	sprintf@val+1,w
  1019     07A6  00F3               	movwf	___lwdiv@dividend+1
  1020     07A7  0829               	movf	sprintf@val,w
  1021     07A8  00F2               	movwf	___lwdiv@dividend
  1022     07A9  120A  118A  25ED  120A  118A  	fcall	___lwdiv
  1023     07AE  0871               	movf	?___lwdiv+1,w
  1024     07AF  00FB               	movwf	___lwmod@dividend+1
  1025     07B0  0870               	movf	?___lwdiv,w
  1026     07B1  00FA               	movwf	___lwmod@dividend
  1027     07B2  120A  118A  25B3  120A  118A  	fcall	___lwmod
  1028     07B7  0878               	movf	?___lwmod,w
  1029     07B8  3E30               	addlw	48
  1030     07B9  1283               	bcf	3,5	;RP0=0, select bank0
  1031     07BA  1303               	bcf	3,6	;RP1=0, select bank0
  1032     07BB  00AC               	movwf	sprintf@c
  1033     07BC                     l1147:
  1034     07BC  082B               	movf	sprintf@sp,w
  1035     07BD  0084               	movwf	4
  1036     07BE  082C               	movf	sprintf@c,w
  1037     07BF  1383               	bcf	3,7	;select IRP bank0
  1038     07C0  0080               	movwf	0
  1039     07C1                     l1149:
  1040     07C1  3001               	movlw	1
  1041     07C2  00A3               	movwf	??_sprintf
  1042     07C3  0823               	movf	??_sprintf,w
  1043     07C4  07AB               	addwf	sprintf@sp,f
  1044     07C5                     l1151:
  1045     07C5  30FF               	movlw	255
  1046     07C6  00A3               	movwf	??_sprintf
  1047     07C7  0823               	movf	??_sprintf,w
  1048     07C8  07A8               	addwf	sprintf@prec,f
  1049     07C9  0A28               	incf	sprintf@prec,w
  1050     07CA  1D03               	btfss	3,2
  1051     07CB  2FCD               	goto	u551
  1052     07CC  2FCE               	goto	u550
  1053     07CD                     u551:
  1054     07CD  2F90               	goto	l1145
  1055     07CE                     u550:
  1056     07CE                     l1153:
  1057     07CE  3001               	movlw	1
  1058     07CF  07A0               	addwf	sprintf@f,f
  1059     07D0  30FF               	movlw	-1
  1060     07D1  0720               	addwf	sprintf@f,w
  1061     07D2  0084               	movwf	4
  1062     07D3  120A  118A  200D  120A  118A  	fcall	stringdir
  1063     07D8  00AC               	movwf	sprintf@c
  1064     07D9  082C               	movf	sprintf@c,w
  1065     07DA  1D03               	btfss	3,2
  1066     07DB  2FDD               	goto	u561
  1067     07DC  2FDE               	goto	u560
  1068     07DD                     u561:
  1069     07DD  2F0F               	goto	l1103
  1070     07DE                     u560:
  1071     07DE                     l1155:
  1072     07DE  082B               	movf	sprintf@sp,w
  1073     07DF  0084               	movwf	4
  1074     07E0  1383               	bcf	3,7	;select IRP bank0
  1075     07E1  0180               	clrf	0
  1076     07E2                     l191:
  1077     07E2  0008               	return
  1078     07E3                     __end_of_sprintf:
  1079                           
  1080                           	psect	text3
  1081     05B3                     __ptext3:	
  1082 ;; *************** function ___lwmod *****************
  1083 ;; Defined at:
  1084 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;  divisor         2    8[COMMON] unsigned int 
  1087 ;;  dividend        2   10[COMMON] unsigned int 
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;  counter         1   13[COMMON] unsigned char 
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  2    8[COMMON] unsigned int 
  1092 ;; Registers used:
  1093 ;;		wreg, status,2, status,0
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1099 ;;      Params:         4       0       0       0       0
  1100 ;;      Locals:         1       0       0       0       0
  1101 ;;      Temps:          1       0       0       0       0
  1102 ;;      Totals:         6       0       0       0       0
  1103 ;;Total ram usage:        6 bytes
  1104 ;; Hardware stack levels used: 1
  1105 ;; This function calls:
  1106 ;;		Nothing
  1107 ;; This function is called by:
  1108 ;;		_sprintf
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112     05B3                     ___lwmod:	
  1113                           ;psect for function ___lwmod
  1114                           
  1115     05B3                     l1045:	
  1116                           ;incstack = 0
  1117                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1118                           
  1119     05B3  0878               	movf	___lwmod@divisor,w
  1120     05B4  0479               	iorwf	___lwmod@divisor+1,w
  1121     05B5  1903               	btfsc	3,2
  1122     05B6  2DB8               	goto	u421
  1123     05B7  2DB9               	goto	u420
  1124     05B8                     u421:
  1125     05B8  2DE8               	goto	l1063
  1126     05B9                     u420:
  1127     05B9                     l1047:
  1128     05B9  01FD               	clrf	___lwmod@counter
  1129     05BA  0AFD               	incf	___lwmod@counter,f
  1130     05BB  2DC7               	goto	l1053
  1131     05BC                     l1049:
  1132     05BC  3001               	movlw	1
  1133     05BD                     u435:
  1134     05BD  1003               	clrc
  1135     05BE  0DF8               	rlf	___lwmod@divisor,f
  1136     05BF  0DF9               	rlf	___lwmod@divisor+1,f
  1137     05C0  3EFF               	addlw	-1
  1138     05C1  1D03               	skipz
  1139     05C2  2DBD               	goto	u435
  1140     05C3                     l1051:
  1141     05C3  3001               	movlw	1
  1142     05C4  00FC               	movwf	??___lwmod
  1143     05C5  087C               	movf	??___lwmod,w
  1144     05C6  07FD               	addwf	___lwmod@counter,f
  1145     05C7                     l1053:
  1146     05C7  1FF9               	btfss	___lwmod@divisor+1,7
  1147     05C8  2DCA               	goto	u441
  1148     05C9  2DCB               	goto	u440
  1149     05CA                     u441:
  1150     05CA  2DBC               	goto	l1049
  1151     05CB                     u440:
  1152     05CB                     l1055:
  1153     05CB  0879               	movf	___lwmod@divisor+1,w
  1154     05CC  027B               	subwf	___lwmod@dividend+1,w
  1155     05CD  1D03               	skipz
  1156     05CE  2DD1               	goto	u455
  1157     05CF  0878               	movf	___lwmod@divisor,w
  1158     05D0  027A               	subwf	___lwmod@dividend,w
  1159     05D1                     u455:
  1160     05D1  1C03               	skipc
  1161     05D2  2DD4               	goto	u451
  1162     05D3  2DD5               	goto	u450
  1163     05D4                     u451:
  1164     05D4  2DDB               	goto	l1059
  1165     05D5                     u450:
  1166     05D5                     l1057:
  1167     05D5  0878               	movf	___lwmod@divisor,w
  1168     05D6  02FA               	subwf	___lwmod@dividend,f
  1169     05D7  0879               	movf	___lwmod@divisor+1,w
  1170     05D8  1C03               	skipc
  1171     05D9  03FB               	decf	___lwmod@dividend+1,f
  1172     05DA  02FB               	subwf	___lwmod@dividend+1,f
  1173     05DB                     l1059:
  1174     05DB  3001               	movlw	1
  1175     05DC                     u465:
  1176     05DC  1003               	clrc
  1177     05DD  0CF9               	rrf	___lwmod@divisor+1,f
  1178     05DE  0CF8               	rrf	___lwmod@divisor,f
  1179     05DF  3EFF               	addlw	-1
  1180     05E0  1D03               	skipz
  1181     05E1  2DDC               	goto	u465
  1182     05E2                     l1061:
  1183     05E2  3001               	movlw	1
  1184     05E3  02FD               	subwf	___lwmod@counter,f
  1185     05E4  1D03               	btfss	3,2
  1186     05E5  2DE7               	goto	u471
  1187     05E6  2DE8               	goto	u470
  1188     05E7                     u471:
  1189     05E7  2DCB               	goto	l1055
  1190     05E8                     u470:
  1191     05E8                     l1063:
  1192     05E8  087B               	movf	___lwmod@dividend+1,w
  1193     05E9  00F9               	movwf	?___lwmod+1
  1194     05EA  087A               	movf	___lwmod@dividend,w
  1195     05EB  00F8               	movwf	?___lwmod
  1196     05EC                     l477:
  1197     05EC  0008               	return
  1198     05ED                     __end_of___lwmod:
  1199                           
  1200                           	psect	text4
  1201     05ED                     __ptext4:	
  1202 ;; *************** function ___lwdiv *****************
  1203 ;; Defined at:
  1204 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;  divisor         2    0[COMMON] unsigned int 
  1207 ;;  dividend        2    2[COMMON] unsigned int 
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;  quotient        2    5[COMMON] unsigned int 
  1210 ;;  counter         1    7[COMMON] unsigned char 
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  2    0[COMMON] unsigned int 
  1213 ;; Registers used:
  1214 ;;		wreg, status,2, status,0
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1220 ;;      Params:         4       0       0       0       0
  1221 ;;      Locals:         3       0       0       0       0
  1222 ;;      Temps:          1       0       0       0       0
  1223 ;;      Totals:         8       0       0       0       0
  1224 ;;Total ram usage:        8 bytes
  1225 ;; Hardware stack levels used: 1
  1226 ;; This function calls:
  1227 ;;		Nothing
  1228 ;; This function is called by:
  1229 ;;		_sprintf
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233     05ED                     ___lwdiv:	
  1234                           ;psect for function ___lwdiv
  1235                           
  1236     05ED                     l1019:	
  1237                           ;incstack = 0
  1238                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1239                           
  1240     05ED  01F5               	clrf	___lwdiv@quotient
  1241     05EE  01F6               	clrf	___lwdiv@quotient+1
  1242     05EF                     l1021:
  1243     05EF  0870               	movf	___lwdiv@divisor,w
  1244     05F0  0471               	iorwf	___lwdiv@divisor+1,w
  1245     05F1  1903               	btfsc	3,2
  1246     05F2  2DF4               	goto	u351
  1247     05F3  2DF5               	goto	u350
  1248     05F4                     u351:
  1249     05F4  2E2C               	goto	l1041
  1250     05F5                     u350:
  1251     05F5                     l1023:
  1252     05F5  01F7               	clrf	___lwdiv@counter
  1253     05F6  0AF7               	incf	___lwdiv@counter,f
  1254     05F7  2E03               	goto	l1029
  1255     05F8                     l1025:
  1256     05F8  3001               	movlw	1
  1257     05F9                     u365:
  1258     05F9  1003               	clrc
  1259     05FA  0DF0               	rlf	___lwdiv@divisor,f
  1260     05FB  0DF1               	rlf	___lwdiv@divisor+1,f
  1261     05FC  3EFF               	addlw	-1
  1262     05FD  1D03               	skipz
  1263     05FE  2DF9               	goto	u365
  1264     05FF                     l1027:
  1265     05FF  3001               	movlw	1
  1266     0600  00F4               	movwf	??___lwdiv
  1267     0601  0874               	movf	??___lwdiv,w
  1268     0602  07F7               	addwf	___lwdiv@counter,f
  1269     0603                     l1029:
  1270     0603  1FF1               	btfss	___lwdiv@divisor+1,7
  1271     0604  2E06               	goto	u371
  1272     0605  2E07               	goto	u370
  1273     0606                     u371:
  1274     0606  2DF8               	goto	l1025
  1275     0607                     u370:
  1276     0607                     l1031:
  1277     0607  3001               	movlw	1
  1278     0608                     u385:
  1279     0608  1003               	clrc
  1280     0609  0DF5               	rlf	___lwdiv@quotient,f
  1281     060A  0DF6               	rlf	___lwdiv@quotient+1,f
  1282     060B  3EFF               	addlw	-1
  1283     060C  1D03               	skipz
  1284     060D  2E08               	goto	u385
  1285     060E  0871               	movf	___lwdiv@divisor+1,w
  1286     060F  0273               	subwf	___lwdiv@dividend+1,w
  1287     0610  1D03               	skipz
  1288     0611  2E14               	goto	u395
  1289     0612  0870               	movf	___lwdiv@divisor,w
  1290     0613  0272               	subwf	___lwdiv@dividend,w
  1291     0614                     u395:
  1292     0614  1C03               	skipc
  1293     0615  2E17               	goto	u391
  1294     0616  2E18               	goto	u390
  1295     0617                     u391:
  1296     0617  2E1F               	goto	l1037
  1297     0618                     u390:
  1298     0618                     l1033:
  1299     0618  0870               	movf	___lwdiv@divisor,w
  1300     0619  02F2               	subwf	___lwdiv@dividend,f
  1301     061A  0871               	movf	___lwdiv@divisor+1,w
  1302     061B  1C03               	skipc
  1303     061C  03F3               	decf	___lwdiv@dividend+1,f
  1304     061D  02F3               	subwf	___lwdiv@dividend+1,f
  1305     061E                     l1035:
  1306     061E  1475               	bsf	___lwdiv@quotient,0
  1307     061F                     l1037:
  1308     061F  3001               	movlw	1
  1309     0620                     u405:
  1310     0620  1003               	clrc
  1311     0621  0CF1               	rrf	___lwdiv@divisor+1,f
  1312     0622  0CF0               	rrf	___lwdiv@divisor,f
  1313     0623  3EFF               	addlw	-1
  1314     0624  1D03               	skipz
  1315     0625  2E20               	goto	u405
  1316     0626                     l1039:
  1317     0626  3001               	movlw	1
  1318     0627  02F7               	subwf	___lwdiv@counter,f
  1319     0628  1D03               	btfss	3,2
  1320     0629  2E2B               	goto	u411
  1321     062A  2E2C               	goto	u410
  1322     062B                     u411:
  1323     062B  2E07               	goto	l1031
  1324     062C                     u410:
  1325     062C                     l1041:
  1326     062C  0876               	movf	___lwdiv@quotient+1,w
  1327     062D  00F1               	movwf	?___lwdiv+1
  1328     062E  0875               	movf	___lwdiv@quotient,w
  1329     062F  00F0               	movwf	?___lwdiv
  1330     0630                     l467:
  1331     0630  0008               	return
  1332     0631                     __end_of___lwdiv:
  1333                           
  1334                           	psect	text5
  1335     0526                     __ptext5:	
  1336 ;; *************** function _lcd_caracter *****************
  1337 ;; Defined at:
  1338 ;;		line 110 in file "main.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;  str             2    4[COMMON] PTR const unsigned char 
  1341 ;;		 -> lcd_number@strNb(10), STR_4(2), STR_3(2), STR_2(9), 
  1342 ;;		 -> STR_1(4), 
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;  i               1    8[COMMON] unsigned char 
  1345 ;;  num             1    7[COMMON] unsigned char 
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  1    wreg      void 
  1348 ;; Registers used:
  1349 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1355 ;;      Params:         2       0       0       0       0
  1356 ;;      Locals:         2       0       0       0       0
  1357 ;;      Temps:          1       0       0       0       0
  1358 ;;      Totals:         5       0       0       0       0
  1359 ;;Total ram usage:        5 bytes
  1360 ;; Hardware stack levels used: 1
  1361 ;; Hardware stack levels required when called: 2
  1362 ;; This function calls:
  1363 ;;		_lcd_data
  1364 ;;		_strlen
  1365 ;; This function is called by:
  1366 ;;		_main
  1367 ;;		_lcd_number
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371     0526                     _lcd_caracter:	
  1372                           ;psect for function _lcd_caracter
  1373                           
  1374     0526                     l1067:	
  1375                           ;incstack = 0
  1376                           ; Regs used in _lcd_caracter: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1377                           
  1378                           
  1379                           ;main.c: 111:     unsigned char i ,num = strlen(str) ;;main.c: 111:     unsigned char i 
      +                          ,num = strlen(str) ;;main.c: 111:     unsigned char i ,num = strlen(str) ;
  1380     0526  0874               	movf	lcd_caracter@str,w
  1381     0527  00F0               	movwf	strlen@s
  1382     0528  0875               	movf	lcd_caracter@str+1,w
  1383     0529  00F1               	movwf	strlen@s+1
  1384     052A  120A  118A  2502  120A  118A  	fcall	_strlen
  1385     052F  0870               	movf	?_strlen,w
  1386     0530  00F7               	movwf	lcd_caracter@num
  1387     0531                     l1069:
  1388                           
  1389                           ;main.c: 112:     for(i=0;i<num;i++){;main.c: 112:     for(i=0;i<num;i++){;main.c: 112: 
      +                              for(i=0;i<num;i++){
  1390     0531  01F8               	clrf	lcd_caracter@i
  1391     0532  2D4A               	goto	l1075
  1392     0533                     l1071:
  1393                           
  1394                           ;main.c: 113:         lcd_data(str[i]);;main.c: 113:         lcd_data(str[i]);;main.c: 1
      +                          13:         lcd_data(str[i]);
  1395     0533  0878               	movf	lcd_caracter@i,w
  1396     0534  0774               	addwf	lcd_caracter@str,w
  1397     0535  0084               	movwf	4
  1398     0536  0875               	movf	lcd_caracter@str+1,w
  1399     0537  1803               	skipnc
  1400     0538  0A75               	incf	lcd_caracter@str+1,w
  1401     0539  1283               	bcf	3,5	;RP0=0, select bank0
  1402     053A  1303               	bcf	3,6	;RP1=0, select bank0
  1403     053B  00FF               	movwf	btemp+1
  1404     053C  120A  118A  2003  120A  118A  	fcall	stringtab
  1405     0541  120A  118A  2582  120A  118A  	fcall	_lcd_data
  1406     0546                     l1073:
  1407                           
  1408                           ;main.c: 114:     };main.c: 114:     };main.c: 114:     }
  1409     0546  3001               	movlw	1
  1410     0547  00F6               	movwf	??_lcd_caracter
  1411     0548  0876               	movf	??_lcd_caracter,w
  1412     0549  07F8               	addwf	lcd_caracter@i,f
  1413     054A                     l1075:
  1414     054A  0877               	movf	lcd_caracter@num,w
  1415     054B  0278               	subwf	lcd_caracter@i,w
  1416     054C  1C03               	skipc
  1417     054D  2D4F               	goto	u481
  1418     054E  2D50               	goto	u480
  1419     054F                     u481:
  1420     054F  2D33               	goto	l1071
  1421     0550                     u480:
  1422     0550                     l70:
  1423     0550  0008               	return
  1424     0551                     __end_of_lcd_caracter:
  1425                           
  1426                           	psect	text6
  1427     0502                     __ptext6:	
  1428 ;; *************** function _strlen *****************
  1429 ;; Defined at:
  1430 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;  s               2    0[COMMON] PTR const unsigned char 
  1433 ;;		 -> lcd_number@strNb(10), STR_4(2), STR_3(2), STR_2(9), 
  1434 ;;		 -> STR_1(4), 
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  cp              2    2[COMMON] PTR const unsigned char 
  1437 ;;		 -> lcd_number@strNb(10), STR_4(2), STR_3(2), STR_2(9), 
  1438 ;;		 -> STR_1(4), 
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  2    0[COMMON] unsigned int 
  1441 ;; Registers used:
  1442 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1448 ;;      Params:         2       0       0       0       0
  1449 ;;      Locals:         2       0       0       0       0
  1450 ;;      Temps:          0       0       0       0       0
  1451 ;;      Totals:         4       0       0       0       0
  1452 ;;Total ram usage:        4 bytes
  1453 ;; Hardware stack levels used: 2
  1454 ;; This function calls:
  1455 ;;		Nothing
  1456 ;; This function is called by:
  1457 ;;		_lcd_caracter
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461     0502                     _strlen:	
  1462                           ;psect for function _strlen
  1463                           
  1464     0502                     l1009:	
  1465                           ;incstack = 0
  1466                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1467                           
  1468     0502  0870               	movf	strlen@s,w
  1469     0503  00F2               	movwf	strlen@cp
  1470     0504  0871               	movf	strlen@s+1,w
  1471     0505  00F3               	movwf	strlen@cp+1
  1472     0506  2D0D               	goto	l1013
  1473     0507                     l1011:
  1474     0507  3001               	movlw	1
  1475     0508  07F2               	addwf	strlen@cp,f
  1476     0509  1803               	skipnc
  1477     050A  0AF3               	incf	strlen@cp+1,f
  1478     050B  3000               	movlw	0
  1479     050C  07F3               	addwf	strlen@cp+1,f
  1480     050D                     l1013:
  1481     050D  0873               	movf	strlen@cp+1,w
  1482     050E  1283               	bcf	3,5	;RP0=0, select bank0
  1483     050F  1303               	bcf	3,6	;RP1=0, select bank0
  1484     0510  00FF               	movwf	btemp+1
  1485     0511  0872               	movf	strlen@cp,w
  1486     0512  0084               	movwf	4
  1487     0513  120A  118A  2003  120A  118A  	fcall	stringtab
  1488     0518  3A00               	xorlw	0
  1489     0519  1D03               	skipz
  1490     051A  2D1C               	goto	u341
  1491     051B  2D1D               	goto	u340
  1492     051C                     u341:
  1493     051C  2D07               	goto	l1011
  1494     051D                     u340:
  1495     051D                     l1015:
  1496     051D  0870               	movf	strlen@s,w
  1497     051E  0272               	subwf	strlen@cp,w
  1498     051F  00F0               	movwf	?_strlen
  1499     0520  0871               	movf	strlen@s+1,w
  1500     0521  1C03               	skipc
  1501     0522  0A71               	incf	strlen@s+1,w
  1502     0523  0273               	subwf	strlen@cp+1,w
  1503     0524  00F1               	movwf	?_strlen+1
  1504     0525                     l649:
  1505     0525  0008               	return
  1506     0526                     __end_of_strlen:
  1507                           
  1508                           	psect	text7
  1509     0582                     __ptext7:	
  1510 ;; *************** function _lcd_data *****************
  1511 ;; Defined at:
  1512 ;;		line 89 in file "main.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;  data            1    wreg     unsigned char 
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  data            1    2[COMMON] unsigned char 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1526 ;;      Params:         0       0       0       0       0
  1527 ;;      Locals:         1       0       0       0       0
  1528 ;;      Temps:          2       0       0       0       0
  1529 ;;      Totals:         3       0       0       0       0
  1530 ;;Total ram usage:        3 bytes
  1531 ;; Hardware stack levels used: 1
  1532 ;; This function calls:
  1533 ;;		Nothing
  1534 ;; This function is called by:
  1535 ;;		_lcd_caracter
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539     0582                     _lcd_data:	
  1540                           ;psect for function _lcd_data
  1541                           
  1542                           
  1543                           ;incstack = 0
  1544                           ; Regs used in _lcd_data: [wreg+status,2+status,0]
  1545                           ;lcd_data@data stored from wreg
  1546     0582  00F2               	movwf	lcd_data@data
  1547     0583                     l985:
  1548                           
  1549                           ;main.c: 90:     PORTB = (data & 0xF0);;main.c: 90:     PORTB = (data & 0xF0);;main.c: 9
      +                          0:     PORTB = (data & 0xF0);
  1550     0583  0872               	movf	lcd_data@data,w
  1551     0584  39F0               	andlw	240
  1552     0585  1283               	bcf	3,5	;RP0=0, select bank0
  1553     0586  1303               	bcf	3,6	;RP1=0, select bank0
  1554     0587  0086               	movwf	6	;volatile
  1555     0588                     l987:
  1556                           
  1557                           ;main.c: 91:     PORTBbits.RB2 = 1;;main.c: 91:     PORTBbits.RB2 = 1;;main.c: 91:     P
      +                          ORTBbits.RB2 = 1;
  1558     0588  1506               	bsf	6,2	;volatile
  1559     0589                     l989:
  1560                           
  1561                           ;main.c: 92:     PORTBbits.RB1 = 0;;main.c: 92:     PORTBbits.RB1 = 0;;main.c: 92:     P
      +                          ORTBbits.RB1 = 0;
  1562     0589  1086               	bcf	6,1	;volatile
  1563     058A                     l991:
  1564                           
  1565                           ;main.c: 93:     PORTBbits.RB0 = 1;;main.c: 93:     PORTBbits.RB0 = 1;;main.c: 93:     P
      +                          ORTBbits.RB0 = 1;
  1566     058A  1406               	bsf	6,0	;volatile
  1567     058B                     l993:
  1568                           
  1569                           ;main.c: 94:     _delay((unsigned long)((2)*(20000000/4000.0)));;main.c: 94:     _delay(
      +                          (unsigned long)((2)*(20000000/4000.0)));;main.c: 94:     _delay((unsigned long)((2)*(200
      +                          00000/4000.0)));
  1570     058B  300D               	movlw	13
  1571     058C  00F1               	movwf	??_lcd_data+1
  1572     058D  30FB               	movlw	251
  1573     058E  00F0               	movwf	??_lcd_data
  1574     058F                     u667:
  1575     058F  0BF0               	decfsz	??_lcd_data,f
  1576     0590  2D8F               	goto	u667
  1577     0591  0BF1               	decfsz	??_lcd_data+1,f
  1578     0592  2D8F               	goto	u667
  1579     0593  2D94               	nop2
  1580     0594                     l995:
  1581                           
  1582                           ;main.c: 95:     PORTBbits.RB2 = 0 ;;main.c: 95:     PORTBbits.RB2 = 0 ;;main.c: 95:    
      +                           PORTBbits.RB2 = 0 ;
  1583     0594  1283               	bcf	3,5	;RP0=0, select bank0
  1584     0595  1303               	bcf	3,6	;RP1=0, select bank0
  1585     0596  1106               	bcf	6,2	;volatile
  1586     0597                     l997:
  1587                           
  1588                           ;main.c: 96:     PORTB = ((data<<4)& 0xF0);;main.c: 96:     PORTB = ((data<<4)& 0xF0);;m
      +                          ain.c: 96:     PORTB = ((data<<4)& 0xF0);
  1589     0597  0872               	movf	lcd_data@data,w
  1590     0598  00F0               	movwf	??_lcd_data
  1591     0599  3003               	movlw	3
  1592     059A                     u335:
  1593     059A  1003               	clrc
  1594     059B  0DF0               	rlf	??_lcd_data,f
  1595     059C  3EFF               	addlw	-1
  1596     059D  1D03               	skipz
  1597     059E  2D9A               	goto	u335
  1598     059F  1003               	clrc
  1599     05A0  0D70               	rlf	??_lcd_data,w
  1600     05A1  39F0               	andlw	240
  1601     05A2  0086               	movwf	6	;volatile
  1602     05A3                     l999:
  1603                           
  1604                           ;main.c: 97:     PORTBbits.RB2 = 1;;main.c: 97:     PORTBbits.RB2 = 1;;main.c: 97:     P
      +                          ORTBbits.RB2 = 1;
  1605     05A3  1506               	bsf	6,2	;volatile
  1606     05A4                     l1001:
  1607                           
  1608                           ;main.c: 98:     PORTBbits.RB1 = 0;;main.c: 98:     PORTBbits.RB1 = 0;;main.c: 98:     P
      +                          ORTBbits.RB1 = 0;
  1609     05A4  1086               	bcf	6,1	;volatile
  1610     05A5                     l1003:
  1611                           
  1612                           ;main.c: 99:     PORTBbits.RB0 = 1;;main.c: 99:     PORTBbits.RB0 = 1;;main.c: 99:     P
      +                          ORTBbits.RB0 = 1;
  1613     05A5  1406               	bsf	6,0	;volatile
  1614     05A6                     l1005:
  1615                           
  1616                           ;main.c: 100:     _delay((unsigned long)((2)*(20000000/4000.0)));;main.c: 100:     _dela
      +                          y((unsigned long)((2)*(20000000/4000.0)));;main.c: 100:     _delay((unsigned long)((2)*(
      +                          20000000/4000.0)));
  1617     05A6  300D               	movlw	13
  1618     05A7  00F1               	movwf	??_lcd_data+1
  1619     05A8  30FB               	movlw	251
  1620     05A9  00F0               	movwf	??_lcd_data
  1621     05AA                     u677:
  1622     05AA  0BF0               	decfsz	??_lcd_data,f
  1623     05AB  2DAA               	goto	u677
  1624     05AC  0BF1               	decfsz	??_lcd_data+1,f
  1625     05AD  2DAA               	goto	u677
  1626     05AE  2DAF               	nop2
  1627     05AF                     l1007:
  1628                           
  1629                           ;main.c: 101:     PORTBbits.RB2 = 0;;main.c: 101:     PORTBbits.RB2 = 0;;main.c: 101:   
      +                            PORTBbits.RB2 = 0;
  1630     05AF  1283               	bcf	3,5	;RP0=0, select bank0
  1631     05B0  1303               	bcf	3,6	;RP1=0, select bank0
  1632     05B1  1106               	bcf	6,2	;volatile
  1633     05B2                     l61:
  1634     05B2  0008               	return
  1635     05B3                     __end_of_lcd_data:
  1636                           
  1637                           	psect	text8
  1638     04E3                     __ptext8:	
  1639 ;; *************** function _lcd_init *****************
  1640 ;; Defined at:
  1641 ;;		line 103 in file "main.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;		None
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;		None
  1646 ;; Return value:  Size  Location     Type
  1647 ;;                  1    wreg      void 
  1648 ;; Registers used:
  1649 ;;		wreg, status,2, status,0, pclath, cstack
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/0
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: 0/0
  1654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1655 ;;      Params:         0       0       0       0       0
  1656 ;;      Locals:         0       0       0       0       0
  1657 ;;      Temps:          0       0       0       0       0
  1658 ;;      Totals:         0       0       0       0       0
  1659 ;;Total ram usage:        0 bytes
  1660 ;; Hardware stack levels used: 1
  1661 ;; Hardware stack levels required when called: 1
  1662 ;; This function calls:
  1663 ;;		_lcd_cmd
  1664 ;; This function is called by:
  1665 ;;		_main
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669     04E3                     _lcd_init:	
  1670                           ;psect for function _lcd_init
  1671                           
  1672     04E3                     l1169:	
  1673                           ;incstack = 0
  1674                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1675                           
  1676                           
  1677                           ;main.c: 104:     lcd_cmd(0x02);;main.c: 104:     lcd_cmd(0x02);;main.c: 104:     lcd_cm
      +                          d(0x02);
  1678     04E3  3002               	movlw	2
  1679     04E4  120A  118A  2551  120A  118A  	fcall	_lcd_cmd
  1680                           
  1681                           ;main.c: 105:     lcd_cmd(0x28);;main.c: 105:     lcd_cmd(0x28);;main.c: 105:     lcd_cm
      +                          d(0x28);
  1682     04E9  3028               	movlw	40
  1683     04EA  120A  118A  2551  120A  118A  	fcall	_lcd_cmd
  1684                           
  1685                           ;main.c: 106:     lcd_cmd(0x0C);;main.c: 106:     lcd_cmd(0x0C);;main.c: 106:     lcd_cm
      +                          d(0x0C);
  1686     04EF  300C               	movlw	12
  1687     04F0  120A  118A  2551  120A  118A  	fcall	_lcd_cmd
  1688                           
  1689                           ;main.c: 107:     lcd_cmd(0x04);;main.c: 107:     lcd_cmd(0x04);;main.c: 107:     lcd_cm
      +                          d(0x04);
  1690     04F5  3004               	movlw	4
  1691     04F6  120A  118A  2551  120A  118A  	fcall	_lcd_cmd
  1692                           
  1693                           ;main.c: 108:     lcd_cmd(0x01);;main.c: 108:     lcd_cmd(0x01);;main.c: 108:     lcd_cm
      +                          d(0x01);
  1694     04FB  3001               	movlw	1
  1695     04FC  120A  118A  2551  120A  118A  	fcall	_lcd_cmd
  1696     0501                     l64:
  1697     0501  0008               	return
  1698     0502                     __end_of_lcd_init:
  1699                           
  1700                           	psect	text9
  1701     0551                     __ptext9:	
  1702 ;; *************** function _lcd_cmd *****************
  1703 ;; Defined at:
  1704 ;;		line 74 in file "main.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;  cmd             1    wreg     unsigned char 
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;  cmd             1    2[COMMON] unsigned char 
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      void 
  1711 ;; Registers used:
  1712 ;;		wreg, status,2, status,0
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1718 ;;      Params:         0       0       0       0       0
  1719 ;;      Locals:         1       0       0       0       0
  1720 ;;      Temps:          2       0       0       0       0
  1721 ;;      Totals:         3       0       0       0       0
  1722 ;;Total ram usage:        3 bytes
  1723 ;; Hardware stack levels used: 1
  1724 ;; This function calls:
  1725 ;;		Nothing
  1726 ;; This function is called by:
  1727 ;;		_main
  1728 ;;		_lcd_init
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732     0551                     _lcd_cmd:	
  1733                           ;psect for function _lcd_cmd
  1734                           
  1735                           
  1736                           ;incstack = 0
  1737                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0]
  1738                           ;lcd_cmd@cmd stored from wreg
  1739     0551  00F2               	movwf	lcd_cmd@cmd
  1740     0552                     l1077:
  1741                           
  1742                           ;main.c: 76:     PORTB = (cmd & 0xF0);;main.c: 76:     PORTB = (cmd & 0xF0);;main.c: 76:
      +                               PORTB = (cmd & 0xF0);
  1743     0552  0872               	movf	lcd_cmd@cmd,w
  1744     0553  39F0               	andlw	240
  1745     0554  1283               	bcf	3,5	;RP0=0, select bank0
  1746     0555  1303               	bcf	3,6	;RP1=0, select bank0
  1747     0556  0086               	movwf	6	;volatile
  1748     0557                     l1079:
  1749                           
  1750                           ;main.c: 77:     PORTBbits.RB2 = 1;;main.c: 77:     PORTBbits.RB2 = 1;;main.c: 77:     P
      +                          ORTBbits.RB2 = 1;
  1751     0557  1506               	bsf	6,2	;volatile
  1752     0558                     l1081:
  1753                           
  1754                           ;main.c: 78:     PORTBbits.RB1 = 0;;main.c: 78:     PORTBbits.RB1 = 0;;main.c: 78:     P
      +                          ORTBbits.RB1 = 0;
  1755     0558  1086               	bcf	6,1	;volatile
  1756     0559                     l1083:
  1757                           
  1758                           ;main.c: 79:     PORTBbits.RB0 = 0;;main.c: 79:     PORTBbits.RB0 = 0;;main.c: 79:     P
      +                          ORTBbits.RB0 = 0;
  1759     0559  1006               	bcf	6,0	;volatile
  1760     055A                     l1085:
  1761                           
  1762                           ;main.c: 80:     _delay((unsigned long)((2)*(20000000/4000.0)));;main.c: 80:     _delay(
      +                          (unsigned long)((2)*(20000000/4000.0)));;main.c: 80:     _delay((unsigned long)((2)*(200
      +                          00000/4000.0)));
  1763     055A  300D               	movlw	13
  1764     055B  00F1               	movwf	??_lcd_cmd+1
  1765     055C  30FB               	movlw	251
  1766     055D  00F0               	movwf	??_lcd_cmd
  1767     055E                     u687:
  1768     055E  0BF0               	decfsz	??_lcd_cmd,f
  1769     055F  2D5E               	goto	u687
  1770     0560  0BF1               	decfsz	??_lcd_cmd+1,f
  1771     0561  2D5E               	goto	u687
  1772     0562  2D63               	nop2
  1773     0563                     l1087:
  1774                           
  1775                           ;main.c: 81:     PORTBbits.RB2 = 0 ;;main.c: 81:     PORTBbits.RB2 = 0 ;;main.c: 81:    
      +                           PORTBbits.RB2 = 0 ;
  1776     0563  1283               	bcf	3,5	;RP0=0, select bank0
  1777     0564  1303               	bcf	3,6	;RP1=0, select bank0
  1778     0565  1106               	bcf	6,2	;volatile
  1779     0566                     l1089:
  1780                           
  1781                           ;main.c: 82:     PORTB = ((cmd<<4)& 0xF0);;main.c: 82:     PORTB = ((cmd<<4)& 0xF0);;mai
      +                          n.c: 82:     PORTB = ((cmd<<4)& 0xF0);
  1782     0566  0872               	movf	lcd_cmd@cmd,w
  1783     0567  00F0               	movwf	??_lcd_cmd
  1784     0568  3003               	movlw	3
  1785     0569                     u495:
  1786     0569  1003               	clrc
  1787     056A  0DF0               	rlf	??_lcd_cmd,f
  1788     056B  3EFF               	addlw	-1
  1789     056C  1D03               	skipz
  1790     056D  2D69               	goto	u495
  1791     056E  1003               	clrc
  1792     056F  0D70               	rlf	??_lcd_cmd,w
  1793     0570  39F0               	andlw	240
  1794     0571  0086               	movwf	6	;volatile
  1795     0572                     l1091:
  1796                           
  1797                           ;main.c: 83:     PORTBbits.RB2 = 1;;main.c: 83:     PORTBbits.RB2 = 1;;main.c: 83:     P
      +                          ORTBbits.RB2 = 1;
  1798     0572  1506               	bsf	6,2	;volatile
  1799     0573                     l1093:
  1800                           
  1801                           ;main.c: 84:     PORTBbits.RB1 = 0;;main.c: 84:     PORTBbits.RB1 = 0;;main.c: 84:     P
      +                          ORTBbits.RB1 = 0;
  1802     0573  1086               	bcf	6,1	;volatile
  1803     0574                     l1095:
  1804                           
  1805                           ;main.c: 85:     PORTBbits.RB0 = 0;;main.c: 85:     PORTBbits.RB0 = 0;;main.c: 85:     P
      +                          ORTBbits.RB0 = 0;
  1806     0574  1006               	bcf	6,0	;volatile
  1807     0575                     l1097:
  1808                           
  1809                           ;main.c: 86:     _delay((unsigned long)((2)*(20000000/4000.0)));;main.c: 86:     _delay(
      +                          (unsigned long)((2)*(20000000/4000.0)));;main.c: 86:     _delay((unsigned long)((2)*(200
      +                          00000/4000.0)));
  1810     0575  300D               	movlw	13
  1811     0576  00F1               	movwf	??_lcd_cmd+1
  1812     0577  30FB               	movlw	251
  1813     0578  00F0               	movwf	??_lcd_cmd
  1814     0579                     u697:
  1815     0579  0BF0               	decfsz	??_lcd_cmd,f
  1816     057A  2D79               	goto	u697
  1817     057B  0BF1               	decfsz	??_lcd_cmd+1,f
  1818     057C  2D79               	goto	u697
  1819     057D  2D7E               	nop2
  1820     057E                     l1099:
  1821                           
  1822                           ;main.c: 87:     PORTBbits.RB2 = 0;;main.c: 87:     PORTBbits.RB2 = 0;;main.c: 87:     P
      +                          ORTBbits.RB2 = 0;
  1823     057E  1283               	bcf	3,5	;RP0=0, select bank0
  1824     057F  1303               	bcf	3,6	;RP1=0, select bank0
  1825     0580  1106               	bcf	6,2	;volatile
  1826     0581                     l58:
  1827     0581  0008               	return
  1828     0582                     __end_of_lcd_cmd:
  1829                           
  1830                           	psect	text10
  1831     0631                     __ptext10:	
  1832 ;; *************** function _keybad_4x3 *****************
  1833 ;; Defined at:
  1834 ;;		line 121 in file "main.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;		None
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;		None
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1    wreg      void 
  1841 ;; Registers used:
  1842 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1848 ;;      Params:         0       0       0       0       0
  1849 ;;      Locals:         0       0       0       0       0
  1850 ;;      Temps:          1       0       0       0       0
  1851 ;;      Totals:         1       0       0       0       0
  1852 ;;Total ram usage:        1 bytes
  1853 ;; Hardware stack levels used: 1
  1854 ;; This function calls:
  1855 ;;		Nothing
  1856 ;; This function is called by:
  1857 ;;		_main
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861     0631                     _keybad_4x3:	
  1862                           ;psect for function _keybad_4x3
  1863                           
  1864     0631                     l1171:	
  1865                           ;incstack = 0
  1866                           ; Regs used in _keybad_4x3: [wreg-fsr0h+status,2+status,0]
  1867                           
  1868                           
  1869                           ;main.c: 122:     for(c=0;c<3;c++){;main.c: 122:     for(c=0;c<3;c++){;main.c: 122:     
      +                          for(c=0;c<3;c++){
  1870     0631  1283               	bcf	3,5	;RP0=0, select bank0
  1871     0632  1303               	bcf	3,6	;RP1=0, select bank0
  1872     0633  01D2               	clrf	_c
  1873     0634                     l1177:
  1874                           
  1875                           ;main.c: 123:         column[0] = 0;;main.c: 123:         column[0] = 0;;main.c: 123:   
      +                                column[0] = 0;
  1876     0634  01CE               	clrf	_column
  1877                           
  1878                           ;main.c: 124:         column[1] = 0;;main.c: 124:         column[1] = 0;;main.c: 124:   
      +                                column[1] = 0;
  1879     0635  01CF               	clrf	_column+1
  1880                           
  1881                           ;main.c: 125:         column[2] = 0;;main.c: 125:         column[2] = 0;;main.c: 125:   
      +                                column[2] = 0;
  1882     0636  01D0               	clrf	_column+2
  1883     0637                     l1179:
  1884                           
  1885                           ;main.c: 126:         column[c] = 1;;main.c: 126:         column[c] = 1;;main.c: 126:   
      +                                column[c] = 1;
  1886     0637  0852               	movf	_c,w
  1887     0638  3E4E               	addlw	(low (_column| 0))& (0+255)
  1888     0639  0084               	movwf	4
  1889     063A  1383               	bcf	3,7	;select IRP bank0
  1890     063B  0180               	clrf	0
  1891     063C  0A80               	incf	0,f
  1892     063D                     l1181:
  1893                           
  1894                           ;main.c: 127:         PORTCbits.RC0 = column[0];;main.c: 127:         PORTCbits.RC0 = co
      +                          lumn[0];;main.c: 127:         PORTCbits.RC0 = column[0];
  1895     063D  0C4E               	rrf	_column,w
  1896     063E  1C03               	skipc
  1897     063F  1007               	bcf	7,0	;volatile
  1898     0640  1803               	skipnc
  1899     0641  1407               	bsf	7,0	;volatile
  1900     0642                     l1183:
  1901                           
  1902                           ;main.c: 128:         PORTCbits.RC1 = column[1];;main.c: 128:         PORTCbits.RC1 = co
      +                          lumn[1];;main.c: 128:         PORTCbits.RC1 = column[1];
  1903     0642  0C4F               	rrf	_column+1,w
  1904     0643  1C03               	skipc
  1905     0644  1087               	bcf	7,1	;volatile
  1906     0645  1803               	skipnc
  1907     0646  1487               	bsf	7,1	;volatile
  1908     0647                     l1185:
  1909                           
  1910                           ;main.c: 129:         PORTCbits.RC2 = column[2];;main.c: 129:         PORTCbits.RC2 = co
      +                          lumn[2];;main.c: 129:         PORTCbits.RC2 = column[2];
  1911     0647  0C50               	rrf	_column+2,w
  1912     0648  1C03               	skipc
  1913     0649  1107               	bcf	7,2	;volatile
  1914     064A  1803               	skipnc
  1915     064B  1507               	bsf	7,2	;volatile
  1916     064C                     l1187:
  1917                           
  1918                           ;main.c: 130:         row[0] = PORTCbits.RC3;;main.c: 130:         row[0] = PORTCbits.RC
      +                          3;;main.c: 130:         row[0] = PORTCbits.RC3;
  1919     064C  3000               	movlw	0
  1920     064D  1987               	btfsc	7,3	;volatile
  1921     064E  3001               	movlw	1
  1922     064F  00CA               	movwf	_row
  1923     0650                     l1189:
  1924                           
  1925                           ;main.c: 131:         row[1] = PORTCbits.RC4;;main.c: 131:         row[1] = PORTCbits.RC
      +                          4;;main.c: 131:         row[1] = PORTCbits.RC4;
  1926     0650  3000               	movlw	0
  1927     0651  1A07               	btfsc	7,4	;volatile
  1928     0652  3001               	movlw	1
  1929     0653  00CB               	movwf	_row+1
  1930     0654                     l1191:
  1931                           
  1932                           ;main.c: 132:         row[2] = PORTCbits.RC5;;main.c: 132:         row[2] = PORTCbits.RC
      +                          5;;main.c: 132:         row[2] = PORTCbits.RC5;
  1933     0654  3000               	movlw	0
  1934     0655  1A87               	btfsc	7,5	;volatile
  1935     0656  3001               	movlw	1
  1936     0657  00CC               	movwf	_row+2
  1937     0658                     l1193:
  1938                           
  1939                           ;main.c: 133:         row[3] = PORTCbits.RC6;;main.c: 133:         row[3] = PORTCbits.RC
      +                          6;;main.c: 133:         row[3] = PORTCbits.RC6;
  1940     0658  3000               	movlw	0
  1941     0659  1B07               	btfsc	7,6	;volatile
  1942     065A  3001               	movlw	1
  1943     065B  00CD               	movwf	_row+3
  1944     065C                     l1195:
  1945                           
  1946                           ;main.c: 134:         for(r=0;r<4;r++){;main.c: 134:         for(r=0;r<4;r++){;main.c: 1
      +                          34:         for(r=0;r<4;r++){
  1947     065C  01D1               	clrf	_r
  1948     065D                     l1201:
  1949                           
  1950                           ;main.c: 135:             if(row[r] == 1){;main.c: 135:             if(row[r] == 1){;mai
      +                          n.c: 135:             if(row[r] == 1){
  1951     065D  0851               	movf	_r,w
  1952     065E  3E4A               	addlw	(low (_row| 0))& (0+255)
  1953     065F  0084               	movwf	4
  1954     0660  0300               	decf	0,w
  1955     0661  1D03               	btfss	3,2
  1956     0662  2E64               	goto	u571
  1957     0663  2E65               	goto	u570
  1958     0664                     u571:
  1959     0664  2E69               	goto	l1205
  1960     0665                     u570:
  1961     0665                     l1203:
  1962                           
  1963                           ;main.c: 136:               i=r;;main.c: 136:               i=r;;main.c: 136:           
      +                              i=r;
  1964     0665  0851               	movf	_r,w
  1965     0666  00D4               	movwf	_i
  1966                           
  1967                           ;main.c: 137:               j=c;;main.c: 137:               j=c;;main.c: 137:           
      +                              j=c;
  1968     0667  0852               	movf	_c,w
  1969     0668  00D3               	movwf	_j
  1970     0669                     l1205:
  1971                           
  1972                           ;main.c: 139:         };main.c: 139:         };main.c: 139:         }
  1973     0669  3001               	movlw	1
  1974     066A  00F0               	movwf	??_keybad_4x3
  1975     066B  0870               	movf	??_keybad_4x3,w
  1976     066C  07D1               	addwf	_r,f
  1977     066D                     l1207:
  1978     066D  3004               	movlw	4
  1979     066E  0251               	subwf	_r,w
  1980     066F  1C03               	skipc
  1981     0670  2E72               	goto	u581
  1982     0671  2E73               	goto	u580
  1983     0672                     u581:
  1984     0672  2E5D               	goto	l1201
  1985     0673                     u580:
  1986     0673                     l1209:
  1987                           
  1988                           ;main.c: 140:     };main.c: 140:     };main.c: 140:     }
  1989     0673  3001               	movlw	1
  1990     0674  00F0               	movwf	??_keybad_4x3
  1991     0675  0870               	movf	??_keybad_4x3,w
  1992     0676  07D2               	addwf	_c,f
  1993     0677                     l1211:
  1994     0677  3003               	movlw	3
  1995     0678  0252               	subwf	_c,w
  1996     0679  1C03               	skipc
  1997     067A  2E7C               	goto	u591
  1998     067B  2E7D               	goto	u590
  1999     067C                     u591:
  2000     067C  2E34               	goto	l1177
  2001     067D                     u590:
  2002     067D                     l81:
  2003     067D  0008               	return
  2004     067E                     __end_of_keybad_4x3:
  2005                           
  2006                           	psect	text11
  2007     04A1                     __ptext11:	
  2008 ;; *************** function _int_Port *****************
  2009 ;; Defined at:
  2010 ;;		line 68 in file "main.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;		None
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;		None
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      void 
  2017 ;; Registers used:
  2018 ;;		wreg, status,2
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2024 ;;      Params:         0       0       0       0       0
  2025 ;;      Locals:         0       0       0       0       0
  2026 ;;      Temps:          0       0       0       0       0
  2027 ;;      Totals:         0       0       0       0       0
  2028 ;;Total ram usage:        0 bytes
  2029 ;; Hardware stack levels used: 1
  2030 ;; This function calls:
  2031 ;;		Nothing
  2032 ;; This function is called by:
  2033 ;;		_main
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037     04A1                     _int_Port:	
  2038                           ;psect for function _int_Port
  2039                           
  2040     04A1                     l1163:	
  2041                           ;incstack = 0
  2042                           ; Regs used in _int_Port: [wreg+status,2]
  2043                           
  2044                           
  2045                           ;main.c: 69:     TRISB = 0x00;;main.c: 69:     TRISB = 0x00;;main.c: 69:     TRISB = 0x0
      +                          0;
  2046     04A1  1683               	bsf	3,5	;RP0=1, select bank1
  2047     04A2  1303               	bcf	3,6	;RP1=0, select bank1
  2048     04A3  0186               	clrf	6	;volatile
  2049     04A4                     l1165:
  2050                           
  2051                           ;main.c: 70:     TRISC = 0x78;;main.c: 70:     TRISC = 0x78;;main.c: 70:     TRISC = 0x7
      +                          8;
  2052     04A4  3078               	movlw	120
  2053     04A5  0087               	movwf	7	;volatile
  2054     04A6                     l1167:
  2055                           
  2056                           ;main.c: 71:     PORTCbits.RC0 =PORTCbits.RC1 =PORTCbits.RC2 =0;;main.c: 71:     PORTCbi
      +                          ts.RC0 =PORTCbits.RC1 =PORTCbits.RC2 =0;;main.c: 71:     PORTCbits.RC0 =PORTCbits.RC1 =P
      +                          ORTCbits.RC2 =0;
  2057     04A6  1283               	bcf	3,5	;RP0=0, select bank0
  2058     04A7  1303               	bcf	3,6	;RP1=0, select bank0
  2059     04A8  1107               	bcf	7,2	;volatile
  2060     04A9  1087               	bcf	7,1	;volatile
  2061     04AA  1007               	bcf	7,0	;volatile
  2062     04AB                     l55:
  2063     04AB  0008               	return
  2064     04AC                     __end_of_int_Port:
  2065     007E                     btemp	set	126	;btemp
  2066     007E                     wtemp0	set	126
  2067                           
  2068                           	psect	idloc
  2069                           
  2070                           ;Config register IDLOC0 @ 0x2000
  2071                           ;	unspecified, using default values
  2072     2000                     	org	8192
  2073     2000  3FFF               	dw	16383
  2074                           
  2075                           ;Config register IDLOC1 @ 0x2001
  2076                           ;	unspecified, using default values
  2077     2001                     	org	8193
  2078     2001  3FFF               	dw	16383
  2079                           
  2080                           ;Config register IDLOC2 @ 0x2002
  2081                           ;	unspecified, using default values
  2082     2002                     	org	8194
  2083     2002  3FFF               	dw	16383
  2084                           
  2085                           ;Config register IDLOC3 @ 0x2003
  2086                           ;	unspecified, using default values
  2087     2003                     	org	8195
  2088     2003  3FFF               	dw	16383
  2089                           
  2090                           	psect	config
  2091                           
  2092                           ;Config register CONFIG @ 0x2007
  2093                           ;	Oscillator Selection bits
  2094                           ;	FOSC = EXTRC, RC oscillator
  2095                           ;	Watchdog Timer Enable bit
  2096                           ;	WDTE = OFF, WDT disabled
  2097                           ;	Power-up Timer Enable bit
  2098                           ;	PWRTE = OFF, PWRT disabled
  2099                           ;	Brown-out Reset Enable bit
  2100                           ;	BOREN = ON, BOR enabled
  2101                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2102                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  2103                           ;	Data EEPROM Memory Code Protection bit
  2104                           ;	CPD = OFF, Data EEPROM code protection off
  2105                           ;	Flash Program Memory Write Enable bits
  2106                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2107                           ;	In-Circuit Debugger Mode bit
  2108                           ;	DEBUG = 0x1, unprogrammed default
  2109                           ;	Flash Program Memory Code Protection bit
  2110                           ;	CP = OFF, Code protection off
  2111     2007                     	org	8199
  2112     2007  3FFB               	dw	16379

Data Sizes:
    Strings     20
    Constant    10
    Data        12
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     30      53
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> lcd_number@strNb(BANK0[10]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[9]), 
		 -> STR_1(CODE[4]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> lcd_number@strNb(BANK0[10]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[9]), 
		 -> STR_1(CODE[4]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_5(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> lcd_number@strNb(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_caracter@str	PTR const unsigned char  size(2) Largest target is 10
		 -> lcd_number@strNb(BANK0[10]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[9]), 
		 -> STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_caracter->_strlen
    _lcd_init->_lcd_cmd

Critical Paths under _main in BANK0

    _main->_lcd_number
    _lcd_number->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2857
                                             25 BANK0      5     5      0
                           _int_Port
                         _keybad_4x3
                       _lcd_caracter
                            _lcd_cmd
                           _lcd_init
                         _lcd_number
 ---------------------------------------------------------------------------------
 (1) _lcd_number                                          12    10      2    2066
                                             13 BANK0     12    10      2
                       _lcd_caracter
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _lcd_caracter                                         5     3      2     703
                                              4 COMMON     5     3      2
                           _lcd_data
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               4     2      2     166
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (3) _lcd_data                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      44
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _keybad_4x3                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _int_Port                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _int_Port
   _keybad_4x3
   _lcd_caracter
     _lcd_data
     _strlen
   _lcd_cmd
   _lcd_init
     _lcd_cmd
   _lcd_number
     _lcd_caracter
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1E      35       5       66.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      43      12        0.0%
ABS                  0      0      43       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Nov 17 15:48:08 2022

                      _c 0052                        _i 0054                        _j 0053  
                      _r 0051                        pc 0002             lcd_data@data 0072  
                     l61 05B2                       l70 0550                       l55 04AB  
                     l64 0501                       l81 067D                       l73 04E2  
                     l58 0581                       fsr 0004                      l191 07E2  
                    l467 0630                      l477 05EC                      l649 0525  
                    l991 058A                      l993 058B                      l985 0583  
                    l995 0594                      l987 0588                      l997 0597  
                    l989 0589                      l999 05A3                      u410 062C  
                    u411 062B                      u340 051D                      u420 05B9  
                    u500 0715                      u341 051C                      u405 0620  
                    u421 05B8                      u501 0714                      u350 05F5  
                    u510 074D                      u335 059A                      u351 05F4  
                    u511 074C                      u440 05CB                      u520 0773  
                    u441 05CA                      u521 0772                      u370 0607  
                    u450 05D5                      u530 077E                      u610 06CC  
                    u371 0606                      u451 05D4                      u435 05BD  
                    u531 077D                      u611 06CB                      u540 0784  
                    u620 06D2                      u365 05F9                      u541 0783  
                    u525 076F                      u621 06D1                      u605 06AA  
                    u390 0618                      u470 05E8                      u550 07CE  
                    u630 06E3                      u391 0617                      u471 05E7  
                    u455 05D1                      u551 07CD                      u631 06E2  
                    u480 0550                      u560 07DE                      u640 06E8  
                    u481 054F                      u385 0608                      u465 05DC  
                    u561 07DD                      u641 06E7                      u570 0665  
                    u571 0664                      u395 0614                      u580 0673  
                    u581 0672                      u590 067D                      u591 067C  
                    u495 0569                      u657 06F9                      u667 058F  
                    u677 05AA                      u687 055E                      u697 0579  
          lcd_caracter@i 0078                      fsr0 0004                      _row 004A  
                    indf 0000           ??_lcd_caracter 0076                     l1001 05A4  
                   l1003 05A5                     l1011 0507                     l1005 05A6  
                   l1013 050D                     l1021 05EF                     l1101 070C  
                   l1007 05AF                     l1015 051D                     l1031 0607  
                   l1023 05F5                     l1103 070F                     l1201 065D  
                   l1009 0502                     l1033 0618                     l1025 05F8  
                   l1041 062C                     l1121 074D                     l1113 0720  
                   l1105 0715                     l1211 0677                     l1203 0665  
                   l1035 061E                     l1027 05FF                     l1019 05ED  
                   l1051 05C3                     l1131 0758                     l1123 0751  
                   l1115 073D                     l1107 071A                     l1205 0669  
                   l1037 061F                     l1029 0603                     l1061 05E2  
                   l1053 05C7                     l1045 05B3                     l1141 0789  
                   l1125 0756                     l1117 0745                     l1109 071F  
                   l1213 04CB                     l1221 0696                     l1207 066D  
                   l1071 0533                     l1039 0626                     l1055 05CB  
                   l1047 05B9                     l1063 05E8                     l1151 07C5  
                   l1143 078D                     l1135 0774                     l1119 0749  
                   l1231 06D2                     l1223 069C                     l1215 067E  
                   l1209 0673                     l1081 0558                     l1073 0546  
                   l1057 05D5                     l1049 05BC                     l1145 0790  
                   l1137 077E                     l1153 07CE                     l1241 06FF  
                   l1233 06DB                     l1225 06A5                     l1217 0688  
                   l1163 04A1                     l1171 0631                     l1091 0572  
                   l1083 0559                     l1075 054A                     l1067 0526  
                   l1059 05DB                     l1147 07BC                     l1139 0784  
                   l1155 07DE                     l1235 06E3                     l1227 06C4  
                   l1219 0691                     l1165 04A4                     l1181 063D  
                   l1093 0573                     l1085 055A                     l1077 0552  
                   l1069 0531                     l1149 07C1                     l1237 06E8  
                   l1229 06CC                     l1167 04A6                     l1191 0654  
                   l1183 0642                     l1095 0574                     l1087 0563  
                   l1079 0557                     l1263 0732                     l1239 06F1  
                   l1193 0658                     l1185 0647                     l1177 0634  
                   l1097 0575                     l1089 0566                     l1169 04E3  
                   l1195 065C                     l1187 064C                     l1179 0637  
                   l1099 057E                     l1189 0650                     STR_1 0026  
                   STR_2 001D                     STR_3 002D                     STR_4 002F  
                   STR_5 002A                     _main 067E                     btemp 007E  
                   start 0000                    ?_main 0070          __end_of___lwdiv 0631  
        __end_of___lwmod 05ED                    _PORTB 0006                    _TRISB 0086  
                  _TRISC 0087             lcd_number@nb 002D          lcd_caracter@num 0077  
        lcd_caracter@str 0074          __end_of_lcd_cmd 0582          __end_of_dpowers 001D  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __end_of_sprintf 07E3          __initialization 07E3             __end_of_main 0709  
                 ??_main 0039                   _Keypad 003E         __end_of_lcd_data 05B3  
       __end_of_lcd_init 0502     __end_of_lcd_caracter 0551                ??___lwdiv 0074  
              ??___lwmod 007C                   _column 004E         __end_of_int_Port 04AC  
              ??_lcd_cmd 0070                   _strlen 0502                ??_sprintf 0023  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 04AC  
             __pbssBANK0 004A               __pmaintext 067E                  ?_strlen 0070  
             _lcd_number 04CB                ?_lcd_data 0070                ?_lcd_init 0070  
             __stringtab 0003                ?_int_Port 0070               _keybad_4x3 0631  
                ___lwdiv 05ED                  ___lwmod 05B3                  __ptext1 04CB  
                __ptext2 0709                  __ptext3 05B3                  __ptext4 05ED  
                __ptext5 0526                  __ptext6 0502                  __ptext7 0582  
                __ptext8 04E3                  __ptext9 0551                  _lcd_cmd 0551  
                _dpowers 0013             _lcd_caracter 0526               ??_lcd_data 0070  
                _sprintf 0709               ??_lcd_init 0073     end_of_initialization 07FC  
             ??_int_Port 0070                  strlen@s 0070                _PORTBbits 0006  
              _PORTCbits 0007               lcd_cmd@cmd 0072              ?_lcd_number 002D  
            ?_keybad_4x3 0070           __end_of_strlen 0526      start_initialization 07E3  
             init_fetch0 04B8              __pdataBANK0 003E                 ??_strlen 0072  
              ___latbits 0002            __pcstackBANK0 0020              sprintf@flag 0027  
            sprintf@prec 0028         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
               ?___lwmod 0078                __pstrings 0003                 ?_lcd_cmd 0070  
       ___lwdiv@quotient 0075                 ?_sprintf 0020              __stringbase 0012  
        lcd_number@strNb 002F             ??_lcd_number 007E             ??_keybad_4x3 0070  
     __end_of_lcd_number 04E3       __end_of__stringtab 0013               sprintf@val 0029  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077                 __ptext10 0631  
               __ptext11 04A1                 _lcd_data 0582                 _lcd_init 04E3  
     __end_of_keybad_4x3 067E                 _int_Port 04A1                 init_ram0 04BC  
              sprintf@ap 0026                sprintf@sp 002B         ___lwmod@dividend 007A  
              stringcode 000D                 sprintf@c 002C                 sprintf@f 0020  
        ___lwmod@divisor 0078                 strlen@cp 0072          ___lwmod@counter 007D  
               stringdir 000D                 stringtab 0003            ?_lcd_caracter 0074  
