

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Nov 14 21:29:05 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Version 2.40
    16                           ; Generated 17/11/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     0091                     	;# 
    95     0092                     	;# 
    96     0093                     	;# 
    97     0094                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     0008                     	;# 
   119     0009                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000D                     	;# 
   124     000E                     	;# 
   125     000E                     	;# 
   126     000F                     	;# 
   127     0010                     	;# 
   128     0011                     	;# 
   129     0012                     	;# 
   130     0013                     	;# 
   131     0014                     	;# 
   132     0015                     	;# 
   133     0015                     	;# 
   134     0016                     	;# 
   135     0017                     	;# 
   136     0018                     	;# 
   137     0019                     	;# 
   138     001A                     	;# 
   139     001B                     	;# 
   140     001B                     	;# 
   141     001C                     	;# 
   142     001D                     	;# 
   143     001E                     	;# 
   144     001F                     	;# 
   145     0081                     	;# 
   146     0085                     	;# 
   147     0086                     	;# 
   148     0087                     	;# 
   149     0088                     	;# 
   150     0089                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     0091                     	;# 
   155     0092                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009C                     	;# 
   161     009D                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170     0007                     _PORTCbits	set	7
   171     000B                     _INTCONbits	set	11
   172     0081                     _OPTION_REGbits	set	129
   173     0438                     _TRISC0	set	1080
   174                           
   175                           	psect	cinit
   176     000F                     start_initialization:	
   177                           ; #config settings
   178                           
   179     000F                     __initialization:
   180     000F                     end_of_initialization:	
   181                           ;End of C runtime variable initialization code
   182                           
   183     000F                     __end_of__initialization:
   184     000F  0183               	clrf	3
   185     0010  120A  118A  282E   	ljmp	_main	;jump to C main() function
   186                           
   187                           	psect	cstackCOMMON
   188     0070                     __pcstackCOMMON:
   189     0070                     ?_int_Port:
   190     0070                     ?_int_Interruption:	
   191                           ; 1 bytes @ 0x0
   192                           
   193     0070                     ?_fct_Interruption:	
   194                           ; 1 bytes @ 0x0
   195                           
   196     0070                     ??_fct_Interruption:	
   197                           ; 1 bytes @ 0x0
   198                           
   199     0070                     ?_main:	
   200                           ; 1 bytes @ 0x0
   201                           
   202                           
   203                           ; 1 bytes @ 0x0
   204     0070                     	ds	2
   205     0072                     ??_int_Port:
   206     0072                     ??_int_Interruption:	
   207                           ; 1 bytes @ 0x2
   208                           
   209     0072                     ??_main:	
   210                           ; 1 bytes @ 0x2
   211                           
   212                           
   213                           	psect	maintext
   214     002E                     __pmaintext:	
   215                           ; 1 bytes @ 0x2
   216 ;;
   217 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   218 ;;
   219 ;; *************** function _main *****************
   220 ;; Defined at:
   221 ;;		line 28 in file "main.c"
   222 ;; Parameters:    Size  Location     Type
   223 ;;		None
   224 ;; Auto vars:     Size  Location     Type
   225 ;;		None
   226 ;; Return value:  Size  Location     Type
   227 ;;                  1    wreg      void 
   228 ;; Registers used:
   229 ;;		status,2, status,0, pclath, cstack
   230 ;; Tracked objects:
   231 ;;		On entry : B00/0
   232 ;;		On exit  : 0/0
   233 ;;		Unchanged: 0/0
   234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   235 ;;      Params:         0       0       0       0       0
   236 ;;      Locals:         0       0       0       0       0
   237 ;;      Temps:          0       0       0       0       0
   238 ;;      Totals:         0       0       0       0       0
   239 ;;Total ram usage:        0 bytes
   240 ;; Hardware stack levels required when called: 2
   241 ;; This function calls:
   242 ;;		_int_Interruption
   243 ;;		_int_Port
   244 ;; This function is called by:
   245 ;;		Startup code after reset
   246 ;; This function uses a non-reentrant model
   247 ;;
   248                           
   249     002E                     _main:	
   250                           ;psect for function _main
   251                           
   252     002E                     l634:	
   253                           ;incstack = 0
   254                           ; Regs used in _main: [status,2+status,0+pclath+cstack]
   255                           
   256                           
   257                           ;main.c: 29: int_Port();
   258     002E  120A  118A  2043  120A  118A  	fcall	_int_Port
   259                           
   260                           ;main.c: 30: int_Interruption();
   261     0033  120A  118A  203C  120A  118A  	fcall	_int_Interruption
   262     0038                     l23:	
   263                           ;main.c: 31: while (1){
   264                           
   265     0038                     l24:
   266     0038  2838               	goto	l23
   267     0039  120A  118A  280C   	ljmp	start
   268     003C                     __end_of_main:
   269                           
   270                           	psect	text1
   271     0043                     __ptext1:	
   272 ;; *************** function _int_Port *****************
   273 ;; Defined at:
   274 ;;		line 37 in file "main.c"
   275 ;; Parameters:    Size  Location     Type
   276 ;;		None
   277 ;; Auto vars:     Size  Location     Type
   278 ;;		None
   279 ;; Return value:  Size  Location     Type
   280 ;;                  1    wreg      void 
   281 ;; Registers used:
   282 ;;		None
   283 ;; Tracked objects:
   284 ;;		On entry : 0/0
   285 ;;		On exit  : 0/0
   286 ;;		Unchanged: 0/0
   287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   288 ;;      Params:         0       0       0       0       0
   289 ;;      Locals:         0       0       0       0       0
   290 ;;      Temps:          0       0       0       0       0
   291 ;;      Totals:         0       0       0       0       0
   292 ;;Total ram usage:        0 bytes
   293 ;; Hardware stack levels used: 1
   294 ;; Hardware stack levels required when called: 1
   295 ;; This function calls:
   296 ;;		Nothing
   297 ;; This function is called by:
   298 ;;		_main
   299 ;; This function uses a non-reentrant model
   300 ;;
   301                           
   302     0043                     _int_Port:	
   303                           ;psect for function _int_Port
   304                           
   305     0043                     l624:	
   306                           ;incstack = 0
   307                           ; Regs used in _int_Port: []
   308                           
   309                           
   310                           ;main.c: 38: TRISC0 = 0;
   311     0043  1683               	bsf	3,5	;RP0=1, select bank1
   312     0044  1303               	bcf	3,6	;RP1=0, select bank1
   313     0045  1007               	bcf	7,0	;volatile
   314     0046                     l29:
   315     0046  0008               	return
   316     0047                     __end_of_int_Port:
   317                           
   318                           	psect	text2
   319     003C                     __ptext2:	
   320 ;; *************** function _int_Interruption *****************
   321 ;; Defined at:
   322 ;;		line 40 in file "main.c"
   323 ;; Parameters:    Size  Location     Type
   324 ;;		None
   325 ;; Auto vars:     Size  Location     Type
   326 ;;		None
   327 ;; Return value:  Size  Location     Type
   328 ;;                  1    wreg      void 
   329 ;; Registers used:
   330 ;;		None
   331 ;; Tracked objects:
   332 ;;		On entry : 0/0
   333 ;;		On exit  : 0/0
   334 ;;		Unchanged: 0/0
   335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   336 ;;      Params:         0       0       0       0       0
   337 ;;      Locals:         0       0       0       0       0
   338 ;;      Temps:          0       0       0       0       0
   339 ;;      Totals:         0       0       0       0       0
   340 ;;Total ram usage:        0 bytes
   341 ;; Hardware stack levels used: 1
   342 ;; Hardware stack levels required when called: 1
   343 ;; This function calls:
   344 ;;		Nothing
   345 ;; This function is called by:
   346 ;;		_main
   347 ;; This function uses a non-reentrant model
   348 ;;
   349                           
   350     003C                     _int_Interruption:	
   351                           ;psect for function _int_Interruption
   352                           
   353     003C                     l626:	
   354                           ;incstack = 0
   355                           ; Regs used in _int_Interruption: []
   356                           
   357                           
   358                           ;main.c: 42: INTCONbits.GIE = 1;
   359     003C  178B               	bsf	11,7	;volatile
   360                           
   361                           ;main.c: 43: INTCONbits.PEIE = 1;
   362     003D  170B               	bsf	11,6	;volatile
   363                           
   364                           ;main.c: 44: INTCONbits.INTE = 1;
   365     003E  160B               	bsf	11,4	;volatile
   366                           
   367                           ;main.c: 45: OPTION_REGbits.INTEDG =1;
   368     003F  1683               	bsf	3,5	;RP0=1, select bank1
   369     0040  1303               	bcf	3,6	;RP1=0, select bank1
   370     0041  1701               	bsf	1,6	;volatile
   371     0042                     l32:
   372     0042  0008               	return
   373     0043                     __end_of_int_Interruption:
   374                           
   375                           	psect	text3
   376     0013                     __ptext3:	
   377 ;; *************** function _fct_Interruption *****************
   378 ;; Defined at:
   379 ;;		line 20 in file "main.c"
   380 ;; Parameters:    Size  Location     Type
   381 ;;		None
   382 ;; Auto vars:     Size  Location     Type
   383 ;;		None
   384 ;; Return value:  Size  Location     Type
   385 ;;                  1    wreg      void 
   386 ;; Registers used:
   387 ;;		status,0
   388 ;; Tracked objects:
   389 ;;		On entry : 0/0
   390 ;;		On exit  : 0/0
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   393 ;;      Params:         0       0       0       0       0
   394 ;;      Locals:         0       0       0       0       0
   395 ;;      Temps:          2       0       0       0       0
   396 ;;      Totals:         2       0       0       0       0
   397 ;;Total ram usage:        2 bytes
   398 ;; Hardware stack levels used: 1
   399 ;; This function calls:
   400 ;;		Nothing
   401 ;; This function is called by:
   402 ;;		Interrupt level 1
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406     0013                     _fct_Interruption:	
   407                           ;psect for function _fct_Interruption
   408                           
   409     0013                     i1l628:
   410                           
   411                           ;main.c: 21: if(INTCONbits.INTF == 1){
   412     0013  1C8B               	btfss	11,1	;volatile
   413     0014  2816               	goto	u1_21
   414     0015  2817               	goto	u1_20
   415     0016                     u1_21:
   416     0016  2827               	goto	i1l18
   417     0017                     u1_20:
   418     0017                     i1l630:
   419                           
   420                           ;main.c: 22: PORTCbits.RC0 = !(PORTCbits.RC0);
   421     0017  1003               	clrc
   422     0018  1283               	bcf	3,5	;RP0=0, select bank0
   423     0019  1303               	bcf	3,6	;RP1=0, select bank0
   424     001A  1C07               	btfss	7,0	;volatile
   425     001B  1403               	setc
   426     001C  1803               	btfsc	3,0
   427     001D  281F               	goto	u2_21
   428     001E  2823               	goto	u2_20
   429     001F                     u2_21:
   430     001F  1283               	bcf	3,5	;RP0=0, select bank0
   431     0020  1303               	bcf	3,6	;RP1=0, select bank0
   432     0021  1407               	bsf	7,0	;volatile
   433     0022  2826               	goto	u3_24
   434     0023                     u2_20:
   435     0023  1283               	bcf	3,5	;RP0=0, select bank0
   436     0024  1303               	bcf	3,6	;RP1=0, select bank0
   437     0025  1007               	bcf	7,0	;volatile
   438     0026                     u3_24:
   439     0026                     i1l632:
   440                           
   441                           ;main.c: 23: INTCONbits.INTF = 0 ;
   442     0026  108B               	bcf	11,1	;volatile
   443     0027                     i1l18:
   444     0027  0871               	movf	??_fct_Interruption+1,w
   445     0028  008A               	movwf	10
   446     0029  0E70               	swapf	??_fct_Interruption,w
   447     002A  0083               	movwf	3
   448     002B  0EFE               	swapf	btemp,f
   449     002C  0E7E               	swapf	btemp,w
   450     002D  0009               	retfie
   451     002E                     __end_of_fct_Interruption:
   452     007E                     btemp	set	126	;btemp
   453     007E                     wtemp0	set	126
   454                           
   455                           	psect	intentry
   456     0004                     __pintentry:	
   457                           ;incstack = 0
   458                           ; Regs used in _fct_Interruption: [status,0]
   459                           
   460     0004                     interrupt_function:
   461     007E                     saved_w	set	btemp
   462     0004  00FE               	movwf	btemp
   463     0005  0E03               	swapf	3,w
   464     0006  00F0               	movwf	??_fct_Interruption
   465     0007  080A               	movf	10,w
   466     0008  00F1               	movwf	??_fct_Interruption+1
   467     0009  120A  118A  2813   	ljmp	_fct_Interruption
   468                           
   469                           	psect	idloc
   470                           
   471                           ;Config register IDLOC0 @ 0x2000
   472                           ;	unspecified, using default values
   473     2000                     	org	8192
   474     2000  3FFF               	dw	16383
   475                           
   476                           ;Config register IDLOC1 @ 0x2001
   477                           ;	unspecified, using default values
   478     2001                     	org	8193
   479     2001  3FFF               	dw	16383
   480                           
   481                           ;Config register IDLOC2 @ 0x2002
   482                           ;	unspecified, using default values
   483     2002                     	org	8194
   484     2002  3FFF               	dw	16383
   485                           
   486                           ;Config register IDLOC3 @ 0x2003
   487                           ;	unspecified, using default values
   488     2003                     	org	8195
   489     2003  3FFF               	dw	16383
   490                           
   491                           	psect	config
   492                           
   493                           ;Config register CONFIG @ 0x2007
   494                           ;	Oscillator Selection bits
   495                           ;	FOSC = EXTRC, RC oscillator
   496                           ;	Watchdog Timer Enable bit
   497                           ;	WDTE = OFF, WDT disabled
   498                           ;	Power-up Timer Enable bit
   499                           ;	PWRTE = OFF, PWRT disabled
   500                           ;	Brown-out Reset Enable bit
   501                           ;	BOREN = ON, BOR enabled
   502                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   503                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   504                           ;	Data EEPROM Memory Code Protection bit
   505                           ;	CPD = OFF, Data EEPROM code protection off
   506                           ;	Flash Program Memory Write Enable bits
   507                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   508                           ;	In-Circuit Debugger Mode bit
   509                           ;	DEBUG = 0x1, unprogrammed default
   510                           ;	Flash Program Memory Code Protection bit
   511                           ;	CP = OFF, Code protection off
   512     2007                     	org	8199
   513     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _fct_Interruption in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _fct_Interruption in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _fct_Interruption in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _fct_Interruption in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _fct_Interruption in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                   _int_Interruption
                           _int_Port
 ---------------------------------------------------------------------------------
 (1) _int_Port                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _int_Interruption                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _fct_Interruption                                     2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _int_Interruption
   _int_Port

 _fct_Interruption (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Nov 14 21:29:05 2022

                      l23 0038                        l32 0042                        l24 0038  
                      l29 0046                       l624 0043                       l626 003C  
                     l634 002E                      i1l18 0027                      u1_20 0017  
                    u1_21 0016                      u2_20 0023                      u2_21 001F  
                    u3_24 0026                      _main 002E                      btemp 007E  
                    start 000C                     ?_main 0070                     i1l630 0017  
                   i1l632 0026                     i1l628 0013                     pclath 000A  
                   status 0003                     wtemp0 007E           __initialization 000F  
            __end_of_main 003C                    ??_main 0072                    _TRISC0 0438  
__end_of_int_Interruption 0043          __end_of_int_Port 0047                    saved_w 007E  
 __end_of__initialization 000F            __pcstackCOMMON 0070            _OPTION_REGbits 0081  
              __pmaintext 002E                __pintentry 0004          _fct_Interruption 0013  
               ?_int_Port 0070                   __ptext1 0043                   __ptext2 003C  
                 __ptext3 0013      end_of_initialization 000F                ??_int_Port 0072  
       ?_int_Interruption 0070        ??_int_Interruption 0072                 _PORTCbits 0007  
     start_initialization 000F  __end_of_fct_Interruption 002E                 ___latbits 0002  
       interrupt_function 0004                  _int_Port 0043         ?_fct_Interruption 0070  
      ??_fct_Interruption 0070                _INTCONbits 000B                  intlevel1 0000  
        _int_Interruption 003C  
