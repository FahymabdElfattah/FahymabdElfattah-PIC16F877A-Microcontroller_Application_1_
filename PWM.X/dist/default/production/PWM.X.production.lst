

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Nov 19 22:44:24 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Version 2.40
    16                           ; Generated 17/11/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     0091                     	;# 
    95     0092                     	;# 
    96     0093                     	;# 
    97     0094                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     0008                     	;# 
   119     0009                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000D                     	;# 
   124     000E                     	;# 
   125     000E                     	;# 
   126     000F                     	;# 
   127     0010                     	;# 
   128     0011                     	;# 
   129     0012                     	;# 
   130     0013                     	;# 
   131     0014                     	;# 
   132     0015                     	;# 
   133     0015                     	;# 
   134     0016                     	;# 
   135     0017                     	;# 
   136     0018                     	;# 
   137     0019                     	;# 
   138     001A                     	;# 
   139     001B                     	;# 
   140     001B                     	;# 
   141     001C                     	;# 
   142     001D                     	;# 
   143     001E                     	;# 
   144     001F                     	;# 
   145     0081                     	;# 
   146     0085                     	;# 
   147     0086                     	;# 
   148     0087                     	;# 
   149     0088                     	;# 
   150     0089                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     0091                     	;# 
   155     0092                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009C                     	;# 
   161     009D                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170     0015                     _CCPR1L	set	21
   171     0012                     _T2CON	set	18
   172     0007                     _PORTCbits	set	7
   173     0017                     _CCP1CON	set	23
   174     0092                     _PR2	set	146
   175     0087                     _TRISC	set	135
   176                           
   177                           	psect	cinit
   178     07FB                     start_initialization:	
   179                           ; #config settings
   180                           
   181     07FB                     __initialization:
   182                           
   183                           ; Clear objects allocated to COMMON
   184     07FB  01F7               	clrf	__pbssCOMMON& (0+127)
   185     07FC                     end_of_initialization:	
   186                           ;End of C runtime variable initialization code
   187                           
   188     07FC                     __end_of__initialization:
   189     07FC  0183               	clrf	3
   190     07FD  120A  118A  2F7D   	ljmp	_main	;jump to C main() function
   191                           
   192                           	psect	bssCOMMON
   193     0077                     __pbssCOMMON:
   194     0077                     _timer_count:
   195     0077                     	ds	1
   196                           
   197                           	psect	cstackCOMMON
   198     0070                     __pcstackCOMMON:
   199     0070                     ?_int_Port:
   200     0070                     ??_int_Port:	
   201                           ; 1 bytes @ 0x0
   202                           
   203     0070                     ?_int_PWM:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0070                     ??_int_PWM:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0070                     ?_setPWMDutyCycle1:	
   210                           ; 1 bytes @ 0x0
   211                           
   212     0070                     ?_main:	
   213                           ; 1 bytes @ 0x0
   214                           
   215     0070                     setPWMDutyCycle1@DutyCycle:	
   216                           ; 1 bytes @ 0x0
   217                           
   218                           
   219                           ; 2 bytes @ 0x0
   220     0070                     	ds	2
   221     0072                     ??_setPWMDutyCycle1:
   222                           
   223                           ; 1 bytes @ 0x2
   224     0072                     	ds	2
   225     0074                     ??_main:
   226                           
   227                           ; 1 bytes @ 0x4
   228     0074                     	ds	3
   229                           
   230                           	psect	maintext
   231     077D                     __pmaintext:	
   232 ;;
   233 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   234 ;;
   235 ;; *************** function _main *****************
   236 ;; Defined at:
   237 ;;		line 23 in file "main.c"
   238 ;; Parameters:    Size  Location     Type
   239 ;;		None
   240 ;; Auto vars:     Size  Location     Type
   241 ;;		None
   242 ;; Return value:  Size  Location     Type
   243 ;;                  1    wreg      void 
   244 ;; Registers used:
   245 ;;		wreg, status,2, status,0, pclath, cstack
   246 ;; Tracked objects:
   247 ;;		On entry : B00/0
   248 ;;		On exit  : 0/0
   249 ;;		Unchanged: 0/0
   250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   251 ;;      Params:         0       0       0       0       0
   252 ;;      Locals:         0       0       0       0       0
   253 ;;      Temps:          3       0       0       0       0
   254 ;;      Totals:         3       0       0       0       0
   255 ;;Total ram usage:        3 bytes
   256 ;; Hardware stack levels required when called: 1
   257 ;; This function calls:
   258 ;;		_int_PWM
   259 ;;		_int_Port
   260 ;;		_setPWMDutyCycle1
   261 ;; This function is called by:
   262 ;;		Startup code after reset
   263 ;; This function uses a non-reentrant model
   264 ;;
   265                           
   266     077D                     _main:	
   267                           ;psect for function _main
   268                           
   269     077D                     l681:	
   270                           ;incstack = 0
   271                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   272                           
   273                           
   274                           ;main.c: 25:         CCP1CON = 0x0C ;
   275     077D  120A  118A  274D  120A  118A  	fcall	_int_Port
   276     0782                     l683:
   277                           
   278                           ;main.c: 26:         setPWMDutyCycle1(512);
   279     0782  120A  118A  2751  120A  118A  	fcall	_int_PWM
   280     0787                     l685:
   281                           
   282                           ;main.c: 28:         CCP1CON = 0x00 ;
   283     0787  3000               	movlw	0
   284     0788  00F0               	movwf	setPWMDutyCycle1@DutyCycle
   285     0789  3002               	movlw	2
   286     078A  00F1               	movwf	setPWMDutyCycle1@DutyCycle+1
   287     078B  120A  118A  275E  120A  118A  	fcall	_setPWMDutyCycle1
   288     0790                     l687:
   289                           
   290                           ;main.c: 29:         PORTCbits.RC2 = 0;
   291     0790  301A               	movlw	26
   292     0791  00F6               	movwf	??_main+2
   293     0792  305E               	movlw	94
   294     0793  00F5               	movwf	??_main+1
   295     0794  306E               	movlw	110
   296     0795  00F4               	movwf	??_main
   297     0796                     u37:
   298     0796  0BF4               	decfsz	??_main,f
   299     0797  2F96               	goto	u37
   300     0798  0BF5               	decfsz	??_main+1,f
   301     0799  2F96               	goto	u37
   302     079A  0BF6               	decfsz	??_main+2,f
   303     079B  2F96               	goto	u37
   304     079C  0000               	nop
   305     079D                     l689:
   306                           
   307                           ;main.c: 30:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   308     079D  1283               	bcf	3,5	;RP0=0, select bank0
   309     079E  1303               	bcf	3,6	;RP1=0, select bank0
   310     079F  0197               	clrf	23	;volatile
   311     07A0                     l691:
   312                           
   313                           ;main.c: 31:         }
   314     07A0  1107               	bcf	7,2	;volatile
   315     07A1                     l693:
   316                           
   317                           ;main.c: 33:     return;
   318     07A1  300C               	movlw	12
   319     07A2  1283               	bcf	3,5	;RP0=0, select bank0
   320     07A3  1303               	bcf	3,6	;RP1=0, select bank0
   321     07A4  0097               	movwf	23	;volatile
   322     07A5                     l695:
   323                           
   324                           ;main.c: 34: }
   325     07A5  3000               	movlw	0
   326     07A6  00F0               	movwf	setPWMDutyCycle1@DutyCycle
   327     07A7  3002               	movlw	2
   328     07A8  00F1               	movwf	setPWMDutyCycle1@DutyCycle+1
   329     07A9  120A  118A  275E  120A  118A  	fcall	_setPWMDutyCycle1
   330     07AE                     l697:
   331                           
   332                           ;main.c: 35: void int_Port(){
   333     07AE  301A               	movlw	26
   334     07AF  00F6               	movwf	??_main+2
   335     07B0  305E               	movlw	94
   336     07B1  00F5               	movwf	??_main+1
   337     07B2  306E               	movlw	110
   338     07B3  00F4               	movwf	??_main
   339     07B4                     u47:
   340     07B4  0BF4               	decfsz	??_main,f
   341     07B5  2FB4               	goto	u47
   342     07B6  0BF5               	decfsz	??_main+1,f
   343     07B7  2FB4               	goto	u47
   344     07B8  0BF6               	decfsz	??_main+2,f
   345     07B9  2FB4               	goto	u47
   346     07BA  0000               	nop
   347                           
   348                           ;main.c: 36:     TRISC = 0x00;
   349     07BB  1283               	bcf	3,5	;RP0=0, select bank0
   350     07BC  1303               	bcf	3,6	;RP1=0, select bank0
   351     07BD  0197               	clrf	23	;volatile
   352     07BE                     l699:
   353                           
   354                           ;main.c: 37: }
   355     07BE  1107               	bcf	7,2	;volatile
   356     07BF                     l701:
   357                           
   358                           ;main.c: 38: void int_PWM(){
   359     07BF  301A               	movlw	26
   360     07C0  00F6               	movwf	??_main+2
   361     07C1  305E               	movlw	94
   362     07C2  00F5               	movwf	??_main+1
   363     07C3  306E               	movlw	110
   364     07C4  00F4               	movwf	??_main
   365     07C5                     u57:
   366     07C5  0BF4               	decfsz	??_main,f
   367     07C6  2FC5               	goto	u57
   368     07C7  0BF5               	decfsz	??_main+1,f
   369     07C8  2FC5               	goto	u57
   370     07C9  0BF6               	decfsz	??_main+2,f
   371     07CA  2FC5               	goto	u57
   372     07CB  0000               	nop
   373     07CC                     l703:
   374                           
   375                           ;main.c: 39: 
   376     07CC  300C               	movlw	12
   377     07CD  1283               	bcf	3,5	;RP0=0, select bank0
   378     07CE  1303               	bcf	3,6	;RP1=0, select bank0
   379     07CF  0097               	movwf	23	;volatile
   380     07D0                     l705:
   381                           
   382                           ;main.c: 40: 
   383     07D0  3000               	movlw	0
   384     07D1  00F0               	movwf	setPWMDutyCycle1@DutyCycle
   385     07D2  3002               	movlw	2
   386     07D3  00F1               	movwf	setPWMDutyCycle1@DutyCycle+1
   387     07D4  120A  118A  275E  120A  118A  	fcall	_setPWMDutyCycle1
   388     07D9                     l707:
   389                           
   390                           ;main.c: 41: 
   391     07D9  301A               	movlw	26
   392     07DA  00F6               	movwf	??_main+2
   393     07DB  305E               	movlw	94
   394     07DC  00F5               	movwf	??_main+1
   395     07DD  306E               	movlw	110
   396     07DE  00F4               	movwf	??_main
   397     07DF                     u67:
   398     07DF  0BF4               	decfsz	??_main,f
   399     07E0  2FDF               	goto	u67
   400     07E1  0BF5               	decfsz	??_main+1,f
   401     07E2  2FDF               	goto	u67
   402     07E3  0BF6               	decfsz	??_main+2,f
   403     07E4  2FDF               	goto	u67
   404     07E5  0000               	nop
   405     07E6                     l709:
   406                           
   407                           ;main.c: 42:     CCP1CON = 0x0C ;
   408     07E6  1283               	bcf	3,5	;RP0=0, select bank0
   409     07E7  1303               	bcf	3,6	;RP1=0, select bank0
   410     07E8  0197               	clrf	23	;volatile
   411     07E9                     l711:
   412                           
   413                           ;main.c: 43:     PR2 = 0xFF ;
   414     07E9  1107               	bcf	7,2	;volatile
   415     07EA                     l713:
   416                           
   417                           ;main.c: 44: 
   418     07EA  301A               	movlw	26
   419     07EB  00F6               	movwf	??_main+2
   420     07EC  305E               	movlw	94
   421     07ED  00F5               	movwf	??_main+1
   422     07EE  306E               	movlw	110
   423     07EF  00F4               	movwf	??_main
   424     07F0                     u77:
   425     07F0  0BF4               	decfsz	??_main,f
   426     07F1  2FF0               	goto	u77
   427     07F2  0BF5               	decfsz	??_main+1,f
   428     07F3  2FF0               	goto	u77
   429     07F4  0BF6               	decfsz	??_main+2,f
   430     07F5  2FF0               	goto	u77
   431     07F6  0000               	nop
   432     07F7  2FA1               	goto	l693
   433     07F8  120A  118A  2800   	ljmp	start
   434     07FB                     __end_of_main:
   435                           
   436                           	psect	text1
   437     075E                     __ptext1:	
   438 ;; *************** function _setPWMDutyCycle1 *****************
   439 ;; Defined at:
   440 ;;		line 62 in file "main.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;  DutyCycle       2    0[COMMON] unsigned int 
   443 ;; Auto vars:     Size  Location     Type
   444 ;;		None
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, status,2, status,0
   449 ;; Tracked objects:
   450 ;;		On entry : 0/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   454 ;;      Params:         2       0       0       0       0
   455 ;;      Locals:         0       0       0       0       0
   456 ;;      Temps:          2       0       0       0       0
   457 ;;      Totals:         4       0       0       0       0
   458 ;;Total ram usage:        4 bytes
   459 ;; Hardware stack levels used: 1
   460 ;; This function calls:
   461 ;;		Nothing
   462 ;; This function is called by:
   463 ;;		_main
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467     075E                     _setPWMDutyCycle1:	
   468                           ;psect for function _setPWMDutyCycle1
   469                           
   470     075E                     l675:	
   471                           ;incstack = 0
   472                           ; Regs used in _setPWMDutyCycle1: [wreg+status,2+status,0]
   473                           
   474     075E  0871               	movf	setPWMDutyCycle1@DutyCycle+1,w
   475     075F  00F3               	movwf	??_setPWMDutyCycle1+1
   476     0760  0870               	movf	setPWMDutyCycle1@DutyCycle,w
   477     0761  00F2               	movwf	??_setPWMDutyCycle1
   478     0762  1003               	clrc
   479     0763  0CF3               	rrf	??_setPWMDutyCycle1+1,f
   480     0764  0CF2               	rrf	??_setPWMDutyCycle1,f
   481     0765  1003               	clrc
   482     0766  0CF3               	rrf	??_setPWMDutyCycle1+1,f
   483     0767  0CF2               	rrf	??_setPWMDutyCycle1,f
   484     0768  0872               	movf	??_setPWMDutyCycle1,w
   485     0769  1283               	bcf	3,5	;RP0=0, select bank0
   486     076A  1303               	bcf	3,6	;RP1=0, select bank0
   487     076B  0095               	movwf	21	;volatile
   488     076C                     l677:
   489     076C  0817               	movf	23,w	;volatile
   490     076D  39CF               	andlw	207
   491     076E  0097               	movwf	23	;volatile
   492     076F                     l679:
   493     076F  0870               	movf	setPWMDutyCycle1@DutyCycle,w
   494     0770  00F2               	movwf	??_setPWMDutyCycle1
   495     0771  3003               	movlw	3
   496     0772                     u25:
   497     0772  1003               	clrc
   498     0773  0DF2               	rlf	??_setPWMDutyCycle1,f
   499     0774  3EFF               	addlw	-1
   500     0775  1D03               	skipz
   501     0776  2F72               	goto	u25
   502     0777  1003               	clrc
   503     0778  0D72               	rlf	??_setPWMDutyCycle1,w
   504     0779  3930               	andlw	48
   505     077A  0417               	iorwf	23,w
   506     077B  0097               	movwf	23	;volatile
   507     077C                     l39:
   508     077C  0008               	return
   509     077D                     __end_of_setPWMDutyCycle1:
   510                           
   511                           	psect	text2
   512     074D                     __ptext2:	
   513 ;; *************** function _int_Port *****************
   514 ;; Defined at:
   515 ;;		line 49 in file "main.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;		None
   518 ;; Auto vars:     Size  Location     Type
   519 ;;		None
   520 ;; Return value:  Size  Location     Type
   521 ;;                  1    wreg      void 
   522 ;; Registers used:
   523 ;;		status,2
   524 ;; Tracked objects:
   525 ;;		On entry : 0/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   529 ;;      Params:         0       0       0       0       0
   530 ;;      Locals:         0       0       0       0       0
   531 ;;      Temps:          0       0       0       0       0
   532 ;;      Totals:         0       0       0       0       0
   533 ;;Total ram usage:        0 bytes
   534 ;; Hardware stack levels used: 1
   535 ;; This function calls:
   536 ;;		Nothing
   537 ;; This function is called by:
   538 ;;		_main
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542     074D                     _int_Port:	
   543                           ;psect for function _int_Port
   544                           
   545     074D                     l631:	
   546                           ;incstack = 0
   547                           ; Regs used in _int_Port: [status,2]
   548                           
   549                           
   550                           ;main.c: 50:     CCP1CON = CCP1CON & 0xCF ;
   551     074D  1683               	bsf	3,5	;RP0=1, select bank1
   552     074E  1303               	bcf	3,6	;RP1=0, select bank1
   553     074F  0187               	clrf	7	;volatile
   554     0750                     l33:
   555     0750  0008               	return
   556     0751                     __end_of_int_Port:
   557                           
   558                           	psect	text3
   559     0751                     __ptext3:	
   560 ;; *************** function _int_PWM *****************
   561 ;; Defined at:
   562 ;;		line 52 in file "main.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;		None
   565 ;; Auto vars:     Size  Location     Type
   566 ;;		None
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   576 ;;      Params:         0       0       0       0       0
   577 ;;      Locals:         0       0       0       0       0
   578 ;;      Temps:          0       0       0       0       0
   579 ;;      Totals:         0       0       0       0       0
   580 ;;Total ram usage:        0 bytes
   581 ;; Hardware stack levels used: 1
   582 ;; This function calls:
   583 ;;		Nothing
   584 ;; This function is called by:
   585 ;;		_main
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589     0751                     _int_PWM:	
   590                           ;psect for function _int_PWM
   591                           
   592     0751                     l633:	
   593                           ;incstack = 0
   594                           ; Regs used in _int_PWM: [wreg]
   595                           
   596     0751  300C               	movlw	12
   597     0752  1283               	bcf	3,5	;RP0=0, select bank0
   598     0753  1303               	bcf	3,6	;RP1=0, select bank0
   599     0754  0097               	movwf	23	;volatile
   600     0755  30FF               	movlw	255
   601     0756  1683               	bsf	3,5	;RP0=1, select bank1
   602     0757  1303               	bcf	3,6	;RP1=0, select bank1
   603     0758  0092               	movwf	18	;volatile
   604     0759  3004               	movlw	4
   605     075A  1283               	bcf	3,5	;RP0=0, select bank0
   606     075B  1303               	bcf	3,6	;RP1=0, select bank0
   607     075C  0092               	movwf	18	;volatile
   608     075D                     l36:
   609     075D  0008               	return
   610     075E                     __end_of_int_PWM:
   611     007E                     btemp	set	126	;btemp
   612     007E                     wtemp0	set	126
   613                           
   614                           	psect	idloc
   615                           
   616                           ;Config register IDLOC0 @ 0x2000
   617                           ;	unspecified, using default values
   618     2000                     	org	8192
   619     2000  3FFF               	dw	16383
   620                           
   621                           ;Config register IDLOC1 @ 0x2001
   622                           ;	unspecified, using default values
   623     2001                     	org	8193
   624     2001  3FFF               	dw	16383
   625                           
   626                           ;Config register IDLOC2 @ 0x2002
   627                           ;	unspecified, using default values
   628     2002                     	org	8194
   629     2002  3FFF               	dw	16383
   630                           
   631                           ;Config register IDLOC3 @ 0x2003
   632                           ;	unspecified, using default values
   633     2003                     	org	8195
   634     2003  3FFF               	dw	16383
   635                           
   636                           	psect	config
   637                           
   638                           ;Config register CONFIG @ 0x2007
   639                           ;	Oscillator Selection bits
   640                           ;	FOSC = EXTRC, RC oscillator
   641                           ;	Watchdog Timer Enable bit
   642                           ;	WDTE = OFF, WDT disabled
   643                           ;	Power-up Timer Enable bit
   644                           ;	PWRTE = OFF, PWRT disabled
   645                           ;	Brown-out Reset Enable bit
   646                           ;	BOREN = ON, BOR enabled
   647                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   648                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   649                           ;	Data EEPROM Memory Code Protection bit
   650                           ;	CPD = OFF, Data EEPROM code protection off
   651                           ;	Flash Program Memory Write Enable bits
   652                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   653                           ;	In-Circuit Debugger Mode bit
   654                           ;	DEBUG = 0x1, unprogrammed default
   655                           ;	Flash Program Memory Code Protection bit
   656                           ;	CP = OFF, Code protection off
   657     2007                     	org	8199
   658     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setPWMDutyCycle1

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     272
                                              4 COMMON     3     3      0
                            _int_PWM
                           _int_Port
                   _setPWMDutyCycle1
 ---------------------------------------------------------------------------------
 (1) _setPWMDutyCycle1                                     4     2      2     272
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _int_Port                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _int_PWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _int_PWM
   _int_Port
   _setPWMDutyCycle1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Nov 19 22:44:24 2022

                       l33 0750                         l36 075D                         l39 077C  
                       u25 0772                         u37 0796                         u47 07B4  
                       u57 07C5                         u67 07DF                         u77 07F0  
                      l701 07BF                        l631 074D                        l711 07E9  
                      l703 07CC                        l633 0751                        l713 07EA  
                      l705 07D0                        l707 07D9                        l709 07E6  
                      l681 077D                        l675 075E                        l691 07A0  
                      l683 0782                        l677 076C                        l693 07A1  
                      l685 0787                        l679 076F                        l695 07A5  
                      l687 0790                        l697 07AE                        l689 079D  
                      l699 07BE                        _PR2 0092                       _main 077D  
                     btemp 007E                       start 0000                      ?_main 0070  
                    _T2CON 0012                      _TRISC 0087            __end_of_int_PWM 075E  
                    status 0003                      wtemp0 007E            __initialization 07FB  
             __end_of_main 07FB                     ??_main 0074  setPWMDutyCycle1@DutyCycle 0070  
                   _CCPR1L 0015           __end_of_int_Port 0751                  ??_int_PWM 0070  
  __end_of__initialization 07FC             __pcstackCOMMON 0070                 __pmaintext 077D  
                  _CCP1CON 0017                  ?_int_Port 0070                    __ptext1 075E  
                  __ptext2 074D                    __ptext3 0751                    _int_PWM 0751  
     end_of_initialization 07FC                 ??_int_Port 0070           _setPWMDutyCycle1 075E  
                _PORTCbits 0007        start_initialization 07FB                __pbssCOMMON 0077  
                ___latbits 0002                   ?_int_PWM 0070   __end_of_setPWMDutyCycle1 077D  
                 _int_Port 074D                _timer_count 0077          ?_setPWMDutyCycle1 0070  
       ??_setPWMDutyCycle1 0072  
