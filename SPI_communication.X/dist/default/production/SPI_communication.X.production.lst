

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 08 10:18:00 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0093                     	;# 
    99     0094                     	;# 
   100     0098                     	;# 
   101     0099                     	;# 
   102     009C                     	;# 
   103     009D                     	;# 
   104     009E                     	;# 
   105     009F                     	;# 
   106     010C                     	;# 
   107     010D                     	;# 
   108     010E                     	;# 
   109     010F                     	;# 
   110     018C                     	;# 
   111     018D                     	;# 
   112     0000                     	;# 
   113     0001                     	;# 
   114     0002                     	;# 
   115     0003                     	;# 
   116     0004                     	;# 
   117     0005                     	;# 
   118     0006                     	;# 
   119     0007                     	;# 
   120     0008                     	;# 
   121     0009                     	;# 
   122     000A                     	;# 
   123     000B                     	;# 
   124     000C                     	;# 
   125     000D                     	;# 
   126     000E                     	;# 
   127     000E                     	;# 
   128     000F                     	;# 
   129     0010                     	;# 
   130     0011                     	;# 
   131     0012                     	;# 
   132     0013                     	;# 
   133     0014                     	;# 
   134     0015                     	;# 
   135     0015                     	;# 
   136     0016                     	;# 
   137     0017                     	;# 
   138     0018                     	;# 
   139     0019                     	;# 
   140     001A                     	;# 
   141     001B                     	;# 
   142     001B                     	;# 
   143     001C                     	;# 
   144     001D                     	;# 
   145     001E                     	;# 
   146     001F                     	;# 
   147     0081                     	;# 
   148     0085                     	;# 
   149     0086                     	;# 
   150     0087                     	;# 
   151     0088                     	;# 
   152     0089                     	;# 
   153     008C                     	;# 
   154     008D                     	;# 
   155     008E                     	;# 
   156     0091                     	;# 
   157     0092                     	;# 
   158     0093                     	;# 
   159     0094                     	;# 
   160     0098                     	;# 
   161     0099                     	;# 
   162     009C                     	;# 
   163     009D                     	;# 
   164     009E                     	;# 
   165     009F                     	;# 
   166     010C                     	;# 
   167     010D                     	;# 
   168     010E                     	;# 
   169     010F                     	;# 
   170     018C                     	;# 
   171     018D                     	;# 
   172     0006                     _PORTBbits	set	6
   173     000C                     _PIR1bits	set	12
   174     0013                     _SSPBUF	set	19
   175     0014                     _SSPCON	set	20
   176     0094                     _SSPSTATbits	set	148
   177     0094                     _SSPSTAT	set	148
   178     0087                     _TRISCbits	set	135
   179     0086                     _TRISBbits	set	134
   180                           
   181                           	psect	cinit
   182     07FB                     start_initialization:	
   183                           ; #config settings
   184                           
   185     07FB                     __initialization:
   186                           
   187                           ; Clear objects allocated to COMMON
   188     07FB  01F8               	clrf	__pbssCOMMON& (0+127)
   189     07FC                     end_of_initialization:	
   190                           ;End of C runtime variable initialization code
   191                           
   192     07FC                     __end_of__initialization:
   193     07FC  0183               	clrf	3
   194     07FD  120A  118A  2FBB   	ljmp	_main	;jump to C main() function
   195                           
   196                           	psect	bssCOMMON
   197     0078                     __pbssCOMMON:
   198     0078                     _spi_data:
   199     0078                     	ds	1
   200                           
   201                           	psect	cstackCOMMON
   202     0070                     __pcstackCOMMON:
   203     0070                     ?_int_Port:
   204     0070                     ??_int_Port:	
   205                           ; 1 bytes @ 0x0
   206                           
   207     0070                     ?_int_spi:	
   208                           ; 1 bytes @ 0x0
   209                           
   210     0070                     ??_int_spi:	
   211                           ; 1 bytes @ 0x0
   212                           
   213     0070                     ?_spi_send:	
   214                           ; 1 bytes @ 0x0
   215                           
   216     0070                     ?_spi_read:	
   217                           ; 1 bytes @ 0x0
   218                           
   219     0070                     ??_spi_read:	
   220                           ; 1 bytes @ 0x0
   221                           
   222     0070                     ?_main:	
   223                           ; 1 bytes @ 0x0
   224                           
   225     0070                     ?_spi_write:	
   226                           ; 1 bytes @ 0x0
   227                           
   228     0070                     spi_write@value:	
   229                           ; 1 bytes @ 0x0
   230                           
   231                           
   232                           ; 2 bytes @ 0x0
   233     0070                     	ds	2
   234     0072                     ??_spi_send:
   235     0072                     ??_spi_write:	
   236                           ; 1 bytes @ 0x2
   237                           
   238                           
   239                           ; 1 bytes @ 0x2
   240     0072                     	ds	2
   241     0074                     spi_send@data:
   242                           
   243                           ; 1 bytes @ 0x4
   244     0074                     	ds	1
   245     0075                     ??_main:
   246                           
   247                           ; 1 bytes @ 0x5
   248     0075                     	ds	3
   249                           
   250                           	psect	maintext
   251     07BB                     __pmaintext:	
   252 ;;
   253 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   254 ;;
   255 ;; *************** function _main *****************
   256 ;; Defined at:
   257 ;;		line 24 in file "main.c"
   258 ;; Parameters:    Size  Location     Type
   259 ;;		None
   260 ;; Auto vars:     Size  Location     Type
   261 ;;		None
   262 ;; Return value:  Size  Location     Type
   263 ;;                  1    wreg      void 
   264 ;; Registers used:
   265 ;;		wreg, status,2, status,0, pclath, cstack
   266 ;; Tracked objects:
   267 ;;		On entry : B00/0
   268 ;;		On exit  : 0/0
   269 ;;		Unchanged: 0/0
   270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   271 ;;      Params:         0       0       0       0       0
   272 ;;      Locals:         0       0       0       0       0
   273 ;;      Temps:          3       0       0       0       0
   274 ;;      Totals:         3       0       0       0       0
   275 ;;Total ram usage:        3 bytes
   276 ;; Hardware stack levels required when called: 2
   277 ;; This function calls:
   278 ;;		_int_Port
   279 ;;		_int_spi
   280 ;;		_spi_read
   281 ;;		_spi_send
   282 ;; This function is called by:
   283 ;;		Startup code after reset
   284 ;; This function uses a non-reentrant model
   285 ;;
   286                           
   287     07BB                     _main:	
   288                           ;psect for function _main
   289                           
   290     07BB                     l691:	
   291                           ;incstack = 0
   292                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   293                           
   294                           
   295                           ;main.c: 25: void int_Port(){
   296     07BB  120A  118A  2784  120A  118A  	fcall	_int_Port
   297     07C0                     l693:
   298                           
   299                           ;main.c: 26:     TRISBbits.TRISB0 = 0 ;
   300     07C0  120A  118A  278B  120A  118A  	fcall	_int_spi
   301     07C5                     l695:
   302                           
   303                           ;main.c: 28:     TRISCbits.TRISC4 = 1 ;
   304     07C5  3005               	movlw	5
   305     07C6  120A  118A  27A7  120A  118A  	fcall	_spi_send
   306     07CB                     l697:
   307                           
   308                           ;main.c: 29:     TRISCbits.TRISC5 = 0 ;
   309     07CB  301A               	movlw	26
   310     07CC  00F7               	movwf	??_main+2
   311     07CD  305E               	movlw	94
   312     07CE  00F6               	movwf	??_main+1
   313     07CF  306E               	movlw	110
   314     07D0  00F5               	movwf	??_main
   315     07D1                     u47:
   316     07D1  0BF5               	decfsz	??_main,f
   317     07D2  2FD1               	goto	u47
   318     07D3  0BF6               	decfsz	??_main+1,f
   319     07D4  2FD1               	goto	u47
   320     07D5  0BF7               	decfsz	??_main+2,f
   321     07D6  2FD1               	goto	u47
   322     07D7  0000               	nop
   323                           
   324                           ;main.c: 30: }
   325     07D8  3006               	movlw	6
   326     07D9  120A  118A  27A7  120A  118A  	fcall	_spi_send
   327     07DE                     l699:
   328                           
   329                           ;main.c: 31: void int_spi(){
   330     07DE  120A  118A  2793  120A  118A  	fcall	_spi_read
   331     07E3  00F8               	movwf	_spi_data
   332     07E4                     l701:
   333                           
   334                           ;main.c: 32:     SSPCON = 0x20;
   335     07E4  301A               	movlw	26
   336     07E5  00F7               	movwf	??_main+2
   337     07E6  305E               	movlw	94
   338     07E7  00F6               	movwf	??_main+1
   339     07E8  306E               	movlw	110
   340     07E9  00F5               	movwf	??_main
   341     07EA                     u57:
   342     07EA  0BF5               	decfsz	??_main,f
   343     07EB  2FEA               	goto	u57
   344     07EC  0BF6               	decfsz	??_main+1,f
   345     07ED  2FEA               	goto	u57
   346     07EE  0BF7               	decfsz	??_main+2,f
   347     07EF  2FEA               	goto	u57
   348     07F0  0000               	nop
   349     07F1                     l703:
   350                           
   351                           ;main.c: 33:     SSPSTAT = 0x00;
   352     07F1  0878               	movf	_spi_data,w
   353     07F2  120A  118A  27A7  120A  118A  	fcall	_spi_send
   354     07F7                     l33:	
   355                           ;main.c: 34: }
   356                           
   357     07F7                     l34:	
   358                           ;main.c: 36:     SSPBUF = value ;
   359                           
   360     07F7  2FF7               	goto	l33
   361     07F8  120A  118A  2800   	ljmp	start
   362     07FB                     __end_of_main:
   363                           
   364                           	psect	text1
   365     07A7                     __ptext1:	
   366 ;; *************** function _spi_send *****************
   367 ;; Defined at:
   368 ;;		line 61 in file "main.c"
   369 ;; Parameters:    Size  Location     Type
   370 ;;  data            1    wreg     unsigned char 
   371 ;; Auto vars:     Size  Location     Type
   372 ;;  data            1    4[COMMON] unsigned char 
   373 ;; Return value:  Size  Location     Type
   374 ;;                  1    wreg      void 
   375 ;; Registers used:
   376 ;;		wreg, status,2, status,0, pclath, cstack
   377 ;; Tracked objects:
   378 ;;		On entry : 0/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   382 ;;      Params:         0       0       0       0       0
   383 ;;      Locals:         1       0       0       0       0
   384 ;;      Temps:          2       0       0       0       0
   385 ;;      Totals:         3       0       0       0       0
   386 ;;Total ram usage:        3 bytes
   387 ;; Hardware stack levels used: 1
   388 ;; Hardware stack levels required when called: 1
   389 ;; This function calls:
   390 ;;		_spi_write
   391 ;; This function is called by:
   392 ;;		_main
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396     07A7                     _spi_send:	
   397                           ;psect for function _spi_send
   398                           
   399                           
   400                           ;incstack = 0
   401                           ; Regs used in _spi_send: [wreg+status,2+status,0+pclath+cstack]
   402                           ;spi_send@data stored from wreg
   403     07A7  00F4               	movwf	spi_send@data
   404     07A8                     l685:
   405     07A8  1283               	bcf	3,5	;RP0=0, select bank0
   406     07A9  1303               	bcf	3,6	;RP1=0, select bank0
   407     07AA  1006               	bcf	6,0	;volatile
   408     07AB                     l687:
   409     07AB  0874               	movf	spi_send@data,w
   410     07AC  00F2               	movwf	??_spi_send
   411     07AD  01F3               	clrf	??_spi_send+1
   412     07AE  0872               	movf	??_spi_send,w
   413     07AF  00F0               	movwf	spi_write@value
   414     07B0  0873               	movf	??_spi_send+1,w
   415     07B1  00F1               	movwf	spi_write@value+1
   416     07B2  120A  118A  279C  120A  118A  	fcall	_spi_write
   417     07B7                     l689:
   418     07B7  1283               	bcf	3,5	;RP0=0, select bank0
   419     07B8  1303               	bcf	3,6	;RP1=0, select bank0
   420     07B9  1406               	bsf	6,0	;volatile
   421     07BA                     l57:
   422     07BA  0008               	return
   423     07BB                     __end_of_spi_send:
   424                           
   425                           	psect	text2
   426     079C                     __ptext2:	
   427 ;; *************** function _spi_write *****************
   428 ;; Defined at:
   429 ;;		line 49 in file "main.c"
   430 ;; Parameters:    Size  Location     Type
   431 ;;  value           2    0[COMMON] unsigned int 
   432 ;; Auto vars:     Size  Location     Type
   433 ;;		None
   434 ;; Return value:  Size  Location     Type
   435 ;;                  1    wreg      void 
   436 ;; Registers used:
   437 ;;		wreg
   438 ;; Tracked objects:
   439 ;;		On entry : 0/0
   440 ;;		On exit  : 0/0
   441 ;;		Unchanged: 0/0
   442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   443 ;;      Params:         2       0       0       0       0
   444 ;;      Locals:         0       0       0       0       0
   445 ;;      Temps:          0       0       0       0       0
   446 ;;      Totals:         2       0       0       0       0
   447 ;;Total ram usage:        2 bytes
   448 ;; Hardware stack levels used: 1
   449 ;; This function calls:
   450 ;;		Nothing
   451 ;; This function is called by:
   452 ;;		_spi_send
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456     079C                     _spi_write:	
   457                           ;psect for function _spi_write
   458                           
   459     079C                     l683:	
   460                           ;incstack = 0
   461                           ; Regs used in _spi_write: [wreg]
   462                           
   463                           
   464                           ;main.c: 50:     PORTBbits.RB0 = 1 ;
   465     079C  0870               	movf	spi_write@value,w
   466     079D  1283               	bcf	3,5	;RP0=0, select bank0
   467     079E  1303               	bcf	3,6	;RP1=0, select bank0
   468     079F  0093               	movwf	19	;volatile
   469     07A0                     l45:	
   470                           ;main.c: 51: }
   471                           
   472     07A0  1683               	bsf	3,5	;RP0=1, select bank1
   473     07A1  1303               	bcf	3,6	;RP1=0, select bank1
   474     07A2  1C14               	btfss	20,0	;volatile
   475     07A3  2FA5               	goto	u31
   476     07A4  2FA6               	goto	u30
   477     07A5                     u31:
   478     07A5  2FA0               	goto	l45
   479     07A6                     u30:
   480     07A6                     l48:
   481     07A6  0008               	return
   482     07A7                     __end_of_spi_write:
   483                           
   484                           	psect	text3
   485     0793                     __ptext3:	
   486 ;; *************** function _spi_read *****************
   487 ;; Defined at:
   488 ;;		line 55 in file "main.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;		None
   491 ;; Auto vars:     Size  Location     Type
   492 ;;		None
   493 ;; Return value:  Size  Location     Type
   494 ;;                  1    wreg      unsigned char 
   495 ;; Registers used:
   496 ;;		wreg, status,2
   497 ;; Tracked objects:
   498 ;;		On entry : 0/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   502 ;;      Params:         0       0       0       0       0
   503 ;;      Locals:         0       0       0       0       0
   504 ;;      Temps:          0       0       0       0       0
   505 ;;      Totals:         0       0       0       0       0
   506 ;;Total ram usage:        0 bytes
   507 ;; Hardware stack levels used: 1
   508 ;; This function calls:
   509 ;;		Nothing
   510 ;; This function is called by:
   511 ;;		_main
   512 ;; This function uses a non-reentrant model
   513 ;;
   514                           
   515     0793                     _spi_read:	
   516                           ;psect for function _spi_read
   517                           
   518     0793                     l663:	
   519                           ;incstack = 0
   520                           ; Regs used in _spi_read: [wreg+status,2]
   521                           
   522     0793  1283               	bcf	3,5	;RP0=0, select bank0
   523     0794  1303               	bcf	3,6	;RP1=0, select bank0
   524     0795  0193               	clrf	19	;volatile
   525     0796                     l51:
   526     0796  1D8C               	btfss	12,3	;volatile
   527     0797  2F99               	goto	u21
   528     0798  2F9A               	goto	u20
   529     0799                     u21:
   530     0799  2F96               	goto	l51
   531     079A                     u20:
   532     079A                     l665:
   533     079A  0813               	movf	19,w	;volatile
   534     079B                     l54:
   535     079B  0008               	return
   536     079C                     __end_of_spi_read:
   537                           
   538                           	psect	text4
   539     078B                     __ptext4:	
   540 ;; *************** function _int_spi *****************
   541 ;; Defined at:
   542 ;;		line 45 in file "main.c"
   543 ;; Parameters:    Size  Location     Type
   544 ;;		None
   545 ;; Auto vars:     Size  Location     Type
   546 ;;		None
   547 ;; Return value:  Size  Location     Type
   548 ;;                  1    wreg      void 
   549 ;; Registers used:
   550 ;;		wreg, status,2
   551 ;; Tracked objects:
   552 ;;		On entry : 0/0
   553 ;;		On exit  : 0/0
   554 ;;		Unchanged: 0/0
   555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   556 ;;      Params:         0       0       0       0       0
   557 ;;      Locals:         0       0       0       0       0
   558 ;;      Temps:          0       0       0       0       0
   559 ;;      Totals:         0       0       0       0       0
   560 ;;Total ram usage:        0 bytes
   561 ;; Hardware stack levels used: 1
   562 ;; This function calls:
   563 ;;		Nothing
   564 ;; This function is called by:
   565 ;;		_main
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569     078B                     _int_spi:	
   570                           ;psect for function _int_spi
   571                           
   572     078B                     l653:	
   573                           ;incstack = 0
   574                           ; Regs used in _int_spi: [wreg+status,2]
   575                           
   576                           
   577                           ;main.c: 46: 
   578     078B  3020               	movlw	32
   579     078C  1283               	bcf	3,5	;RP0=0, select bank0
   580     078D  1303               	bcf	3,6	;RP1=0, select bank0
   581     078E  0094               	movwf	20	;volatile
   582     078F                     l655:
   583                           
   584                           ;main.c: 47: void spi_send(unsigned char data){
   585     078F  1683               	bsf	3,5	;RP0=1, select bank1
   586     0790  1303               	bcf	3,6	;RP1=0, select bank1
   587     0791  0194               	clrf	20	;volatile
   588     0792                     l42:
   589     0792  0008               	return
   590     0793                     __end_of_int_spi:
   591                           
   592                           	psect	text5
   593     0784                     __ptext5:	
   594 ;; *************** function _int_Port *****************
   595 ;; Defined at:
   596 ;;		line 39 in file "main.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;		None
   599 ;; Auto vars:     Size  Location     Type
   600 ;;		None
   601 ;; Return value:  Size  Location     Type
   602 ;;                  1    wreg      void 
   603 ;; Registers used:
   604 ;;		None
   605 ;; Tracked objects:
   606 ;;		On entry : 0/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   610 ;;      Params:         0       0       0       0       0
   611 ;;      Locals:         0       0       0       0       0
   612 ;;      Temps:          0       0       0       0       0
   613 ;;      Totals:         0       0       0       0       0
   614 ;;Total ram usage:        0 bytes
   615 ;; Hardware stack levels used: 1
   616 ;; This function calls:
   617 ;;		Nothing
   618 ;; This function is called by:
   619 ;;		_main
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623     0784                     _int_Port:	
   624                           ;psect for function _int_Port
   625                           
   626     0784                     l651:	
   627                           ;incstack = 0
   628                           ; Regs used in _int_Port: []
   629                           
   630                           
   631                           ;main.c: 40: 
   632     0784  1683               	bsf	3,5	;RP0=1, select bank1
   633     0785  1303               	bcf	3,6	;RP1=0, select bank1
   634     0786  1006               	bcf	6,0	;volatile
   635                           
   636                           ;main.c: 41: unsigned char spi_read(){
   637     0787  1187               	bcf	7,3	;volatile
   638                           
   639                           ;main.c: 42:     SSPBUF = 0x00 ;
   640     0788  1607               	bsf	7,4	;volatile
   641                           
   642                           ;main.c: 43:     while(!PIR1bits.SSPIF);
   643     0789  1287               	bcf	7,5	;volatile
   644     078A                     l39:
   645     078A  0008               	return
   646     078B                     __end_of_int_Port:
   647     007E                     btemp	set	126	;btemp
   648     007E                     wtemp0	set	126
   649                           
   650                           	psect	idloc
   651                           
   652                           ;Config register IDLOC0 @ 0x2000
   653                           ;	unspecified, using default values
   654     2000                     	org	8192
   655     2000  3FFF               	dw	16383
   656                           
   657                           ;Config register IDLOC1 @ 0x2001
   658                           ;	unspecified, using default values
   659     2001                     	org	8193
   660     2001  3FFF               	dw	16383
   661                           
   662                           ;Config register IDLOC2 @ 0x2002
   663                           ;	unspecified, using default values
   664     2002                     	org	8194
   665     2002  3FFF               	dw	16383
   666                           
   667                           ;Config register IDLOC3 @ 0x2003
   668                           ;	unspecified, using default values
   669     2003                     	org	8195
   670     2003  3FFF               	dw	16383
   671                           
   672                           	psect	config
   673                           
   674                           ;Config register CONFIG @ 0x2007
   675                           ;	Oscillator Selection bits
   676                           ;	FOSC = EXTRC, RC oscillator
   677                           ;	Watchdog Timer Enable bit
   678                           ;	WDTE = OFF, WDT disabled
   679                           ;	Power-up Timer Enable bit
   680                           ;	PWRTE = OFF, PWRT disabled
   681                           ;	Brown-out Reset Enable bit
   682                           ;	BOREN = ON, BOR enabled
   683                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   684                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   685                           ;	Data EEPROM Memory Code Protection bit
   686                           ;	CPD = OFF, Data EEPROM code protection off
   687                           ;	Flash Program Memory Write Enable bits
   688                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   689                           ;	In-Circuit Debugger Mode bit
   690                           ;	DEBUG = 0x1, unprogrammed default
   691                           ;	Flash Program Memory Code Protection bit
   692                           ;	CP = OFF, Code protection off
   693     2007                     	org	8199
   694     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spi_send
    _spi_send->_spi_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     120
                                              5 COMMON     3     3      0
                           _int_Port
                            _int_spi
                           _spi_read
                           _spi_send
 ---------------------------------------------------------------------------------
 (1) _spi_send                                             3     3      0     120
                                              2 COMMON     3     3      0
                          _spi_write
 ---------------------------------------------------------------------------------
 (2) _spi_write                                            2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _spi_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _int_spi                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _int_Port                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _int_Port
   _int_spi
   _spi_read
   _spi_send
     _spi_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 08 10:18:00 2022

            _SSPSTATbits 0094                       l33 07F7                       l42 0792  
                     l34 07F7                       l51 0796                       l45 07A0  
                     l54 079B                       l39 078A                       l48 07A6  
                     l57 07BA                       u20 079A                       u21 0799  
                     u30 07A6                       u31 07A5                       u47 07D1  
                     u57 07EA                      l701 07E4                      l703 07F1  
                    l651 0784                      l653 078B                      l655 078F  
                    l663 0793                      l665 079A                      l683 079C  
                    l691 07BB                      l685 07A8                      l693 07C0  
                    l687 07AB                      l695 07C5                      l689 07B7  
                    l697 07CB                      l699 07DE                     _main 07BB  
                   btemp 007E                     start 0000             spi_send@data 0074  
                  ?_main 0070          __end_of_int_spi 0793                    status 0003  
                  wtemp0 007E          __initialization 07FB             __end_of_main 07FB  
                 ??_main 0075                   _SSPCON 0014                   _SSPBUF 0013  
       __end_of_int_Port 078B                ??_int_spi 0070         __end_of_spi_read 079C  
       __end_of_spi_send 07BB  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 07BB                  _SSPSTAT 0094                ?_int_Port 0070  
              ?_spi_read 0070                ?_spi_send 0070                  __ptext1 07A7  
                __ptext2 079C                  __ptext3 0793                  __ptext4 078B  
                __ptext5 0784                  _int_spi 078B     end_of_initialization 07FC  
             ??_int_Port 0070        __end_of_spi_write 07A7               ??_spi_read 0070  
             ??_spi_send 0072                _PORTBbits 0006                _TRISBbits 0086  
              _TRISCbits 0087           spi_write@value 0070      start_initialization 07FB  
            __pbssCOMMON 0078                ___latbits 0002                 ?_int_spi 0070  
               _PIR1bits 000C                _spi_write 079C               ?_spi_write 0070  
               _int_Port 0784                 _spi_data 0078                 _spi_read 0793  
               _spi_send 07A7              ??_spi_write 0072  
